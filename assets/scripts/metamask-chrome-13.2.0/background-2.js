LavaPack.loadBundle([[208,{"../../../../shared/constants/app":4975,"../../../../shared/constants/keyring":4985,"../../../../shared/constants/transaction":5009,"../ppom/ppom-util":159,"@metamask/eth-json-rpc-middleware":1376,"@metamask/rpc-errors":1958,"@metamask/transaction-controller":2316,"@metamask/utils":2361,uuid:4918},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.AtomicCapabilityStatus=void 0,r.getCallsStatus=function(e,t){const r=e.call("TransactionController:getState").transactions.filter(e=>e.batchId===t);if(null==r||!r.length)throw new n.JsonRpcError(l.EIP5792ErrorCode.UnknownBundleId,"No matching bundle found");const s=r[0],{chainId:a,txReceipt:c}=s,d=function(e){const{hash:t,status:r}=e;if(r===o.TransactionStatus.confirmed)return i.GetCallsStatusCode.CONFIRMED;if(r===o.TransactionStatus.failed)return t?i.GetCallsStatusCode.REVERTED:i.GetCallsStatusCode.FAILED_OFFCHAIN;if(r===o.TransactionStatus.dropped)return i.GetCallsStatusCode.REVERTED;return i.GetCallsStatusCode.PENDING}(s),u=c,p=(null==u?void 0:u.logs)??[],g=u&&[{blockHash:u.blockHash,blockNumber:u.blockNumber,gasUsed:u.gasUsed,logs:p.map(e=>({address:e.address,data:e.data,topics:e.topics})),status:u.status,transactionHash:u.transactionHash}];return{version:h,id:t,chainId:a,atomic:!0,status:d,receipts:g}},r.getCapabilities=async function(e,t,r,n){var o;const{getDismissSmartAccountSuggestionEnabled:s,getIsSmartTransaction:i,isAtomicBatchSupported:a,isRelaySupported:l,getSendBundleSupportedChains:c}=e;let u=null==n?void 0:n.map(e=>e.toLowerCase());if(null===(o=u)||void 0===o||!o.length){const e=t.call("NetworkController:getState").networkConfigurationsByChainId;u=Object.keys(e)}const h=await a({address:r,chainIds:u}),g=await async function(e,t,r,n,o,s){const i=s.call("PreferencesController:getState").useTransactionSimulations,a=await Promise.all(t.map(({chainId:e})=>e).map(e=>n(e))),l=await o(e),c=t.map((e,t)=>({...e,relaySupportedForChain:a[t]}));return e.reduce((e,t)=>{const n=c.find(({chainId:e})=>e===t)??{},{isSupported:o=!1,relaySupportedForChain:s}=n,a=r(t),d=l[t]??!1;return i&&(a&&d||o&&s)&&(e[t]={alternateGasFees:{supported:!0}}),e},{})}(u,h,i,l,c,t);return u.reduce((e,n)=>{const o=h.find(({chainId:e})=>e===n)??{},{delegationAddress:i,isSupported:a,upgradeContractAddress:l}=o,c=s();let u=!1;try{const e=C(r,t);u=d.KEYRING_TYPES_SUPPORTING_7702.includes(e)}catch(e){}if(!a&&!(!c&&l&&!i&&u))return e;const g=a?p.Supported:p.Ready;return e[n]===undefined&&(e[n]={}),e[n].atomic={status:g},e},g)},r.processSendCalls=async function(e,t,r,i){const{addTransactionBatch:p,addTransaction:h,getDismissSmartAccountSuggestionEnabled:y,isAtomicBatchSupported:v,validateSecurity:b}=e,{calls:w,from:k}=r,{networkClientId:S,origin:T}=i,M=w.map(e=>({params:e})),{chainId:A}=t.call("NetworkController:getNetworkClientById",S).configuration,P=k??t.call("AccountsController:getSelectedAccount").address,E=(0,u.generateSecurityAlertId)(),I=b.bind(null,E);let _;_=1===Object.keys(M).length?await async function({addTransaction:e,chainId:t,from:r,networkClientId:n,origin:i,securityAlertId:l,sendCalls:d,transactions:u,validateSecurity:p}){!function(e,t){g(e),f(e),m(e,t)}(d,t);const h={from:r,...u[0].params,type:o.TransactionEnvelopeType.feeMarket},C={method:c.MESSAGE_TYPE.ETH_SEND_TRANSACTION,params:[h],origin:i};p(C,t);const y=function(){const e=(0,a.v4)(),t=new Uint8Array((0,a.parse)(e));return(0,s.bytesToHex)(t)}();return await e(h,{networkClientId:n,origin:i,securityAlertResponse:{securityAlertId:l},batchId:y}),y}({addTransaction:h,chainId:A,from:P,networkClientId:S,origin:T,securityAlertId:E,sendCalls:r,transactions:M,validateSecurity:I}):await async function({addTransactionBatch:e,isAtomicBatchSupported:t,chainId:r,from:o,getDismissSmartAccountSuggestionEnabled:s,networkClientId:i,messenger:a,origin:c,sendCalls:u,securityAlertId:p,transactions:h,validateSecurity:y}){const v=await t({address:o,chainIds:[r]}),b=null==v?void 0:v[0],w=C(o,a),k=s();!function(e,t,r,o,s){g(e),function(e,t,r){if(m(e,t),!r)throw new n.JsonRpcError(l.EIP5792ErrorCode.UnsupportedChainId,`EIP-7702 not supported on chain: ${t}`)}(e,t,o),f(e),function(e,t,r){if(null!=t&&t.delegationAddress)return;if(e)throw new n.JsonRpcError(l.EIP5792ErrorCode.RejectedUpgrade,"EIP-7702 upgrade disabled by the user");if(!d.KEYRING_TYPES_SUPPORTING_7702.includes(r))throw new n.JsonRpcError(l.EIP5792ErrorCode.RejectedUpgrade,"EIP-7702 upgrade not supported on account")}(r,o,s)}(u,r,k,b,w);const S=await e({from:o,networkClientId:i,origin:c,securityAlertId:p,transactions:h,validateSecurity:y});return S.batchId}({addTransactionBatch:p,isAtomicBatchSupported:v,chainId:A,from:P,getDismissSmartAccountSuggestionEnabled:y,messenger:t,networkClientId:S,origin:T,sendCalls:r,securityAlertId:E,transactions:M,validateSecurity:I});return{id:_}};var n=e("@metamask/rpc-errors"),o=e("@metamask/transaction-controller"),s=e("@metamask/utils"),i=e("@metamask/eth-json-rpc-middleware"),a=e("uuid"),l=e("../../../../shared/constants/transaction"),c=e("../../../../shared/constants/app"),d=e("../../../../shared/constants/keyring"),u=e("../ppom/ppom-util");let p=r.AtomicCapabilityStatus=function(e){return e.Supported="supported",e.Ready="ready",e.Unsupported="unsupported",e}({});const h="2.0.0";function g(e){const{version:t}=e;if(t!==h)throw n.rpcErrors.invalidInput(`Version not supported: Got ${t}, expected ${h}`)}function m(e,t){const{chainId:r}=e;if(r&&r.toLowerCase()!==t.toLowerCase())throw n.rpcErrors.invalidParams(`Chain ID must match the dApp selected network: Got ${r}, expected ${t}`)}function f(e){const{calls:t,capabilities:r}=e,o=[...Object.keys(r??{}).filter(e=>!0!==(null==r?void 0:r[e].optional)),...t.flatMap(e=>Object.keys(e.capabilities??{}).filter(t=>{var r;return!0!==(null===(r=e.capabilities)||void 0===r?void 0:r[t].optional)}))];if(null!=o&&o.length)throw new n.JsonRpcError(l.EIP5792ErrorCode.UnsupportedNonOptionalCapability,`Unsupported non-optional capabilities: ${o.join(", ")}`)}function C(e,t){var r;const{accounts:o}=t.call("AccountsController:getState").internalAccounts,s=Object.values(o).find(t=>t.address.toLowerCase()===e.toLowerCase()),i=null==s||null===(r=s.metadata)||void 0===r||null===(r=r.keyring)||void 0===r?void 0:r.type;if(!i)throw new n.JsonRpcError(l.EIP5792ErrorCode.RejectedUpgrade,"EIP-7702 upgrade not supported as account type is unknown");return i}}}},{package:"$root$",file:"app/scripts/lib/transaction/eip5792.ts"}],[209,{"../delegation":207,"../transaction-relay":213,"@ethersproject/abi":552,"@metamask/metamask-eth-abis":1621,"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.Delegation7702PublishHook=void 0;var n=e("@metamask/utils"),o=e("@metamask/metamask-eth-abis"),s=e("@ethersproject/abi"),i=e("../delegation"),a=e("../transaction-relay");function l(e,t,r){c(e,t),t.set(e,r)}function c(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function d(e,t){return e.get(p(e,t))}function u(e,t,r){return e.set(p(e,t),r),r}function p(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const h="0x",g={transactionHash:undefined},m=(0,n.createProjectLogger)("delegation-7702-publish-hook");var f=new WeakMap,C=new WeakMap,y=new WeakSet;async function v(e,t){try{return await p(y,this,b).call(this,e,t)}catch(e){throw m("Error",e),e}}async function b(e,t){const{chainId:r,gasFeeTokens:n,selectedGasFeeToken:o,txParams:s}=e,{from:l}=s,c=(await d(f,this).call(this,{address:l,chainIds:[r]})).find(e=>e.chainId.toLowerCase()===r.toLowerCase());if(!(c&&(!c.delegationAddress||c.isSupported)))return m("Skipping as EIP-7702 is not supported",{from:l,chainId:r}),g;const{delegationAddress:u,upgradeContractAddress:h}=c;if(!o||null==n||!n.length)return m("Skipping as no selected gas fee token"),g;const C=n.find(e=>e.tokenAddress.toLowerCase()===o.toLowerCase());if(!C)throw new Error("Selected gas fee token not found");const v=await p(y,this,k).call(this,e,C),b=p(y,this,w).call(this,e,C),S=(0,i.encodeRedeemDelegations)([[v]],[i.ExecutionMode.BATCH_DEFAULT_MODE],[b]),M={chainId:r,data:S,to:"0xdb9B1e94B5b69Df7e401DDbedE43491141047dB3"};u||(M.authorizationList=await p(y,this,T).call(this,e,h)),m("Relay request",M);const{uuid:A}=await(0,a.submitRelayTransaction)(M),{transactionHash:P,status:E}=await(0,a.waitForRelayResult)({chainId:r,uuid:A,interval:1e3});if(E!==a.RelayStatus.Success)throw new Error(`Transaction relay error - ${E}`);return{transactionHash:P}}function w(e,t){const{txParams:r}=e,{data:n,to:o,value:s}=r;return[{target:o,value:s??"0x0",callData:n??h},{target:t.tokenAddress,value:"0x0",callData:p(y,this,M).call(this,t.recipient,t.amount)}]}async function k(e,t){const{chainId:r,txParams:n}=e,{from:o}=n,s=p(y,this,S).call(this,n,t);m("Caveats",s);const a={authority:i.ROOT_AUTHORITY,caveats:s,delegate:i.ANY_BENEFICIARY,delegator:o,salt:(new Date).getTime()};m("Unsigned delegation",a);const l=await(0,i.signDelegation)({chainId:r,delegation:a,from:o,messenger:d(C,this)});return m("Delegation signature",l),{...a,signature:l}}function S(e,t){const{amount:r,recipient:o,tokenAddress:s}=t,{data:i,to:a}=e,l=(0,n.add0x)((0,n.remove0x)(r).padStart(64,"0"));return[{enforcer:"0x00e0251aaA263dfE3B3541B758A82D1CBA1c3B6D",terms:(0,n.add0x)([s,o,l,a,i??h].map(n.remove0x).join("")),args:h}]}async function T(e,t){const{chainId:r,txParams:n}=e,{from:o,nonce:s}=n;if(m("Including authorization as not upgraded"),!t)throw new Error("Upgrade contract address not found");const i=await d(C,this).call("KeyringController:signEip7702Authorization",{chainId:parseInt(r,16),contractAddress:t,from:o,nonce:parseInt(s,16)}),{r:a,s:l,yParity:c}=p(y,this,A).call(this,i);return m("Authorization signature",{authorizationSignature:i,r:a,s:l,yParity:c}),[{address:t,chainId:r,nonce:s,r:a,s:l,yParity:c}]}function M(e,t){return new s.Interface(o.abiERC20).encodeFunctionData("transfer",[e,t])}function A(e){return{r:e.slice(0,66),s:`0x${e.slice(66,130)}`,yParity:parseInt(e.slice(130,132),16)-27==0?"0x":"0x1"}}r.Delegation7702PublishHook=class{constructor({isAtomicBatchSupported:e,messenger:t}){var r,n;c(r=this,n=y),n.add(r),l(this,f,void 0),l(this,C,void 0),u(f,this,e),u(C,this,t)}getHook(){return p(y,this,v).bind(this)}}}}},{package:"$root$",file:"app/scripts/lib/transaction/hooks/delegation-7702-publish.ts"}],[21,{"@metamask/profile-sync-controller/auth":1860,"@metamask/profile-sync-controller/sdk":1885},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.AuthenticationControllerInit=void 0;var n=e("@metamask/profile-sync-controller/auth"),o=e("@metamask/profile-sync-controller/sdk");r.AuthenticationControllerInit=({controllerMessenger:e,persistedState:t,getMetaMetricsId:r})=>({controller:new n.Controller({messenger:e,state:t.AuthenticationController,metametrics:{getMetaMetricsId:r,agent:o.Platform.EXTENSION}})})}}},{package:"$root$",file:"app/scripts/controller-init/identity/authentication-controller-init.ts"}],[210,{"../containers/util":200,"@metamask/controller-utils":1315,"@metamask/transaction-controller":2316,"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.EnforceSimulationHook=void 0;e("@metamask/transaction-controller");var n=e("@metamask/utils");e("@metamask/controller-utils"),e("../containers/util");function o(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function s(e,t){return e.get(i(e,t))}function i(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const a=(0,n.createProjectLogger)("enforce-simulation-hook");var l=new WeakMap,c=new WeakSet;async function d(e,t){const{transactionMeta:r}=t,{isFinal:n}=e,{containerTypes:o,delegationAddress:i,id:c,origin:d,simulationData:u,txParamsOriginal:p}=r,h=s(l,this).call("AppStateController:getState");(null==h?void 0:h.enableEnforcedSimulationsForTransactions[c])??(null==h||h.enableEnforcedSimulations);return a("Skipping as enforced simulations are disabled"),{skipSimulation:!1}}r.EnforceSimulationHook=class{constructor({messenger:e}){var t,r;o(t=this,r=c),r.add(t),function(e,t,r){o(e,t),t.set(e,r)}(this,l,void 0),function(e,t,r){e.set(i(e,t),r)}(l,this,e)}getAfterSimulateHook(){return i(c,this,d).bind(this,{})}getBeforeSignHook(){return i(c,this,d).bind(this,{isFinal:!0})}}}}},{package:"$root$",file:"app/scripts/lib/transaction/hooks/enforce-simulation-hook.ts"}],[211,{"../../../../shared/constants/app":4975,"../../../../shared/constants/gas":4983,"../../../../shared/constants/metametrics":4989,"../../../../shared/constants/transaction":5009,"../../../../shared/lib/confirmation.utils":5022,"../../../../shared/lib/transactions-controller-utils":5073,"../../../../shared/modules/Numeric":5078,"../../../../shared/modules/conversion.utils":5083,"../../../../shared/modules/gas.utils":5088,"../../../../shared/modules/metametrics":5091,"../../../../shared/modules/transaction.utils":5105,"../../../../ui/helpers/utils/metrics":6190,"../snap-keyring/metrics":186,"../util":220,"@metamask/transaction-controller":2316,"@metamask/utils":2361,"bignumber.js":3209,"ethereumjs-util":3575},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.handleTransactionSubmitted=r.handleTransactionRejected=r.handleTransactionFailed=r.handleTransactionDropped=r.handleTransactionConfirmed=r.handleTransactionApproved=r.handleTransactionAdded=r.handlePostTransactionBalanceUpdate=r.createTransactionEventFragmentWithTxId=r.METRICS_STATUS_FAILED=void 0;var n=e("bignumber.js"),o=e("ethereumjs-util"),s=e("@metamask/transaction-controller"),i=e("@metamask/utils"),a=e("../../../../shared/constants/app"),l=e("../../../../shared/constants/gas"),c=e("../../../../shared/constants/metametrics"),d=e("../../../../shared/constants/transaction"),u=e("../../../../shared/lib/transactions-controller-utils"),p=e("../../../../shared/modules/conversion.utils"),h=e("../../../../shared/modules/metametrics"),g=e("../../../../shared/modules/transaction.utils"),m=e("../../../../ui/helpers/utils/metrics"),f=e("../snap-keyring/metrics"),C=e("../../../../shared/lib/confirmation.utils"),y=e("../../../../shared/modules/gas.utils"),v=e("../../../../shared/modules/Numeric"),b=e("../util");const w=(0,i.createProjectLogger)("transaction-metrics"),k=r.METRICS_STATUS_FAILED="failed on-chain",S=[s.TransactionType.bridge,s.TransactionType.bridgeApproval,s.TransactionType.contractInteraction,s.TransactionType.tokenMethodApprove,s.TransactionType.tokenMethodIncreaseAllowance,s.TransactionType.tokenMethodSafeTransferFrom,s.TransactionType.tokenMethodSetApprovalForAll,s.TransactionType.tokenMethodTransfer,s.TransactionType.tokenMethodTransferFrom,s.TransactionType.swap,s.TransactionType.swapAndSend,s.TransactionType.swapApproval];var T=function(e){return e.swap="mm_swap",e.bridge="mm_bridge",e}(T||{});r.handleTransactionAdded=async(e,t)=>{if(!t.transactionMeta)return;const{properties:r,sensitiveProperties:n}=await E({transactionEventPayload:t,transactionMetricsRequest:e});M({eventName:d.TransactionMetaMetricsEvent.added,transactionEventPayload:t,transactionMetricsRequest:e,payload:{properties:r,sensitiveProperties:n}})};r.handleTransactionApproved=async(e,t)=>{t.transactionMeta&&await A({eventName:d.TransactionMetaMetricsEvent.approved,transactionEventPayload:t,transactionMetricsRequest:e})};r.handleTransactionFailed=async(e,t)=>{if(!t.transactionMeta)return;const r={};t.error&&(r.error=t.error),await A({eventName:d.TransactionMetaMetricsEvent.finalized,extraParams:r,transactionEventPayload:t,transactionMetricsRequest:e})};r.handleTransactionConfirmed=async(e,t)=>{if(0===Object.keys(t).length)return;const r={},n={...t},{txReceipt:o}=n;r.gas_used=null==o?void 0:o.gasUsed,r.block_number=(null==o?void 0:o.blockNumber)&&(0,p.hexToDecimal)(o.blockNumber);const{submittedTime:s,blockTimestamp:i}=n;s&&(r.completion_time=function(e){return Math.round((Date.now()-e)/1e3).toString()}(s)),s&&i&&(r.completion_time_onchain=function(e,t){const r=2,n=Number((0,p.hexToDecimal)(t))-e/1e3;return(Math.round(n*10**r)/10**r).toString()}(s,i)),"0x0"===(null==o?void 0:o.status)&&(r.status=k),await A({eventName:d.TransactionMetaMetricsEvent.finalized,extraParams:r,transactionEventPayload:{actionId:n.actionId,transactionMeta:n},transactionMetricsRequest:e})};r.handleTransactionDropped=async(e,t)=>{if(!t.transactionMeta)return;await A({eventName:d.TransactionMetaMetricsEvent.finalized,extraParams:{dropped:!0},transactionEventPayload:t,transactionMetricsRequest:e})};r.handleTransactionRejected=async(e,t)=>{t.transactionMeta&&await A({eventName:d.TransactionMetaMetricsEvent.rejected,transactionEventPayload:t,transactionMetricsRequest:e})};r.handleTransactionSubmitted=async(e,t)=>{if(!t.transactionMeta)return;const{properties:r,sensitiveProperties:n}=await E({transactionEventPayload:t,transactionMetricsRequest:e});M({eventName:d.TransactionMetaMetricsEvent.submitted,transactionEventPayload:t,transactionMetricsRequest:e,payload:{properties:r,sensitiveProperties:n}})};r.createTransactionEventFragmentWithTxId=async(e,{transactionId:t,actionId:r})=>{const n={...e.getTransaction(t),actionId:r},{properties:o,sensitiveProperties:s}=await E({transactionEventPayload:{transactionMeta:n},transactionMetricsRequest:e});M({eventName:d.TransactionMetaMetricsEvent.approved,transactionEventPayload:{actionId:n.actionId,transactionMeta:n},transactionMetricsRequest:e,payload:{properties:o,sensitiveProperties:s}})};function M({eventName:e,transactionEventPayload:{transactionMeta:t,actionId:r},transactionMetricsRequest:n,payload:o}){if(function(e,t,r){const n=P(t,r.id);return void 0!==e(n)}(n.getEventFragmentById,e,t)&&e!==d.TransactionMetaMetricsEvent.submitted)return;const s=P(e,t.id);switch(e){case d.TransactionMetaMetricsEvent.added:n.createEventFragment({category:c.MetaMetricsEventCategory.Transactions,initialEvent:d.TransactionMetaMetricsEvent.added,successEvent:d.TransactionMetaMetricsEvent.approved,failureEvent:d.TransactionMetaMetricsEvent.rejected,properties:o.properties,sensitiveProperties:o.sensitiveProperties,actionId:r,uniqueIdentifier:s,persist:!0});break;case d.TransactionMetaMetricsEvent.approved:case d.TransactionMetaMetricsEvent.rejected:n.createEventFragment({category:c.MetaMetricsEventCategory.Transactions,successEvent:d.TransactionMetaMetricsEvent.approved,failureEvent:d.TransactionMetaMetricsEvent.rejected,properties:o.properties,sensitiveProperties:o.sensitiveProperties,actionId:r,uniqueIdentifier:s,persist:!0});break;case d.TransactionMetaMetricsEvent.submitted:n.createEventFragment({category:c.MetaMetricsEventCategory.Transactions,initialEvent:d.TransactionMetaMetricsEvent.submitted,successEvent:d.TransactionMetaMetricsEvent.finalized,properties:o.properties,sensitiveProperties:o.sensitiveProperties,actionId:r,uniqueIdentifier:s,persist:!0});break;case d.TransactionMetaMetricsEvent.finalized:n.createEventFragment({category:c.MetaMetricsEventCategory.Transactions,successEvent:d.TransactionMetaMetricsEvent.finalized,properties:o.properties,sensitiveProperties:o.sensitiveProperties,actionId:r,uniqueIdentifier:s,persist:!0})}}async function A({eventName:e,transactionEventPayload:t,transactionMetricsRequest:r,extraParams:n={}}){const{properties:o,sensitiveProperties:s}=await E({transactionEventPayload:t,transactionMetricsRequest:r,extraParams:n});M({eventName:e,transactionEventPayload:t,transactionMetricsRequest:r,payload:{properties:o,sensitiveProperties:s}}),function({eventName:e,transactionEventPayload:{transactionMeta:t},transactionMetricsRequest:r,payload:n}){const o=P(e,t.id);switch(e){case d.TransactionMetaMetricsEvent.approved:case d.TransactionMetaMetricsEvent.rejected:case d.TransactionMetaMetricsEvent.finalized:r.updateEventFragment(o,{properties:n.properties,sensitiveProperties:n.sensitiveProperties})}}({eventName:e,transactionEventPayload:t,transactionMetricsRequest:r,payload:{properties:o,sensitiveProperties:s}}),function({eventName:e,transactionMetricsRequest:t,transactionEventPayload:{transactionMeta:r}}){const n=P(e,r.id);switch(e){case d.TransactionMetaMetricsEvent.approved:case d.TransactionMetaMetricsEvent.finalized:t.finalizeEventFragment(n);break;case d.TransactionMetaMetricsEvent.rejected:t.finalizeEventFragment(n,{abandoned:!0})}}({eventName:e,transactionEventPayload:t,transactionMetricsRequest:r})}function P(e,t){return`transaction-${e===d.TransactionMetaMetricsEvent.finalized||e===d.TransactionMetaMetricsEvent.submitted?"submitted":"added"}-${t}`}async function E({transactionEventPayload:{transactionMeta:e},transactionMetricsRequest:t,extraParams:r={}}){var k;const{type:M,time:A,status:P,chainId:E,origin:I,txParams:{gasPrice:_,gas:N,maxFeePerGas:O,maxPriorityFeePerGas:R,estimateSuggested:j,estimateUsed:D},defaultGasEstimates:x,originalType:B,replacedById:F,customTokenAmount:L,dappProposedTokenAmount:U,currentTokenBalance:$,originalApprovalAmount:G,finalApprovalAmount:K,securityProviderResponse:q,simulationFails:H,id:V,userFeeLevel:W}=e,Y=I===a.ORIGIN_METAMASK?"user":"dapp",z="dappSuggested"===W?"dapp_proposed":W,{assetType:J,tokenStandard:Q}=await(0,g.determineTransactionAssetType)(e,t.provider,t.getTokenStandardAndDetails);let Z;if(e.txParams.data){const r=await t.getMethodData(e.txParams.data);Z=null==r?void 0:r.name}const X={};if((0,g.isEIP1559Transaction)(e)?(X.max_fee_per_gas=O,X.max_priority_fee_per_gas=R):(X.gas_price=_,X.default_estimate=c.MetaMetricsEventTransactionEstimateType.DefaultEstimate),x){var ee,te;const{estimateType:r}=x;if(r){var re,ne;X.default_estimate=r===l.PriorityLevels.dAppSuggested?c.MetaMetricsEventTransactionEstimateType.DappProposed:r;let n=null===(re=e.defaultGasEstimates)||void 0===re?void 0:re.maxFeePerGas,o=null===(ne=e.defaultGasEstimates)||void 0===ne?void 0:ne.maxPriorityFeePerGas;if([l.GasRecommendations.low,l.GasRecommendations.medium,l.GasRecommendations.high].includes(r)){var oe,se;const{gasFeeEstimates:e}=await t.getEIP1559GasFeeEstimates();var ie,ae;if(null!=e&&null!==(oe=e[r])&&void 0!==oe&&oe.suggestedMaxFeePerGas)n=null===(ie=e[r])||void 0===ie?void 0:ie.suggestedMaxFeePerGas,X.default_max_fee_per_gas=n;if(null!=e&&null!==(se=e[r])&&void 0!==se&&se.suggestedMaxPriorityFeePerGas)o=null===(ae=e[r])||void 0===ae?void 0:ae.suggestedMaxPriorityFeePerGas,X.default_max_priority_fee_per_gas=o}}null!==(ee=e.defaultGasEstimates)&&void 0!==ee&&ee.gas&&(X.default_gas=e.defaultGasEstimates.gas),null!==(te=e.defaultGasEstimates)&&void 0!==te&&te.gasPrice&&(X.default_gas_price=e.defaultGasEstimates.gasPrice)}j&&(X.estimate_suggested=j),D&&(X.estimate_used=D),null!=r&&r.gas_used&&(X.gas_used=r.gas_used);const le=function(e){const t={};for(const r in e)(0,o.isHexString)(e[r])?t[r]=(0,p.hexWEIToDecGWEI)(e[r]):t[r]=e[r];return t}(X);let ce="0";e.txParams.maxFeePerGas&&(ce="2");const de="Approve";let ue,pe,he,ge,me,fe;const{transactionType:Ce,isContractInteraction:ye}=function(e,t){const r=e&&S.includes(e);if([s.TransactionType.swapAndSend,s.TransactionType.cancel,s.TransactionType.deployContract,s.TransactionType.gasPayment,s.TransactionType.batch].includes(e))return{transactionType:e,isContractInteraction:r};if(e===s.TransactionType.retry&&t)return{transactionType:t,isContractInteraction:r};if(r){const t=function(e){if(e===s.TransactionType.swap)return T.swap;if(e===s.TransactionType.bridge)return T.bridge;return null}(e);return t?{transactionType:t,isContractInteraction:!0}:{transactionType:s.TransactionType.contractInteraction,isContractInteraction:!0}}return{transactionType:s.TransactionType.simpleSend,isContractInteraction:!1}}(M,B);var ve,be;ye&&(pe=Z,me=null===(ve=e.txParams)||void 0===ve?void 0:ve.to,fe=null===(be=e.txParams)||void 0===be||null===(be=be.data)||void 0===be?void 0:be.slice(0,10),pe===de&&Q===d.TokenStandard.ERC20&&("0"===U||"0"===L?ue=d.TransactionApprovalAmountType.revoke:L&&L!==U?ue=d.TransactionApprovalAmountType.custom:U&&(ue=d.TransactionApprovalAmountType.dappProposed),he=function(e,t,r){if(e===d.TransactionApprovalAmountType.custom&&t&&r)return`${new n.BigNumber(t,10).div(r,10).times(100).round(2)}`;return null}(ue,G,K),ge=function(e,t,r){if((e===d.TransactionApprovalAmountType.custom||e===d.TransactionApprovalAmountType.dappProposed)&&t&&r)return`${new n.BigNumber(t,16).div(r,10).times(100).round(2)}`;return null}(ue,U,$)));const we=t.getTransaction(F),ke={RETRY:s.TransactionType.retry,CANCEL:s.TransactionType.cancel,SAME_NONCE:"other"};let Se;null!=r&&r.dropped&&(Se=ke.SAME_NONCE,(null==we?void 0:we.type)===s.TransactionType.cancel?Se=ke.CANCEL:(null==we?void 0:we.type)===s.TransactionType.retry&&(Se=ke.RETRY));const Te=[];let Me=null;1===(null==q?void 0:q.flagAsDangerous)?Te.push(c.MetaMetricsEventUiCustomization.FlaggedAsMalicious):2===(null==q?void 0:q.flagAsDangerous)&&Te.push(c.MetaMetricsEventUiCustomization.FlaggedAsSafetyUnknown);const Ae=(0,m.getBlockaidMetricsProps)(e);(null==Ae||null===(k=Ae.ui_customizations)||void 0===k?void 0:k.length)>0&&Te.push(...Ae.ui_customizations),H&&Te.push(c.MetaMetricsEventUiCustomization.GasEstimationFailed);(0,C.shouldUseRedesignForTransactions)({transactionMetadataType:e.type})&&(Te.push(c.MetaMetricsEventUiCustomization.RedesignedConfirmation),Me=t.getIsConfirmationAdvancedDetailsOpen());const Pe=(0,h.getSmartTransactionMetricsProperties)(t,e),Ee=(0,m.getSwapAndSendMetricsProps)(e),Ie={hd_entropy_index:t.getHDEntropyIndex()};let _e;try{_e=await t.getAccountType(t.getSelectedAddress())}catch(e){_e="error",w("Error getting account type for transaction metrics:",e)}let Ne={chain_id:E,referrer:I,source:Y,status:P,network:`${parseInt(E,16)}`,eip_1559_version:ce,gas_edit_type:"none",gas_edit_attempted:"none",gas_estimation_failed:Boolean(H),account_type:_e,device_model:await t.getDeviceModel(t.getSelectedAddress()),asset_type:J,token_standard:Q,transaction_type:Ce,transaction_speed_up:M===s.TransactionType.retry,transaction_internal_id:V,gas_fee_selected:z,...Ae,ui_customizations:Te.length>0?Te:null,transaction_advanced_view:Me,transaction_contract_method:pe?[pe]:[],...Pe,...Ee,...Ie};const Oe=await(0,f.getSnapAndHardwareInfoForMetrics)(t.getAccountType,t.getDeviceModel,t.getHardwareTypeForMetric,t.snapAndHardwareMessenger);var Re,je;(Object.assign(Ne,Oe),pe===de)&&(Ne={...Ne,simulation_receiving_assets_total_value:Ne.simulation_receiving_assets_total_value??(null==e||null===(Re=e.assetsFiatValues)||void 0===Re?void 0:Re.receiving),simulation_sending_assets_total_value:Ne.simulation_sending_assets_total_value??(null==e||null===(je=e.assetsFiatValues)||void 0===je?void 0:je.sending),transaction_approval_amount_type:ue});let De={transaction_envelope_type:(0,g.isEIP1559Transaction)(e)?u.TRANSACTION_ENVELOPE_TYPE_NAMES.FEE_MARKET:u.TRANSACTION_ENVELOPE_TYPE_NAMES.LEGACY,first_seen:A,gas_limit:N,transaction_replaced:Se,transaction_contract_address:me?[me]:[],transaction_contract_method_4byte:fe,...r,...le};if(pe===de&&(De={...De,transaction_approval_amount_vs_balance_ratio:ge,transaction_approval_amount_vs_proposed_ratio:he}),await async function(e,t,r,n){const o=origin&&origin!==a.ORIGIN_METAMASK,{delegationAddress:i,nestedTransactions:l,txParams:c}=e,{authorizationList:u}=c,p=Boolean(null==l?void 0:l.length),h=Boolean(null==u?void 0:u.length);o&&(r.api_method=p?a.MESSAGE_TYPE.WALLET_SEND_CALLS:a.MESSAGE_TYPE.ETH_SEND_TRANSACTION);p&&(r.batch_transaction_count=null==l?void 0:l.length,r.batch_transaction_method="eip7702",r.transaction_contract_method=await async function(e,t){const r=e.filter(e=>S.includes(e.type)&&e.data).map(e=>e.data),n=await Promise.all(r.map(e=>t(e)));return n.map(e=>null==e?void 0:e.name).filter(e=>null==e?void 0:e.length)}(l??[],t),n.transaction_contract_address=null==l?void 0:l.filter(e=>{var t;return S.includes(e.type)&&(null===(t=e.to)||void 0===t?void 0:t.length)}).map(e=>e.to));if(e.status===s.TransactionStatus.rejected){const{error:t}=e;r.eip7702_upgrade_rejection=h&&t.code===d.EIP5792ErrorCode.RejectedUpgrade}r.eip7702_upgrade_transaction=h,n.account_eip7702_upgraded=i}(e,t.getMethodData,Ne,De),function(e,t,r,n){var o;const{gasFeeTokens:s,selectedGasFeeToken:a}=e;t.gas_payment_tokens_available=null==s?void 0:s.map(e=>e.symbol),t.gas_paid_with=null==s||null===(o=s.find(e=>e.tokenAddress.toLowerCase()===(null==a?void 0:a.toLowerCase())))||void 0===o?void 0:o.symbol,(null==a?void 0:a.toLowerCase())===d.NATIVE_TOKEN_ADDRESS&&(t.gas_paid_with="pre-funded_ETH");t.gas_insufficient_native_asset=function(e,t){const{chainId:r,txParams:n}=e,{from:o,gas:s,gasPrice:a,maxFeePerGas:l,value:c}=n,d=t(o,r),u=(0,y.getMaximumGasTotalInHexWei)({gasLimit:s,gasPrice:a,maxFeePerGas:l}),h=(0,i.add0x)((0,p.addHexes)(u,c??"0x0"));return new v.Numeric(h,16).greaterThan(new v.Numeric(d,16))}(e,n)}(e,Ne,0,t.getAccountBalance),P===s.TransactionStatus.submitted||P===s.TransactionStatus.confirmed){const r=t.getNetworkRpcUrl(e.chainId),n=(0,b.extractRpcDomain)(r);Ne.rpc_domain=n}return{properties:Ne,sensitiveProperties:De}}r.handlePostTransactionBalanceUpdate=async({getParticipateInMetrics:e,trackEvent:t,getHDEntropyIndex:r},{transactionMeta:o,approvalTransactionMeta:s})=>{var i;if(e()&&o.swapMetaData)if("0x0"===(null===(i=o.txReceipt)||void 0===i?void 0:i.status))t({event:c.MetaMetricsEventName.SwapFailed,category:c.MetaMetricsEventCategory.Swaps,sensitiveProperties:{...o.swapMetaData},properties:{hd_entropy_index:r()}});else{var a;const e=(0,u.getSwapsTokensReceivedFromTxMeta)(o.destinationTokenSymbol,o,o.destinationTokenAddress,o.txParams.from,o.destinationTokenDecimals,s,o.chainId),i=e?`${new n.BigNumber(e,10).div(o.swapMetaData.token_to_amount,10).times(100).round(2)}%`:null,l=null!==(a=o.txReceipt)&&void 0!==a&&a.gasUsed&&o.swapMetaData.estimated_gas?`${new n.BigNumber(o.txReceipt.gasUsed,16).div(o.swapMetaData.estimated_gas,10).times(100).round(2)}%`:null,d=function(e,t){var r,o;let s="0x0";null!=t&&t.txReceipt&&(s=(0,u.calcGasTotal)(t.txReceipt.gasUsed,t.txReceipt.effectiveGasPrice));const i=(0,u.calcGasTotal)(null===(r=e.txReceipt)||void 0===r?void 0:r.gasUsed,null===(o=e.txReceipt)||void 0===o?void 0:o.effectiveGasPrice),a=new n.BigNumber(i,16).plus(s,16).toString(16);return{approvalGasCostInEth:Number((0,p.hexWEIToDecETH)(s)),tradeGasCostInEth:Number((0,p.hexWEIToDecETH)(i)),tradeAndApprovalGasCostInEth:Number((0,p.hexWEIToDecETH)(a))}}(o,s);t({event:c.MetaMetricsEventName.SwapCompleted,category:c.MetaMetricsEventCategory.Swaps,sensitiveProperties:{...o.swapMetaData,token_to_amount_received:e,quote_vs_executionRatio:i,estimated_vs_used_gasRatio:l,approval_gas_cost_in_eth:d.approvalGasCostInEth,trade_gas_cost_in_eth:d.tradeGasCostInEth,trade_and_approval_gas_cost_in_eth:d.tradeAndApprovalGasCostInEth,token_to_amount:o.swapMetaData.token_to_amount.toString(10)},properties:{hd_entropy_index:r()}})}}}}},{package:"$root$",file:"app/scripts/lib/transaction/metrics.ts"}],[212,{"../../../../shared/modules/conversion.utils":5083,"../../../../shared/modules/fetch-with-timeout":5087},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.buildUrl=d,r.getSendBundleSupportedChains=async function(e){const t=await l();return e.reduce((e,r)=>{const n=(0,o.hexToDecimal)(r),s=t[n];return e[r]=(null==s?void 0:s.sendBundle)??!1,e},{})},r.getSentinelNetworkFlags=c,r.isSendBundleSupported=async function(e){const t=await c(e);if(null==t||!t.sendBundle)return!1;return!0};var n,o=e("../../../../shared/modules/conversion.utils"),s=(n=e("../../../../shared/modules/fetch-with-timeout"))&&n.__esModule?n:{default:n};const i="https://tx-sentinel-{0}.api.cx.metamask.io/",a="networks";async function l(){const e=`${d("ethereum-mainnet")}${a}`;return(await(0,s.default)()(e)).json()}async function c(e){const t=(0,o.hexToDecimal)(e);return(await l())[t]}function d(e){return i.replace("{0}",e)}}}},{package:"$root$",file:"app/scripts/lib/transaction/sentinel-api.ts"}],[213,{"../../../../shared/modules/fetch-with-timeout":5087,"../../../../shared/modules/rpc.utils":5096,"./sentinel-api":212,"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.RelayStatus=r.RELAY_RPC_METHOD=void 0,r.isRelaySupported=async function(e){return Boolean(await u(e))},r.submitRelayTransaction=async function(e){const{chainId:t}=e,r=await u(t);if(!r)throw new Error(`Chain not supported by transaction relay - ${t}`);l("Request",r,e);const n=await(0,s.jsonRpcRequest)(r,d,[e]);return l("Response",n),n},r.waitForRelayResult=async function(e){const{chainId:t,interval:r,uuid:n}=e,o=await u(t);if(!o)throw new Error(`Chain not supported by transaction relay - ${t}`);const s=`${o}smart-transactions/${n}`;return new Promise((e,t)=>{const n=setInterval(async()=>{try{const t=await async function(e){l("Polling request",e);const t=await(0,i.default)()(e);if(l("Polling response",t),!t.ok){const e=await t.text();throw new Error(`Failed to fetch relay transaction status: ${t.status} - ${e}`)}const r=await t.json(),n=null==r?void 0:r.transactions[0],{hash:o,status:s}=n||{};return{status:s,transactionHash:o}}(s);t.status!==c.Pending&&(clearInterval(n),e(t))}catch(e){clearInterval(n),t(e)}},r)})};var n,o=e("@metamask/utils"),s=e("../../../../shared/modules/rpc.utils"),i=(n=e("../../../../shared/modules/fetch-with-timeout"))&&n.__esModule?n:{default:n},a=e("./sentinel-api");const l=(0,o.createProjectLogger)("transaction-relay");let c=r.RelayStatus=function(e){return e.Pending="PENDING",e.Success="VALIDATED",e}({});const d=r.RELAY_RPC_METHOD="eth_sendRelayTransaction";async function u(e){const t=await(0,a.getSentinelNetworkFlags)(e);return null!=t&&t.relayTransactions?(0,a.buildUrl)(t.network):(l("Chain is not supported",e),undefined)}}}},{package:"$root$",file:"app/scripts/lib/transaction/transaction-relay.ts"}],[214,{"../../../../shared/constants/security-provider":4999,"../../../../shared/lib/trace":5071,"../ppom/ppom-util":159,"@metamask/keyring-api":1559,"ethereumjs-util":3575},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.addDappTransaction=async function(e){const{dappRequest:t}=e,{id:r,method:n,origin:o}=t,{securityAlertResponse:s,traceContext:i}=t,c={actionId:r,method:n,origin:o,requireApproval:!0,securityAlertResponse:s};(0,a.endTrace)({name:a.TraceName.Middleware,id:r});const{waitForHash:d}=await l({...e,transactionOptions:{...c,traceContext:i}}),u=await d();return(0,a.endTrace)({name:a.TraceName.Transaction,id:r}),u},r.addTransaction=async function(e){await async function(e){const{chainId:t,ppomController:r,securityAlertsEnabled:n,transactionOptions:o,transactionParams:a,updateSecurityAlertResponse:l,internalAccounts:c}=e,{type:d}=o,u=i.SECURITY_PROVIDER_EXCLUDED_TRANSACTION_TYPES.includes(d);if(!n||u)return;if(c.some(({address:e})=>{var t;return e.toLowerCase()===(null===(t=a.to)||void 0===t?void 0:t.toLowerCase())}))return;try{const{from:n,to:c,value:d,data:u}=a,{actionId:p,origin:h}=o,g={method:"eth_sendTransaction",id:p??"",origin:h??"",params:[{from:n,to:c??"",value:d??"",data:u??""}],jsonrpc:"2.0"},m=(0,s.generateSecurityAlertId)();(0,s.validateRequestWithPPOM)({ppomController:r,request:g,securityAlertId:m,chainId:t,updateSecurityAlertResponse:l});const f={...i.LOADING_SECURITY_ALERT_RESPONSE,securityAlertId:m};e.transactionOptions.securityAlertResponse=f}catch(e){(0,s.handlePPOMError)(e,"Error validating JSON RPC using PPOM: ")}}(e);const{transactionMeta:t,waitForHash:r}=await l(e);if(!e.waitForSubmit)return r().catch(()=>{}),t;const n=await r();return function(e,t){return t.state.transactions.find(t=>t.hash===e)}(n,e.transactionController)},r.getTransactionById=c;var n=e("@metamask/keyring-api"),o=e("ethereumjs-util"),s=e("../ppom/ppom-util"),i=e("../../../../shared/constants/security-provider"),a=e("../../../../shared/lib/trace");async function l(e){const{selectedAccount:t}=e;return t.type===n.EthAccountType.Erc4337?async function(e){var t;const{networkClientId:r,transactionController:n,transactionOptions:s,transactionParams:i,userOperationController:a}=e,{maxFeePerGas:l,maxPriorityFeePerGas:d}=i,{origin:u,requireApproval:p,type:h}=s,g={...i,maxFeePerGas:(0,o.addHexPrefix)(l),maxPriorityFeePerGas:(0,o.addHexPrefix)(d)},m=null==s||null===(t=s.swaps)||void 0===t?void 0:t.meta;null!=m&&m.type&&delete m.type;const f={networkClientId:r,origin:u,requireApproval:p,swaps:m,type:h},C=await a.addUserOperationFromTransaction(g,f);a.startPollingByNetworkClientId(r);return{transactionMeta:c(C.id,n),waitForHash:C.transactionHash}}(e):async function(e){const{transactionController:t,transactionOptions:r,transactionParams:n,networkClientId:o}=e,{result:s,transactionMeta:i}=await t.addTransaction(n,{...r,networkClientId:o});return{transactionMeta:i,waitForHash:()=>s}}(e)}function c(e,t){return t.state.transactions.find(t=>t.id===e)}}}},{package:"$root$",file:"app/scripts/lib/transaction/util.ts"}],[215,{"../../../../shared/constants/time":5007,"../../../../shared/modules/fetch-with-timeout":5087,"./trust-signals-util":217},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.scanAddress=c,r.scanAddressAndAddToCache=async function(e,t,r){const n=t.getAddressSecurityAlertResponse(e);if(n)return n;const o=(0,i.getChainId)(r),s=await c(o,e);return t.addAddressSecurityAlertResponse(e,s),s};var n,o=e("../../../../shared/constants/time"),s=(n=e("../../../../shared/modules/fetch-with-timeout"))&&n.__esModule?n:{default:n},i=e("./trust-signals-util");const a=5*o.SECOND,l="address/evm/scan";async function c(e,t){const r="https://security-alerts.api.cx.metamask.io";const n=`${r}/${l}`,o={chain:e,address:t},i=await(0,s.default)(a)(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});return await i.json()}}}},{package:"$root$",file:"app/scripts/lib/trust-signals/security-alerts-api.ts"}],[216,{"../../../../shared/modules/transaction.utils":5105,"../ppom/security-alerts-api":161,"./security-alerts-api":215,"./trust-signals-util":217},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createTrustSignalsMiddleware=function(e,t,r,l,c){return async(d,u,p)=>{try{if(!(0,i.isSecurityAlertsEnabledByUser)(l)||!(0,o.isSecurityAlertsAPIEnabled)())return;(0,i.isEthSendTransaction)(d)?(!function(e,t,r){if(!(0,i.hasValidTransactionParams)(e))return;const{to:n}=e.params[0];(0,s.scanAddressAndAddToCache)(n,t,r).catch(e=>{console.error("[createTrustSignalsMiddleware] error scanning address for transaction:",e)})}(d,t,e),a(d,r)):(0,i.isEthSignTypedData)(d)?(!function(e,t,r){var o;if(!(0,i.hasValidTypedDataParams)(e))return;const a=(0,n.parseTypedDataMessage)("string"==typeof e.params[1]?e.params[1]:JSON.stringify(e.params[1])),l=null===(o=a.domain)||void 0===o?void 0:o.verifyingContract;if(!l)return;(0,s.scanAddressAndAddToCache)(l,t,r).catch(e=>{console.error("[createTrustSignalsMiddleware] error scanning address for signature:",e)})}(d,t,e),a(d,r)):((0,i.isConnected)(d,c)||(0,i.connectScreenHasBeenPrompted)(d))&&a(d,r)}catch(e){console.error("[createTrustSignalsMiddleware] error: ",e)}finally{p()}}};var n=e("../../../../shared/modules/transaction.utils"),o=e("../ppom/security-alerts-api"),s=e("./security-alerts-api"),i=e("./trust-signals-util");function a(e,t){e.origin&&t.scanUrl(e.origin).catch(e=>{console.error("[createTrustSignalsMiddleware] error:",e)})}}}},{package:"$root$",file:"app/scripts/lib/trust-signals/trust-signals-middleware.ts"}],[217,{"../../../../shared/constants/app":4975,"../../../../shared/constants/network":4992,"../../../../shared/modules/selectors/networks":5100,"./types":218},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.connectScreenHasBeenPrompted=function(e){return e.method===s.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS||e.method===s.MESSAGE_TYPE.WALLET_REQUEST_PERMISSIONS},r.getChainId=function(e){var t;const r=null===(t=(0,o.getProviderConfig)({metamask:e.state}))||void 0===t?void 0:t.chainId;if(!r)throw new Error("Chain ID not found");return function(e){return{[n.CHAIN_IDS.ARBITRUM]:i.SupportedEVMChain.Arbitrum,[n.CHAIN_IDS.AVALANCHE]:i.SupportedEVMChain.Avalanche,[n.CHAIN_IDS.BASE]:i.SupportedEVMChain.Base,[n.CHAIN_IDS.BASE_SEPOLIA]:i.SupportedEVMChain.BaseSepolia,[n.CHAIN_IDS.BSC]:i.SupportedEVMChain.Bsc,[n.CHAIN_IDS.MAINNET]:i.SupportedEVMChain.Ethereum,[n.CHAIN_IDS.OPTIMISM]:i.SupportedEVMChain.Optimism,[n.CHAIN_IDS.POLYGON]:i.SupportedEVMChain.Polygon,[n.CHAIN_IDS.ZKSYNC_ERA]:i.SupportedEVMChain.Zksync,[n.CHAIN_IDS.ZK_SYNC_ERA_TESTNET]:i.SupportedEVMChain.ZksyncSepolia,"0x76adf1":i.SupportedEVMChain.Zora,[n.CHAIN_IDS.LINEA_MAINNET]:i.SupportedEVMChain.Linea,[n.CHAIN_IDS.BLAST]:i.SupportedEVMChain.Blast,[n.CHAIN_IDS.SCROLL]:i.SupportedEVMChain.Scroll,[n.CHAIN_IDS.SEPOLIA]:i.SupportedEVMChain.EthereumSepolia,"0x27bc86aa":i.SupportedEVMChain.Degen,[n.CHAIN_IDS.AVALANCHE_TESTNET]:i.SupportedEVMChain.AvalancheFuji,"0x343b":i.SupportedEVMChain.ImmutableZkevm,"0x34a1":i.SupportedEVMChain.ImmutableZkevmTestnet,[n.CHAIN_IDS.GNOSIS]:i.SupportedEVMChain.Gnosis,"0x1e0":i.SupportedEVMChain.Worldchain,"0x79a":i.SupportedEVMChain.SoneiumMinato,"0x7e4":i.SupportedEVMChain.Ronin,[n.CHAIN_IDS.APECHAIN_MAINNET]:i.SupportedEVMChain.ApeChain,"0x849ea":i.SupportedEVMChain.ZeroNetwork,[n.CHAIN_IDS.BERACHAIN]:i.SupportedEVMChain.Berachain,"0x138c5":i.SupportedEVMChain.BerachainBartio,[n.CHAIN_IDS.INK]:i.SupportedEVMChain.Ink,[n.CHAIN_IDS.INK_SEPOLIA]:i.SupportedEVMChain.InkSepolia,"0xab5":i.SupportedEVMChain.Abstract,"0x2b74":i.SupportedEVMChain.AbstractTestnet,"0x74c":i.SupportedEVMChain.Soneium,[n.CHAIN_IDS.UNICHAIN]:i.SupportedEVMChain.Unichain,[n.CHAIN_IDS.SEI]:i.SupportedEVMChain.Sei,[n.CHAIN_IDS.FLOW]:i.SupportedEVMChain.FlowEvm}[e.toLowerCase()]}(r)},r.hasValidTransactionParams=function(e){if(!("params"in e)||!e.params)return!1;if(!Array.isArray(e.params)||0===e.params.length)return!1;const t=e.params[0];return"object"==typeof t&&null!==t&&"to"in t},r.hasValidTypedDataParams=function(e){if(!("params"in e)||!e.params)return!1;if(!Array.isArray(e.params)||e.params.length<2)return!1;return e.params[1]!==undefined&&null!==e.params[1]},r.isConnected=function(e,t){if(!e.origin||e.method!==s.MESSAGE_TYPE.ETH_ACCOUNTS)return!1;const r=t(e.origin);return Array.isArray(r)&&r.length>0},r.isEthSendTransaction=function(e){return e.method===s.MESSAGE_TYPE.ETH_SEND_TRANSACTION},r.isEthSignTypedData=function(e){return e.method===s.MESSAGE_TYPE.ETH_SIGN_TYPED_DATA||e.method===s.MESSAGE_TYPE.ETH_SIGN_TYPED_DATA_V1||e.method===s.MESSAGE_TYPE.ETH_SIGN_TYPED_DATA_V3||e.method===s.MESSAGE_TYPE.ETH_SIGN_TYPED_DATA_V4},r.isSecurityAlertsEnabledByUser=function(e){const{securityAlertsEnabled:t}=e.state;return t};var n=e("../../../../shared/constants/network"),o=e("../../../../shared/modules/selectors/networks"),s=e("../../../../shared/constants/app"),i=e("./types")}}},{package:"$root$",file:"app/scripts/lib/trust-signals/trust-signals-util.ts"}],[219,{"../../../../shared/constants/app":4975,"../../../../shared/constants/verification":5011,"../../../../shared/modules/selectors/networks":5100,"@ethersproject/hash":581,"@ethersproject/wallet":648,"@metamask/rpc-errors":1958,"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createTxVerificationMiddleware=function(e,t=a.TRUSTED_SIGNERS){return function(r,d,u,p){if(r.method!==l.MESSAGE_TYPE.ETH_SEND_TRANSACTION||!Array.isArray(r.params)||!function(e){return(0,i.isObject)(e[0])&&"string"==typeof e[0].data&&"string"==typeof e[0].from&&"string"==typeof e[0].to&&"string"==typeof e[0].value&&(!(0,i.hasProperty)(e[0],"chainId")||"string"==typeof e[0].chainId&&e[0].chainId.startsWith("0x"))}(r.params))return u();const h=r.params[0],g="string"==typeof h.chainId?h.chainId.toLowerCase():(0,c.getCurrentChainId)({metamask:e.state}),m=(0,a.getExperience)(h.to.toLowerCase(),g);if(!m||!a.EXPERIENCES_TO_VERIFY.includes(m))return u();const f=`0x${h.data.slice(-a.TX_SIG_LEN)}`,C=(0,o.verifyMessage)(function(e){const t={to:(0,n.hashMessage)(e.to.toLowerCase()),from:(0,n.hashMessage)(e.from.toLowerCase()),data:(0,n.hashMessage)(e.data.toLowerCase().slice(0,e.data.length-a.TX_SIG_LEN)),value:(0,n.hashMessage)(e.value.toLowerCase())};return(0,n.hashMessage)(JSON.stringify(t))}(h),f);return C!==t[m]?p(s.rpcErrors.invalidParams("Invalid transaction signature.")):u()}};var n=e("@ethersproject/hash"),o=e("@ethersproject/wallet"),s=e("@metamask/rpc-errors"),i=e("@metamask/utils"),a=e("../../../../shared/constants/verification"),l=e("../../../../shared/constants/app"),c=e("../../../../shared/modules/selectors/networks")}}},{package:"$root$",file:"app/scripts/lib/tx-verification/tx-verification-middleware.ts"}],[22,{"../../../../shared/constants/metametrics":4989,"../../../../shared/lib/sentry":5065,"../../../../shared/lib/trace":5071,"../../../../shared/modules/environment":5084,"@metamask/profile-sync-controller/user-storage":1875},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.UserStorageControllerInit=void 0;var n=e("@metamask/profile-sync-controller/user-storage"),o=e("../../../../shared/modules/environment"),s=e("../../../../shared/constants/metametrics"),i=e("../../../../shared/lib/trace"),a=e("../../../../shared/lib/sentry");r.UserStorageControllerInit=e=>{const{controllerMessenger:t,persistedState:r,trackEvent:l}=e;return{controller:new n.Controller({messenger:t,state:r.UserStorageController,trace:i.trace,config:{accountSyncing:{maxNumberOfAccountsToAdd:(0,o.isProduction)()?undefined:100,onAccountAdded:e=>{l({category:s.MetaMetricsEventCategory.BackupAndSync,event:s.MetaMetricsEventName.AccountsSyncAdded,properties:{profile_id:e}})},onAccountNameUpdated:e=>{l({category:s.MetaMetricsEventCategory.BackupAndSync,event:s.MetaMetricsEventName.AccountsSyncNameUpdated,properties:{profile_id:e}})},onAccountSyncErroneousSituation:(e,t,r)=>{(0,a.captureException)(new Error(`Account sync - ${t}`),r),l({category:s.MetaMetricsEventCategory.BackupAndSync,event:s.MetaMetricsEventName.AccountsSyncErroneousSituation,properties:{profile_id:e,situation_message:t}})}},contactSyncing:{onContactUpdated:e=>{l({category:s.MetaMetricsEventCategory.BackupAndSync,event:s.MetaMetricsEventName.ProfileActivityUpdated,properties:{profile_id:e,feature_name:"Backup And Sync",action:"Contacts Sync Contact Updated"}})},onContactDeleted:e=>{l({category:s.MetaMetricsEventCategory.BackupAndSync,event:s.MetaMetricsEventName.ProfileActivityUpdated,properties:{profile_id:e,feature_name:"Backup And Sync",action:"Contacts Sync Contact Deleted"}})},onContactSyncErroneousSituation:(e,t,r)=>{(0,a.captureException)(new Error(`Contact sync - ${t}`),r),l({category:s.MetaMetricsEventCategory.BackupAndSync,event:s.MetaMetricsEventName.ProfileActivityUpdated,properties:{profile_id:e,feature_name:"Backup And Sync",action:"Contacts Sync Erroneous Situation",additional_description:t}})}}}})}}}}},{package:"$root$",file:"app/scripts/controller-init/identity/user-storage-controller-init.ts"}],[221,{"../../development/build/constants":438,"../../shared/constants/app":4975,"../../shared/constants/bridge":4977,"../../shared/constants/hardware-wallets":4984,"../../shared/constants/keyring":4985,"../../shared/constants/logs":4987,"../../shared/constants/metametrics":4989,"../../shared/constants/multichain/networks":4991,"../../shared/constants/network":4992,"../../shared/constants/onboarding":4995,"../../shared/constants/permissions":4996,"../../shared/constants/swaps":5005,"../../shared/constants/time":5007,"../../shared/constants/tokens":5008,"../../shared/constants/transaction":5009,"../../shared/constants/urls":5010,"../../shared/lib/accounts":5014,"../../shared/lib/accounts/solana-wallet-snap":5017,"../../shared/lib/fetch-with-cache":5054,"../../shared/lib/metamask-controller-utils":5059,"../../shared/lib/sentry":5065,"../../shared/lib/snaps/snaps":5066,"../../shared/lib/storage-helpers":5067,"../../shared/lib/token-util":5070,"../../shared/lib/trace":5071,"../../shared/lib/transactions-controller-utils":5073,"../../shared/lib/translate":5076,"../../shared/modules/environment":5084,"../../shared/modules/mv3.utils":5092,"../../shared/modules/network.utils":5093,"../../shared/modules/selectors":5099,"../../shared/modules/selectors/networks":5100,"../../shared/modules/string-utils":5103,"../../shared/modules/transaction.utils":5105,"../../shared/notifications":5107,"./constants/stream":9,"./controller-init/accounts/account-tree-controller-init":10,"./controller-init/assets":12,"./controller-init/confirmations/ppom-controller-init":17,"./controller-init/confirmations/transaction-controller-init":18,"./controller-init/defi-positions/defi-positions-controller-init":19,"./controller-init/delegation/delegation-controller-init":20,"./controller-init/identity/authentication-controller-init":21,"./controller-init/identity/user-storage-controller-init":22,"./controller-init/institutional-snap/institutional-snap-controller-init":23,"./controller-init/multichain":64,"./controller-init/multichain/multichain-account-service-init":65,"./controller-init/notifications/notification-services-controller-init":72,"./controller-init/notifications/notification-services-push-controller-init":73,"./controller-init/seedless-onboarding/seedless-onboarding-controller-init":74,"./controller-init/smart-transactions/smart-transactions-controller-init":75,"./controller-init/snaps":78,"./controller-init/utils":86,"./controllers/account-order":87,"./controllers/account-tracker-controller":88,"./controllers/alert-controller":89,"./controllers/app-metadata":90,"./controllers/app-state-controller":91,"./controllers/decrypt-message":92,"./controllers/encryption-public-key":93,"./controllers/metametrics-controller":95,"./controllers/metametrics-data-deletion/metametrics-data-deletion":96,"./controllers/onboarding":98,"./controllers/permissions":102,"./controllers/preferences-controller":105,"./controllers/swaps":109,"./detect-multiple-instances":112,"./lib/AccountIdentitiesPetnamesBridge":115,"./lib/AddressBookPetnamesBridge":116,"./lib/ComposableObservableStore":117,"./lib/PatchStore":119,"./lib/SnapsNameProvider":120,"./lib/WeakRefObjectMap":121,"./lib/approval/utils":122,"./lib/backup":123,"./lib/createDupeReqFilterStream":124,"./lib/createEvmMethodsToNonEvmAccountReqFilterMiddleware":125,"./lib/createLoggerMiddleware":126,"./lib/createMainFrameOriginMiddleware":127,"./lib/createMetaRPCHandler":128,"./lib/createMetamaskMiddleware":129,"./lib/createOnboardingMiddleware":130,"./lib/createOriginMiddleware":131,"./lib/createOriginThrottlingMiddleware":132,"./lib/createRPCMethodTrackingMiddleware":133,"./lib/createTabIdMiddleware":134,"./lib/createTracingMiddleware":135,"./lib/encryptor-factory":138,"./lib/hardware-keyring-builder-factory":144,"./lib/multichain/address":148,"./lib/network-controller/messenger-action-handlers":149,"./lib/network-controller/utils":150,"./lib/offscreen-bridge/lattice-offscreen-keyring":152,"./lib/offscreen-bridge/ledger-offscreen-bridge":153,"./lib/offscreen-bridge/trezor-offscreen-bridge":154,"./lib/open-update-tab-and-reload":155,"./lib/ppom/ppom-middleware":158,"./lib/ppom/ppom-util":159,"./lib/rpc-method-middleware":177,"./lib/segment":180,"./lib/signature/util":182,"./lib/snap-keyring":184,"./lib/snap-keyring/keyring-snaps-permissions":185,"./lib/state-utils":193,"./lib/stream-utils":198,"./lib/transaction/containers/util":200,"./lib/transaction/decode/util":206,"./lib/transaction/eip5792":208,"./lib/transaction/metrics":211,"./lib/transaction/sentinel-api":212,"./lib/transaction/transaction-relay":213,"./lib/transaction/util":214,"./lib/trust-signals/trust-signals-middleware":216,"./lib/tx-verification/tx-verification-middleware":219,"./lib/util":220,"./services/data-deletion-service":427,"./services/oauth/oauth-service":433,"./services/oauth/web-authenticator-factory":435,"@ethersproject/abi":552,"@keystonehq/metamask-airgapped-keyring":758,"@metamask/accounts-controller":1106,"@metamask/address-book-controller":1109,"@metamask/announcement-controller":1111,"@metamask/approval-controller":1114,"@metamask/assets-controllers":1148,"@metamask/base-controller":1238,"@metamask/bridge-controller":1245,"@metamask/bridge-status-controller":1262,"@metamask/chain-agnostic-permission":1295,"@metamask/controller-utils":1315,"@metamask/ens-controller":1348,"@metamask/error-reporting-service":1350,"@metamask/eth-json-rpc-filters":1362,"@metamask/eth-json-rpc-filters/subscriptionManager":1364,"@metamask/eth-json-rpc-middleware":1376,"@metamask/eth-ledger-bridge-keyring":1395,"@metamask/eth-sig-util":1406,"@metamask/eth-trezor-keyring":1467,"@metamask/gas-fee-controller":1490,"@metamask/json-rpc-engine":1508,"@metamask/json-rpc-middleware-stream":1512,"@metamask/keyring-api":1559,"@metamask/keyring-controller":1566,"@metamask/logging-controller":1603,"@metamask/metamask-eth-abis":1621,"@metamask/multichain-api-middleware":1636,"@metamask/name-controller":1743,"@metamask/network-controller":1755,"@metamask/notification-services-controller/notification-services":1771,"@metamask/obs-store":1812,"@metamask/obs-store/dist/asStream":1811,"@metamask/permission-controller":1819,"@metamask/permission-log-controller":1828,"@metamask/phishing-controller":1832,"@metamask/remote-feature-flag-controller":1951,"@metamask/rpc-errors":1958,"@metamask/scure-bip39/dist/wordlists/english":1962,"@metamask/seedless-onboarding-controller":1978,"@metamask/selected-network-controller":1983,"@metamask/signature-controller":1985,"@metamask/snaps-controllers":2011,"@metamask/snaps-rpc-methods":2075,"@metamask/transaction-controller":2316,"@metamask/user-operation-controller":2343,"@metamask/utils":2361,"await-semaphore":3148,buffer:3318,"eth-chainlist":3519,"eth-lattice-keyring":3524,events:3630,lodash:4088,loglevel:4096,nanoid:4198,"readable-stream":4454},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.default=r.METAMASK_CONTROLLER_EVENTS=void 0;var n=gr(e("events")),o=e("readable-stream"),s=e("@metamask/assets-controllers"),i=e("@metamask/json-rpc-engine"),a=e("@metamask/json-rpc-middleware-stream"),l=e("@metamask/obs-store"),c=e("@metamask/obs-store/dist/asStream"),d=e("@metamask/eth-json-rpc-middleware"),u=e("lodash"),p=e("@metamask/keyring-controller"),h=gr(e("@metamask/eth-json-rpc-filters")),g=gr(e("@metamask/eth-json-rpc-filters/subscriptionManager")),m=e("@metamask/rpc-errors"),f=e("await-semaphore"),C=gr(e("loglevel")),y=e("@metamask/eth-trezor-keyring"),v=e("@metamask/eth-ledger-bridge-keyring"),b=gr(e("eth-lattice-keyring")),w=e("eth-chainlist"),k=e("@keystonehq/metamask-airgapped-keyring"),S=e("nanoid"),T=e("@metamask/address-book-controller"),M=e("@metamask/approval-controller"),A=e("@metamask/base-controller"),P=e("@metamask/ens-controller"),E=e("@metamask/phishing-controller"),I=e("@metamask/announcement-controller"),_=e("@metamask/network-controller"),N=e("@metamask/gas-fee-controller"),O=e("@metamask/permission-controller"),R=e("@metamask/selected-network-controller"),j=e("@metamask/logging-controller"),D=e("@metamask/permission-log-controller"),x=e("@metamask/snaps-controllers"),B=e("@metamask/snaps-rpc-methods"),F=e("@metamask/controller-utils"),L=e("@metamask/accounts-controller"),U=e("@metamask/remote-feature-flag-controller"),$=e("@metamask/signature-controller"),G=e("@metamask/scure-bip39/dist/wordlists/english"),K=e("@metamask/name-controller"),q=e("@metamask/user-operation-controller"),H=e("@metamask/bridge-controller"),V=e("@metamask/transaction-controller"),W=e("@ethersproject/abi"),Y=e("@metamask/metamask-eth-abis"),z=e("@metamask/keyring-api"),J=e("@metamask/utils"),Q=e("@metamask/eth-sig-util"),Z=e("@metamask/notification-services-controller/notification-services"),X=e("@metamask/multichain-api-middleware"),ee=e("@metamask/chain-agnostic-permission"),te=e("@metamask/bridge-status-controller"),re=e("@metamask/error-reporting-service"),ne=e("@metamask/seedless-onboarding-controller"),oe=e("../../shared/lib/sentry"),se=e("../../shared/constants/transaction"),ie=e("../../shared/constants/swaps"),ae=e("../../shared/constants/network"),le=e("../../shared/constants/hardware-wallets"),ce=e("../../shared/constants/keyring"),de=e("../../shared/constants/permissions"),ue=e("../../shared/notifications"),pe=e("../../shared/constants/time"),he=e("../../shared/constants/app"),ge=e("../../shared/constants/metametrics"),me=e("../../shared/constants/logs"),fe=e("../../shared/lib/storage-helpers"),Ce=e("../../shared/lib/token-util"),ye=e("../../shared/modules/string-utils"),ve=e("../../shared/modules/transaction.utils"),be=e("../../shared/constants/tokens"),we=e("../../shared/lib/metamask-controller-utils"),ke=e("../../shared/modules/mv3.utils"),Se=e("../../shared/modules/network.utils"),Te=e("../../shared/modules/selectors"),Me=e("../../shared/constants/urls"),Ae=e("../../shared/lib/transactions-controller-utils"),Pe=e("../../shared/modules/selectors/networks"),Ee=e("../../shared/lib/trace"),Ie=e("../../development/build/constants"),_e=gr(e("../../shared/lib/fetch-with-cache")),Ne=e("../../shared/constants/multichain/networks"),Oe=e("../../shared/constants/bridge"),Re=e("../../shared/lib/accounts"),je=e("../../shared/lib/accounts/solana-wallet-snap"),De=e("../../shared/constants/onboarding"),xe=e("../../shared/lib/translate"),Be=e("../../shared/modules/environment"),Fe=e("../../shared/lib/snaps/snaps"),Le=e("./lib/transaction/metrics"),Ue=e("./lib/snap-keyring/keyring-snaps-permissions"),$e=e("./lib/SnapsNameProvider"),Ge=e("./lib/AddressBookPetnamesBridge"),Ke=e("./lib/AccountIdentitiesPetnamesBridge"),qe=e("./lib/ppom/ppom-middleware"),He=e("./lib/trust-signals/trust-signals-middleware"),Ve=e("./detect-multiple-instances"),We=gr(e("./lib/ComposableObservableStore")),Ye=gr(e("./controllers/account-tracker-controller")),ze=gr(e("./lib/createDupeReqFilterStream")),Je=gr(e("./lib/createLoggerMiddleware")),Qe=e("./lib/rpc-method-middleware"),Ze=gr(e("./lib/createOriginMiddleware")),Xe=gr(e("./lib/createMainFrameOriginMiddleware")),et=gr(e("./lib/createTabIdMiddleware")),tt=e("./controllers/account-order"),rt=gr(e("./lib/createOnboardingMiddleware")),nt=e("./lib/stream-utils"),ot=e("./controllers/preferences-controller"),st=e("./controllers/app-state-controller"),it=e("./controllers/alert-controller"),at=gr(e("./controllers/onboarding")),lt=gr(e("./lib/backup")),ct=gr(e("./controllers/decrypt-message")),dt=gr(e("./controllers/swaps")),ut=gr(e("./controllers/metametrics-controller")),pt=e("./lib/segment"),ht=gr(e("./lib/createMetaRPCHandler")),gt=e("./lib/util"),mt=gr(e("./lib/createMetamaskMiddleware")),ft=e("./lib/hardware-keyring-builder-factory"),Ct=gr(e("./controllers/encryption-public-key")),yt=gr(e("./controllers/app-metadata")),vt=e("./controllers/permissions"),bt=e("./controllers/metametrics-data-deletion/metametrics-data-deletion"),wt=e("./services/data-deletion-service"),kt=gr(e("./lib/createRPCMethodTrackingMiddleware")),St=e("./lib/offscreen-bridge/trezor-offscreen-bridge"),Tt=e("./lib/offscreen-bridge/ledger-offscreen-bridge"),Mt=e("./lib/snap-keyring"),At=e("./lib/encryptor-factory"),Pt=e("./lib/transaction/util"),Et=e("./lib/signature/util"),It=e("./lib/offscreen-bridge/lattice-offscreen-keyring"),_t=e("./lib/WeakRefObjectMap"),Nt=e("./constants/stream"),Ot=e("./lib/tx-verification/tx-verification-middleware"),Rt=e("./lib/ppom/ppom-util"),jt=gr(e("./lib/createEvmMethodsToNonEvmAccountReqFilterMiddleware")),Dt=e("./lib/multichain/address"),xt=e("./lib/transaction/decode/util"),Bt=gr(e("./lib/createTracingMiddleware")),Ft=gr(e("./lib/createOriginThrottlingMiddleware")),Lt=e("./lib/PatchStore"),Ut=e("./lib/state-utils"),$t=e("./lib/approval/utils"),Gt=e("./controller-init/institutional-snap/institutional-snap-controller-init"),Kt=e("./controller-init/multichain"),qt=e("./controller-init/assets"),Ht=e("./controller-init/confirmations/transaction-controller-init"),Vt=e("./controller-init/confirmations/ppom-controller-init"),Wt=e("./controller-init/smart-transactions/smart-transactions-controller-init"),Yt=e("./controller-init/utils"),zt=e("./controller-init/snaps"),Jt=e("./controller-init/identity/authentication-controller-init"),Qt=e("./controller-init/identity/user-storage-controller-init"),Zt=e("./controller-init/defi-positions/defi-positions-controller-init"),Xt=e("./lib/transaction/eip5792"),er=e("./controller-init/notifications/notification-services-controller-init"),tr=e("./controller-init/notifications/notification-services-push-controller-init"),rr=e("./controller-init/delegation/delegation-controller-init"),nr=e("./lib/network-controller/messenger-action-handlers"),or=e("./lib/network-controller/utils"),sr=e("./lib/transaction/transaction-relay"),ir=e("./lib/open-update-tab-and-reload"),ar=e("./controller-init/accounts/account-tree-controller-init"),lr=e("./controller-init/multichain/multichain-account-service-init"),cr=gr(e("./services/oauth/oauth-service")),dr=e("./services/oauth/web-authenticator-factory"),ur=e("./controller-init/seedless-onboarding/seedless-onboarding-controller-init"),pr=e("./lib/transaction/containers/util"),hr=e("./lib/transaction/sentinel-api");function gr(e){return e&&e.__esModule?e:{default:e}}function mr(e,t){(function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")})(e,t),t.add(e)}function fr(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Cr(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}r.METAMASK_CONTROLLER_EVENTS={UPDATE_BADGE:"updateBadge",DECRYPT_MESSAGE_MANAGER_UPDATE_BADGE:"DecryptMessageManager:updateBadge",ENCRYPTION_PUBLIC_KEY_MANAGER_UPDATE_BADGE:"EncryptionPublicKeyManager:updateBadge",APPROVAL_STATE_CHANGE:"ApprovalController:stateChange",APP_STATE_UNLOCK_CHANGE:"AppStateController:unlockChange",METAMASK_NOTIFICATIONS_LIST_UPDATED:"NotificationServicesController:notificationsListUpdated",METAMASK_NOTIFICATIONS_MARK_AS_READ:"NotificationServicesController:markNotificationsAsRead"};const yr="eip-1193",vr="caip-multichain",br={[Ie.ENVIRONMENT.DEVELOPMENT]:U.EnvironmentType.Development,[Ie.ENVIRONMENT.RELEASE_CANDIDATE]:U.EnvironmentType.ReleaseCandidate,[Ie.ENVIRONMENT.PRODUCTION]:U.EnvironmentType.Production},wr={flask:U.DistributionType.Flask,main:U.DistributionType.Main,beta:U.DistributionType.Beta,experimental:U.DistributionType.Main};var kr=new WeakSet;class Sr extends n.default{constructor(e){var t;super(),mr(this,kr),fr(this,"handleWatchAssetRequest",({asset:e,type:t,origin:r,networkClientId:n})=>{switch(t){case F.ERC20:return this.tokensController.watchAsset({asset:e,type:t,networkClientId:n});case F.ERC721:case F.ERC1155:return this.nftController.watchNft(e,t,r,n);default:throw new Error(`Asset type ${t} not supported`)}}),fr(this,"removePermissionsFor",e=>{try{this.permissionController.revokePermissions(e)}catch(e){if(!(e instanceof O.PermissionsRequestNotFoundError))throw e}}),fr(this,"updateCaveat",(e,t,r,n)=>{try{this.controllerMessenger.call("PermissionController:updateCaveat",e,t,r,n)}catch(e){if(!(e instanceof O.PermissionsRequestNotFoundError))throw e}}),fr(this,"updateNetworksList",e=>{try{this.networkOrderController.updateNetworksList(e)}catch(e){throw C.default.error(e.message),e}}),fr(this,"updateAccountsList",e=>{try{this.accountOrderController.updateAccountsList(e)}catch(e){throw C.default.error(e.message),e}}),fr(this,"setEnabledNetworks",(e,t)=>{try{this.networkOrderController.setEnabledNetworks(e,t)}catch(e){throw C.default.error(e.message),e}}),fr(this,"updateHiddenAccountsList",e=>{try{this.accountOrderController.updateHiddenAccountsList(e)}catch(e){throw C.default.error(e.message),e}}),fr(this,"rejectPermissionsRequest",e=>{try{this.permissionController.rejectPermissionsRequest(e)}catch(e){if(!(e instanceof O.PermissionsRequestNotFoundError))throw e}}),fr(this,"acceptPermissionsRequest",e=>{try{this.permissionController.acceptPermissionsRequest(e)}catch(e){if(!(e instanceof O.PermissionsRequestNotFoundError))throw e}}),fr(this,"resolvePendingApproval",async(e,t,r)=>{try{await this.approvalController.accept(e,t,r)}catch(e){if(!(e instanceof M.ApprovalRequestNotFoundError))throw e}}),fr(this,"rejectPendingApproval",(e,t)=>{try{this.approvalController.reject(e,new m.JsonRpcError(t.code,t.message,t.data))}catch(e){if(!(e instanceof M.ApprovalRequestNotFoundError))throw e}});const{isFirstMetaMaskControllerSetup:r}=e;this.defaultMaxListeners=20,this.sendUpdate=(0,u.debounce)(this.privateSendUpdate.bind(this),200*pe.MILLISECOND),this.opts=e,this.requestSafeReload=e.requestSafeReload??(()=>Promise.resolve()),this.extension=e.browser,this.platform=e.platform,this.notificationManager=e.notificationManager;const n=e.initState||{},o="13.2.0";this.recordFirstTimeInfo(n),this.featureFlags=e.featureFlags,this.activeControllerConnections=0,this.offscreenPromise=e.offscreenPromise??Promise.resolve(),this.getRequestAccountTabIds=e.getRequestAccountTabIds,this.getOpenMetamaskTabsIds=e.getOpenMetamaskTabsIds,this.initializeChainlist(),this.controllerMessenger=new A.Messenger,this.loggingController=new j.LoggingController({messenger:this.controllerMessenger.getRestricted({name:"LoggingController",allowedActions:[],allowedEvents:[]}),state:n.LoggingController}),this.currentMigrationVersion=e.currentMigrationVersion,this.store=new We.default({state:n,controllerMessenger:this.controllerMessenger,persist:!0}),this.connections={},this.createVaultMutex=new f.Mutex,this.syncSeedlessGlobalPasswordMutex=new f.Mutex,this.extension.runtime.onInstalled.addListener(e=>{"update"===e.reason&&this.loggingController.add({type:j.LogType.GenericLog,data:{event:me.LOG_EVENT.VERSION_UPDATE,previousVersion:e.previousVersion,version:o}})}),this.appMetadataController=new yt.default({state:n.AppMetadataController,messenger:this.controllerMessenger.getRestricted({name:"AppMetadataController",allowedActions:[],allowedEvents:[]}),currentMigrationVersion:this.currentMigrationVersion,currentAppVersion:o}),this.approvalController=new M.ApprovalController({messenger:this.controllerMessenger.getRestricted({name:"ApprovalController"}),showApprovalRequest:e.showUserConfirmation,typesExcludedFromRateLimiting:[F.ApprovalType.PersonalSign,F.ApprovalType.EthSignTypedData,F.ApprovalType.Transaction,F.ApprovalType.WatchAsset,F.ApprovalType.EthGetEncryptionPublicKey,F.ApprovalType.EthDecrypt,he.SMART_TRANSACTION_CONFIRMATION_TYPES.showSmartTransactionStatusPage]});const i=this.controllerMessenger.getRestricted({name:"ErrorReportingService",allowedActions:[],allowedEvents:[]});new re.ErrorReportingService({messenger:i,captureException:oe.captureException});const a=this.controllerMessenger.getRestricted({name:"NetworkController",allowedEvents:[],allowedActions:["ErrorReportingService:captureException"]});let l=n.NetworkController;const c=[F.ChainId["megaeth-testnet"],F.ChainId["monad-testnet"]];if(!l){l=(0,_.getDefaultNetworkControllerState)(c);const e=l.networkConfigurationsByChainId;let t;Object.values(e).forEach(e=>{const t=e.rpcEndpoints[0].networkClientId;(0,J.hasProperty)(F.BlockExplorerUrl,t)&&(e.blockExplorerUrls=[F.BlockExplorerUrl[t]]),e.defaultBlockExplorerUrlIndex=0}),e[ae.CHAIN_IDS.MAINNET].rpcEndpoints[0].failoverUrls=(0,ae.getFailoverUrlsForInfuraNetwork)("ethereum-mainnet"),e[ae.CHAIN_IDS.LINEA_MAINNET].rpcEndpoints[0].failoverUrls=(0,ae.getFailoverUrlsForInfuraNetwork)("linea-mainnet"),e[ae.CHAIN_IDS.BASE].rpcEndpoints[0].failoverUrls=(0,ae.getFailoverUrlsForInfuraNetwork)("base-mainnet"),t=e[ae.CHAIN_IDS.MAINNET],l.selectedNetworkClientId=t.rpcEndpoints[t.defaultRpcEndpointIndex].networkClientId}l.networkConfigurationsByChainId&&!Object.values(l.networkConfigurationsByChainId).flatMap(e=>e.rpcEndpoints.map(e=>e.networkClientId)).includes(l.selectedNetworkClientId)&&((0,oe.captureException)(new Error(`NetworkController state is invalid: \`selectedNetworkClientId\` '${l.selectedNetworkClientId}' does not refer to an RPC endpoint within a network configuration`)),l.selectedNetworkClientId=l.networkConfigurationsByChainId[ae.CHAIN_IDS.MAINNET].rpcEndpoints[0].networkClientId),this.networkController=new _.NetworkController({messenger:a,state:l,infuraProjectId:e.infuraProjectId,getBlockTrackerOptions:()=>({pollingInterval:20*pe.SECOND,retryTimeout:20*pe.SECOND}),getRpcServiceOptions:e=>{const t={fetch:globalThis.fetch.bind(globalThis),btoa:globalThis.btoa.bind(globalThis)};return(0,or.getIsQuicknodeEndpointUrl)(e)?{...t,policyOptions:{maxRetries:4,maxConsecutiveFailures:70}}:{...t,policyOptions:{maxRetries:4,maxConsecutiveFailures:35}}},additionalDefaultNetworks:c}),a.subscribe("NetworkController:rpcEndpointUnavailable",async({chainId:t,endpointUrl:r,error:n})=>{(0,nr.onRpcEndpointUnavailable)({chainId:t,endpointUrl:r,error:n,infuraProjectId:e.infuraProjectId,trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),metaMetricsId:this.metaMetricsController.state.metaMetricsId})}),a.subscribe("NetworkController:rpcEndpointDegraded",async({chainId:t,endpointUrl:r})=>{(0,nr.onRpcEndpointDegraded)({chainId:t,endpointUrl:r,infuraProjectId:e.infuraProjectId,trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),metaMetricsId:this.metaMetricsController.state.metaMetricsId})}),this.networkController.initializeProvider(),this.multichainSubscriptionManager=new X.MultichainSubscriptionManager({getNetworkClientById:this.networkController.getNetworkClientById.bind(this.networkController),findNetworkClientIdByChainId:this.networkController.findNetworkClientIdByChainId.bind(this.networkController)}),this.multichainMiddlewareManager=new X.MultichainMiddlewareManager,this.provider=this.networkController.getProviderAndBlockTracker().provider,this.blockTracker=this.networkController.getProviderAndBlockTracker().blockTracker,this.deprecatedNetworkVersions={};const d=this.controllerMessenger.getRestricted({name:"AccountsController",allowedEvents:["SnapController:stateChange","KeyringController:accountRemoved","KeyringController:stateChange","SnapKeyring:accountAssetListUpdated","SnapKeyring:accountBalancesUpdated","SnapKeyring:accountTransactionsUpdated","MultichainNetworkController:networkDidChange"],allowedActions:["KeyringController:getState","KeyringController:getKeyringsByType"]});this.accountsController=new L.AccountsController({messenger:d,state:n.AccountsController});const h=this.controllerMessenger.getRestricted({name:"PreferencesController",allowedActions:["AccountsController:setSelectedAccount","AccountsController:getSelectedAccount","AccountsController:getAccountByAddress","AccountsController:setAccountName","NetworkController:getState"],allowedEvents:["AccountsController:stateChange"]});this.preferencesController=new ot.PreferencesController({state:{currentLocale:e.initLangCode??"",...n.PreferencesController},messenger:h});const g=this.controllerMessenger.getRestricted({name:"TokenListController",allowedActions:["NetworkController:getNetworkClientById"],allowedEvents:["NetworkController:stateChange"]});this.tokenListController=new s.TokenListController({chainId:Cr(kr,this,Pr).call(this,{metamask:this.networkController.state}),preventPollingOnNetworkRestart:!Cr(kr,this,Ar).call(this,this.preferencesController.state),messenger:g,state:n.TokenListController});const w=this.controllerMessenger.getRestricted({name:"TokensController",allowedActions:["ApprovalController:addRequest","NetworkController:getNetworkClientById","AccountsController:getSelectedAccount","AccountsController:getAccount","AccountsController:listAccounts"],allowedEvents:["NetworkController:networkDidChange","AccountsController:selectedEvmAccountChange","PreferencesController:stateChange","TokenListController:stateChange","NetworkController:stateChange","KeyringController:accountRemoved"]});this.tokensController=new s.TokensController({state:n.TokensController,provider:this.provider,messenger:w,chainId:Cr(kr,this,Pr).call(this)});const S=this.controllerMessenger.getRestricted({name:"MetaMetricsController",allowedActions:["PreferencesController:getState","NetworkController:getState","NetworkController:getNetworkClientById"],allowedEvents:["PreferencesController:stateChange","NetworkController:networkDidChange"]});this.metaMetricsController=new ut.default({state:n.MetaMetricsController,messenger:S,segment:pt.segment,version:"13.2.0",environment:"production",extension:this.extension,captureException:oe.captureException}),this.on("update",e=>{this.metaMetricsController.handleMetaMaskStateUpdate(e)});const B=new wt.DataDeletionService,G=this.controllerMessenger.getRestricted({name:"MetaMetricsDataDeletionController",allowedActions:["MetaMetricsController:getState"],allowedEvents:[]});this.metaMetricsDataDeletionController=new bt.MetaMetricsDataDeletionController({dataDeletionService:B,messenger:G,state:n.metaMetricsDataDeletionController});const W=this.controllerMessenger.getRestricted({name:"GasFeeController",allowedActions:["NetworkController:getEIP1559Compatibility","NetworkController:getNetworkClientById","NetworkController:getState"],allowedEvents:["NetworkController:stateChange"]}),Y=ie.GAS_API_BASE_URL;this.gasFeeController=new N.GasFeeController({state:n.GasFeeController,interval:1e4,messenger:W,clientId:ie.SWAPS_CLIENT_ID,getProvider:()=>this.networkController.getProviderAndBlockTracker().provider,onNetworkDidChange:e=>{a.subscribe("NetworkController:networkDidChange",()=>e(this.networkController.state))},getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),legacyAPIEndpoint:`${Y}/networks/<chain_id>/gasPrices`,EIP1559APIEndpoint:`${Y}/networks/<chain_id>/suggestedGasFees`,getCurrentNetworkLegacyGasAPICompatibility:()=>Cr(kr,this,Pr).call(this)===ae.CHAIN_IDS.BSC,getChainId:()=>Cr(kr,this,Pr).call(this)}),this.appStateController=new st.AppStateController({addUnlockListener:this.on.bind(this,"unlock"),isUnlocked:this.isUnlocked.bind(this),state:n.AppStateController,onInactiveTimeout:()=>this.setLocked(),messenger:this.controllerMessenger.getRestricted({name:"AppStateController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:acceptRequest`,"PreferencesController:getState"],allowedEvents:["KeyringController:qrKeyringStateChange","PreferencesController:stateChange"]}),extension:this.extension});const z=this.controllerMessenger.getRestricted({name:"CurrencyRateController",allowedActions:[`${this.networkController.name}:getNetworkClientById`]});this.currencyRateController=new s.CurrencyRateController({includeUsdRate:!0,messenger:z,state:n.CurrencyController,useExternalServices:()=>this.preferencesController.state.useExternalServices});const Q=this.currencyRateController.fetchMultiExchangeRate.bind(this.currencyRateController);this.currencyRateController.fetchMultiExchangeRate=(...e)=>this.preferencesController.state.useCurrencyRateCheck?Q(...e):{conversionRate:null,usdConversionRate:null};const Z=this.controllerMessenger.getRestricted({name:"TokenBalancesController",allowedActions:["NetworkController:getState","NetworkController:getNetworkClientById","TokensController:getState","PreferencesController:getState","AccountsController:getSelectedAccount","AccountsController:listAccounts"],allowedEvents:["PreferencesController:stateChange","TokensController:stateChange","NetworkController:stateChange","KeyringController:accountRemoved"]});this.tokenBalancesController=new s.TokenBalancesController({messenger:Z,state:n.TokenBalancesController,interval:3e4});const ee=this.controllerMessenger.getRestricted({name:"PhishingController"});this.phishingController=new E.PhishingController({messenger:ee,state:n.PhishingController,hotlistRefreshInterval:undefined,stalelistRefreshInterval:undefined});const ne=this.controllerMessenger.getRestricted({name:"AnnouncementController"});this.announcementController=new I.AnnouncementController({messenger:ne,allAnnouncements:ue.UI_NOTIFICATIONS,state:n.AnnouncementController});const se=this.controllerMessenger.getRestricted({name:"AccountOrderController"});this.accountOrderController=new tt.AccountOrderController({messenger:se,state:n.AccountOrderController});const le=this.controllerMessenger.getRestricted({name:"RatesController"});this.multichainRatesController=new s.RatesController({state:n.MultichainRatesController,messenger:le,includeUsdRate:!0,fetchMultiExchangeRate:s.fetchMultiExchangeRate}),this.controllerMessenger.subscribe("PreferencesController:stateChange",(0,gt.previousValueComparator)((e,t)=>{const{useCurrencyRateCheck:r}=e,{useCurrencyRateCheck:n}=t;n&&!r?this.tokenRatesController.enable():!n&&r&&this.tokenRatesController.disable()},this.preferencesController.state)),this.ensController=new P.EnsController({messenger:this.controllerMessenger.getRestricted({name:"EnsController",allowedActions:["NetworkController:getNetworkClientById","NetworkController:getState"],allowedEvents:[]}),onNetworkDidChange:a.subscribe.bind(a,"NetworkController:networkDidChange")});const ce=this.controllerMessenger.getRestricted({name:"OnboardingController",allowedActions:[],allowedEvents:[]});this.onboardingController=new at.default({messenger:ce,state:n.OnboardingController}),this.oauthService=new cr.default({env:{googleClientId:"795351133007-6d0s31utj13knv440fgjo2ur93241gb6.apps.googleusercontent.com",appleClientId:"io.metamask.appleloginclient.prod"},webAuthenticator:(0,dr.webAuthenticatorFactory)(),bufferedTrace:this.metaMetricsController.bufferedTrace.bind(this.metaMetricsController),bufferedEndTrace:this.metaMetricsController.bufferedEndTrace.bind(this.metaMetricsController)});let fe=[(0,p.keyringBuilderFactory)(k.MetaMaskKeyring)];const Ce=null===(t=this.opts.overrides)||void 0===t?void 0:t.keyrings;if(!1===ke.isManifestV3){const e=[(null==Ce?void 0:Ce.lattice)||b.default,k.MetaMaskKeyring],t=[{keyring:(null==Ce?void 0:Ce.trezor)||y.TrezorKeyring,bridge:(null==Ce?void 0:Ce.trezorBridge)||y.TrezorConnectBridge},{keyring:(null==Ce?void 0:Ce.oneKey)||y.OneKeyKeyring,bridge:(null==Ce?void 0:Ce.oneKeyBridge)||y.TrezorConnectBridge},{keyring:(null==Ce?void 0:Ce.ledger)||v.LedgerKeyring,bridge:(null==Ce?void 0:Ce.ledgerBridge)||v.LedgerIframeBridge}];fe=e.map(e=>(0,p.keyringBuilderFactory)(e)),t.forEach(e=>fe.push((0,ft.hardwareKeyringBuilderFactory)(e.keyring,e.bridge)))}else fe.push((0,ft.hardwareKeyringBuilderFactory)(y.TrezorKeyring,(null==Ce?void 0:Ce.trezorBridge)||St.TrezorOffscreenBridge),(0,ft.hardwareKeyringBuilderFactory)(y.OneKeyKeyring,(null==Ce?void 0:Ce.oneKey)||St.TrezorOffscreenBridge),(0,ft.hardwareKeyringBuilderFactory)(v.LedgerKeyring,(null==Ce?void 0:Ce.ledgerBridge)||Tt.LedgerOffscreenBridge),(0,p.keyringBuilderFactory)(It.LatticeKeyringOffscreen));const ye=this.controllerMessenger.getRestricted({name:"SnapKeyring",allowedActions:["ApprovalController:addRequest","ApprovalController:acceptRequest","ApprovalController:rejectRequest","ApprovalController:startFlow","ApprovalController:endFlow","ApprovalController:showSuccess","ApprovalController:showError","PhishingController:test","PhishingController:maybeUpdateState","KeyringController:getAccounts","AccountsController:setSelectedAccount","AccountsController:getAccountByAddress","AccountsController:setAccountName","AccountsController:listMultichainAccounts","SnapController:handleRequest","SnapController:get","SnapController:isMinimumPlatformVersion","PreferencesController:getState"]}),ve=async()=>{await this.keyringController.persistAllKeyrings(),await this.accountsController.updateAccounts()};fe.push((0,Mt.snapKeyringBuilder)(ye,{persistKeyringHelper:()=>ve(),removeAccountHelper:e=>this.removeAccount(e),trackEvent:(...e)=>this.metaMetricsController.trackEvent(...e)}));const be=this.controllerMessenger.getRestricted({name:"KeyringController"});this.keyringController=new p.KeyringController({cacheEncryptionKey:!0,keyringBuilders:fe,state:n.KeyringController,encryptor:e.encryptor||(0,At.encryptorFactory)(6e5),messenger:be}),this.controllerMessenger.subscribe("KeyringController:unlock",()=>this._onUnlock()),this.controllerMessenger.subscribe("KeyringController:lock",()=>this._onLock()),this.controllerMessenger.subscribe("KeyringController:stateChange",e=>{this._onKeyringControllerUpdate(e)}),this.permissionController=new O.PermissionController({messenger:this.controllerMessenger.getRestricted({name:"PermissionController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:hasRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`,"SnapController:getPermitted","SnapController:install","SubjectMetadataController:getSubjectMetadata"]}),state:n.PermissionController,caveatSpecifications:(0,vt.getCaveatSpecifications)({listAccounts:this.accountsController.listAccounts.bind(this.accountsController),findNetworkClientIdByChainId:this.networkController.findNetworkClientIdByChainId.bind(this.networkController),isNonEvmScopeSupported:this.controllerMessenger.call.bind(this.controllerMessenger,"MultichainRouter:isSupportedScope"),getNonEvmAccountAddresses:this.controllerMessenger.call.bind(this.controllerMessenger,"MultichainRouter:getSupportedAccounts")}),permissionSpecifications:{...(0,vt.getPermissionSpecifications)(),...this.getSnapPermissionSpecifications()},unrestrictedMethods:vt.unrestrictedMethods}),this.selectedNetworkController=new R.SelectedNetworkController({messenger:this.controllerMessenger.getRestricted({name:"SelectedNetworkController",allowedActions:["NetworkController:getNetworkClientById","NetworkController:getState","NetworkController:getSelectedNetworkClient","PermissionController:hasPermissions","PermissionController:getSubjectNames"],allowedEvents:["NetworkController:stateChange","PermissionController:stateChange"]}),state:n.SelectedNetworkController,useRequestQueuePreference:!0,onPreferencesStateChange:()=>{},domainProxyMap:new _t.WeakRefObjectMap}),this.permissionLogController=new D.PermissionLogController({messenger:this.controllerMessenger.getRestricted({name:"PermissionLogController"}),restrictedMethods:new Set(Object.keys(de.RestrictedMethods)),state:n.PermissionLogController}),this.subjectMetadataController=new O.SubjectMetadataController({messenger:this.controllerMessenger.getRestricted({name:"SubjectMetadataController",allowedActions:[`${this.permissionController.name}:hasPermissions`]}),state:n.SubjectMetadataController,subjectCacheLimit:100});const we=this.controllerMessenger.getRestricted({name:"MultichainRouter",allowedActions:["SnapController:getAll","SnapController:handleRequest",`${this.permissionController.name}:getPermissions`,"AccountsController:listMultichainAccounts"],allowedEvents:[]});this.multichainRouter=new x.MultichainRouter({messenger:we,withSnapKeyring:async e=>e({keyring:await this.getSnapKeyring()})}),this.accountTrackerController=new Ye.default({state:{accounts:{}},messenger:this.controllerMessenger.getRestricted({name:"AccountTrackerController",allowedActions:["AccountsController:getSelectedAccount","NetworkController:getState","NetworkController:getNetworkClientById","OnboardingController:getState","PreferencesController:getState"],allowedEvents:["AccountsController:selectedEvmAccountChange","OnboardingController:stateChange","KeyringController:accountRemoved"]}),provider:this.provider,blockTracker:this.blockTracker,getNetworkIdentifier:e=>{const{type:t,rpcUrl:r}=e??(0,Pe.getProviderConfig)({metamask:this.networkController.state});return t===ae.NETWORK_TYPES.RPC?r:t}}),this.on("controllerConnectionChanged",e=>{const{completedOnboarding:t}=this.onboardingController.state;e>0&&t?this.triggerNetworkrequests():this.stopNetworkRequests()}),this.controllerMessenger.subscribe(`${this.onboardingController.name}:stateChange`,(0,gt.previousValueComparator)(async(e,t)=>{const{completedOnboarding:r}=e,{completedOnboarding:n,firstTimeFlowType:o}=t;if(!r&&n){const{address:e}=this.accountsController.getSelectedAccount();o===De.FirstTimeFlowType.socialImport?await this._importAccountsWithBalances():await this._addAccountsWithBalance(),this.postOnboardingInitialization(),this.triggerNetworkrequests(),await this.tokenDetectionController.detectTokens({selectedAddress:e})}},this.onboardingController.state));const Se=this.controllerMessenger.getRestricted({name:"TokenDetectionController",allowedActions:["AccountsController:getAccount","AccountsController:getSelectedAccount","KeyringController:getState","NetworkController:getNetworkClientById","NetworkController:getNetworkConfigurationByNetworkClientId","NetworkController:getState","PreferencesController:getState","TokenListController:getState","TokensController:getState","TokensController:addDetectedTokens","TokensController:addTokens","NetworkController:findNetworkClientIdByChainId"],allowedEvents:["AccountsController:selectedEvmAccountChange","KeyringController:lock","KeyringController:unlock","NetworkController:networkDidChange","PreferencesController:stateChange","TokenListController:stateChange","TransactionController:transactionConfirmed"]});this.tokenDetectionController=new s.TokenDetectionController({messenger:Se,getBalancesInSingleCall:(...e)=>this.assetsContractController.getBalancesInSingleCall(...e),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),useAccountsAPI:!0,platform:"extension",useTokenDetection:()=>this.preferencesController.state.useTokenDetection,useExternalServices:()=>this.preferencesController.state.useExternalServices});const Me=this.controllerMessenger.getRestricted({name:"AddressBookController",allowedActions:[],allowedEvents:[]});this.addressBookController=new T.AddressBookController({messenger:Me,state:n.AddressBookController}),this.alertController=new it.AlertController({state:n.AlertController,messenger:this.controllerMessenger.getRestricted({name:"AlertController",allowedEvents:["AccountsController:selectedAccountChange"],allowedActions:["AccountsController:getSelectedAccount"]})}),this.backup=new lt.default({preferencesController:this.preferencesController,addressBookController:this.addressBookController,accountsController:this.accountsController,networkController:this.networkController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.snapAndHardwareMetricsParams={getSelectedAccount:this.accountsController.getSelectedAccount.bind(this.accountsController),getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getHardwareTypeForMetric:this.getHardwareTypeForMetric.bind(this),snapAndHardwareMessenger:this.controllerMessenger.getRestricted({name:"SnapAndHardwareMessenger",allowedActions:["KeyringController:getKeyringForAccount","SnapController:get","AccountsController:getSelectedAccount"]})},this.decryptMessageController=new ct.default({getState:this.getState.bind(this),messenger:this.controllerMessenger.getRestricted({name:"DecryptMessageController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`,`${this.keyringController.name}:decryptMessage`],allowedEvents:["DecryptMessageManager:stateChange","DecryptMessageManager:unapprovedMessage"]}),managerMessenger:this.controllerMessenger.getRestricted({name:"DecryptMessageManager"}),metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.encryptionPublicKeyController=new Ct.default({messenger:this.controllerMessenger.getRestricted({name:"EncryptionPublicKeyController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`],allowedEvents:["EncryptionPublicKeyManager:stateChange","EncryptionPublicKeyManager:unapprovedMessage"]}),managerMessenger:this.controllerMessenger.getRestricted({name:"EncryptionPublicKeyManager"}),getEncryptionPublicKey:this.keyringController.getEncryptionPublicKey.bind(this.keyringController),getAccountKeyringType:this.keyringController.getAccountKeyringType.bind(this.keyringController),getState:this.getState.bind(this),metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.signatureController=new $.SignatureController({messenger:this.controllerMessenger.getRestricted({name:"SignatureController",allowedActions:[`${this.accountsController.name}:getState`,`${this.approvalController.name}:addRequest`,`${this.keyringController.name}:signMessage`,`${this.keyringController.name}:signPersonalMessage`,`${this.keyringController.name}:signTypedMessage`,`${this.loggingController.name}:add`,`${this.networkController.name}:getNetworkClientById`]}),trace:Ee.trace,decodingApiUrl:"https://signature-insights.api.cx.metamask.io/v1",isDecodeSignatureRequestEnabled:()=>this.preferencesController.state.useTransactionSimulations}),this.signatureController.hub.on("cancelWithReason",({metadata:e,reason:t})=>{this.metaMetricsController.trackEvent({event:t,category:ge.MetaMetricsEventCategory.Transactions,properties:{action:"Sign Request",type:e.type}})});const Ae=this.controllerMessenger.getRestricted({name:"SwapsController",allowedActions:["NetworkController:getState","NetworkController:getNetworkClientById","TokenRatesController:getState"],allowedEvents:[]});this.swapsController=new dt.default({messenger:Ae,getBufferedGasLimit:async(e,t)=>{const{gas:r,simulationFails:n}=await this.txController.estimateGasBuffered(e.txParams,t,Cr(kr,this,Er).call(this));return{gasLimit:r,simulationFails:n}},getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getLayer1GasFee:(...e)=>this.txController.getLayer1GasFee(...e),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)},n.SwapsController);const Ie=this.controllerMessenger.getRestricted({name:H.BRIDGE_CONTROLLER_NAME,allowedActions:["AccountsController:getSelectedMultichainAccount","SnapController:handleRequest","NetworkController:getState","NetworkController:getNetworkClientById","NetworkController:findNetworkClientIdByChainId","TokenRatesController:getState","MultichainAssetsRatesController:getState","RemoteFeatureFlagController:getState","CurrencyRateController:getState"],allowedEvents:[]});this.bridgeController=new H.BridgeController({messenger:Ie,clientId:H.BridgeClientId.EXTENSION,getLayer1GasFee:(...e)=>this.txController.getLayer1GasFee(...e),fetchFn:async(e,{cacheOptions:t,functionName:r,...n})=>"fetchBridgeTokens"===r?await(0,_e.default)({url:e,fetchOptions:{method:"GET",...n},cacheOptions:t,functionName:r}):await(0,F.handleFetch)(e,{method:"GET",...n}),trackMetaMetricsFn:(e,t)=>{const r=(Date.now()+Math.random()).toString();this.metaMetricsController.trackEvent.bind(this.metaMetricsController)({category:H.UNIFIED_SWAP_BRIDGE_EVENT_CATEGORY,event:e,properties:{...t??{},environmentType:(0,gt.getEnvironmentType)(),actionId:r}})},traceFn:(...e)=>(0,Ee.trace)(...e),config:{customBridgeApiBaseUrl:Oe.BRIDGE_API_BASE_URL}});const Ne=this.controllerMessenger.getRestricted({name:te.BRIDGE_STATUS_CONTROLLER_NAME,allowedActions:["AccountsController:getSelectedMultichainAccount","NetworkController:getNetworkClientById","NetworkController:findNetworkClientIdByChainId","NetworkController:getState","BridgeController:getBridgeERC20Allowance","BridgeController:trackUnifiedSwapBridgeEvent","BridgeController:stopPollingForQuotes","GasFeeController:getState","AccountsController:getAccountByAddress","SnapController:handleRequest","TransactionController:getState","RemoteFeatureFlagController:getState"],allowedEvents:["MultichainTransactionsController:transactionConfirmed","TransactionController:transactionFailed","TransactionController:transactionConfirmed"]});this.bridgeStatusController=new te.BridgeStatusController({messenger:Ne,state:n.BridgeStatusController,fetchFn:async(e,t)=>await(0,F.handleFetch)(e,{method:"GET",...t}),addTransactionFn:(...e)=>this.txController.addTransaction(...e),addTransactionBatchFn:(...e)=>this.txController.addTransactionBatch(...e),estimateGasFeeFn:(...e)=>this.txController.estimateGasFee(...e),updateTransactionFn:(...e)=>this.txController.updateTransaction(...e),config:{customBridgeApiBaseUrl:Oe.BRIDGE_API_BASE_URL},traceFn:(...e)=>(0,Ee.trace)(...e)});const Re=()=>this.preferencesController.state.useExternalNameSources;this.nameController=new K.NameController({messenger:this.controllerMessenger.getRestricted({name:"NameController",allowedActions:[]}),providers:[new K.ENSNameProvider({reverseLookup:this.ensController.reverseResolveAddress.bind(this.ensController)}),new K.EtherscanNameProvider({isEnabled:Re}),new K.TokenNameProvider({isEnabled:Re}),new K.LensNameProvider({isEnabled:Re}),new $e.SnapsNameProvider({messenger:this.controllerMessenger.getRestricted({name:"SnapsNameProvider",allowedActions:["SnapController:getAll","SnapController:get","SnapController:handleRequest","PermissionController:getState"]})})],state:n.NameController});const je=this.controllerMessenger.getRestricted({name:"PetnamesBridge",allowedEvents:["NameController:stateChange","AccountsController:stateChange","AddressBookController:stateChange"],allowedActions:["AccountsController:listAccounts"]});new Ge.AddressBookPetnamesBridge({addressBookController:this.addressBookController,nameController:this.nameController,messenger:je}).init(),new Ke.AccountIdentitiesPetnamesBridge({nameController:this.nameController,messenger:je}).init(),this.userOperationController=new q.UserOperationController({entrypoint:null,getGasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),messenger:this.controllerMessenger.getRestricted({name:"UserOperationController",allowedActions:["ApprovalController:addRequest","NetworkController:getNetworkClientById","KeyringController:prepareUserOperation","KeyringController:patchUserOperation","KeyringController:signUserOperation"]}),state:n.UserOperationController}),this.userOperationController.hub.on("user-operation-added",this._onUserOperationAdded.bind(this)),this.userOperationController.hub.on("transaction-updated",this._onUserOperationTransactionUpdated.bind(this)),a.subscribe("NetworkController:networkDidChange",()=>{this.accountTrackerController.updateAccounts()}),this.controllerMessenger.subscribe("PreferencesController:stateChange",(0,gt.previousValueComparator)((e,t)=>{const{useExternalServices:r}=e,{useExternalServices:n}=t;n&&!r?(this.remoteFeatureFlagController.enable(),this.remoteFeatureFlagController.updateRemoteFeatureFlags()):!n&&r&&this.remoteFeatureFlagController.disable()},this.preferencesController.state));const xe=this.controllerMessenger.getRestricted({name:"RemoteFeatureFlagController",allowedActions:[],allowedEvents:[]});xe.subscribe("RemoteFeatureFlagController:stateChange",e=>{e?(console.log("isRpcFailoverEnabled = ",e,", enabling RPC failover"),this.networkController.enableRpcFailover()):(console.log("isRpcFailoverEnabled = ",e,", disabling RPC failover"),this.networkController.disableRpcFailover())},e=>e.remoteFeatureFlags.walletFrameworkRpcFailoverEnabled),this.remoteFeatureFlagController=new U.RemoteFeatureFlagController({messenger:xe,fetchInterval:9e5,disabled:!this.preferencesController.state.useExternalServices,getMetaMetricsId:()=>this.metaMetricsController.getMetaMetricsId(),clientConfigApiService:new U.ClientConfigApiService({fetch:globalThis.fetch.bind(globalThis),config:{client:U.ClientType.Extension,distribution:this._getConfigForRemoteFeatureFlagRequest().distribution,environment:this._getConfigForRemoteFeatureFlagRequest().environment}})});const Be=[this.networkController,this.preferencesController,this.gasFeeController,this.onboardingController,this.keyringController,this.metaMetricsController,this.accountsController],Fe={ExecutionService:zt.ExecutionServiceInit,InstitutionalSnapController:Gt.InstitutionalSnapControllerInit,RateLimitController:zt.RateLimitControllerInit,SnapsRegistry:zt.SnapsRegistryInit,CronjobController:zt.CronjobControllerInit,SnapController:zt.SnapControllerInit,SnapInsightsController:zt.SnapInsightsControllerInit,SnapInterfaceController:zt.SnapInterfaceControllerInit,WebSocketService:zt.WebSocketServiceInit,PPOMController:Vt.PPOMControllerInit,TransactionController:Ht.TransactionControllerInit,SmartTransactionsController:Wt.SmartTransactionsControllerInit,NftController:qt.NftControllerInit,AssetsContractController:qt.AssetsContractControllerInit,NftDetectionController:qt.NftDetectionControllerInit,TokenRatesController:qt.TokenRatesControllerInit,MultichainAssetsController:Kt.MultichainAssetsControllerInit,MultichainAssetsRatesController:Kt.MultichainAssetsRatesControllerInit,MultichainBalancesController:Kt.MultichainBalancesControllerInit,MultichainTransactionsController:Kt.MultichainTransactionsControllerInit,MultichainAccountService:lr.MultichainAccountServiceInit,MultichainNetworkController:Kt.MultichainNetworkControllerInit,AuthenticationController:Jt.AuthenticationControllerInit,UserStorageController:Qt.UserStorageControllerInit,NotificationServicesController:er.NotificationServicesControllerInit,NotificationServicesPushController:tr.NotificationServicesPushControllerInit,DeFiPositionsController:Zt.DeFiPositionsControllerInit,DelegationController:rr.DelegationControllerInit,AccountTreeController:ar.AccountTreeControllerInit,SeedlessOnboardingController:ur.SeedlessOnboardingControllerInit,NetworkOrderController:qt.NetworkOrderControllerInit},{controllerApi:Le,controllerMemState:Ue,controllerPersistedState:qe,controllersByName:He}=Cr(kr,this,Ir).call(this,{existingControllers:Be,initFunctions:Fe,initState:n});this.controllerApi=Le,this.controllerMemState=Ue,this.controllerPersistedState=qe,this.controllersByName=He,this.cronjobController=He.CronjobController,this.rateLimitController=He.RateLimitController,this.snapController=He.SnapController,this.snapInsightsController=He.SnapInsightsController,this.snapInterfaceController=He.SnapInterfaceController,this.snapsRegistry=He.SnapsRegistry,this.ppomController=He.PPOMController,this.txController=He.TransactionController,this.smartTransactionsController=He.SmartTransactionsController,this.nftController=He.NftController,this.nftDetectionController=He.NftDetectionController,this.assetsContractController=He.AssetsContractController,this.multichainAssetsController=He.MultichainAssetsController,this.multichainBalancesController=He.MultichainBalancesController,this.multichainTransactionsController=He.MultichainTransactionsController,this.multichainAssetsRatesController=He.MultichainAssetsRatesController,this.multichainAccountService=He.MultichainAccountService,this.tokenRatesController=He.TokenRatesController,this.multichainNetworkController=He.MultichainNetworkController,this.authenticationController=He.AuthenticationController,this.userStorageController=He.UserStorageController,this.delegationController=He.DelegationController,this.notificationServicesController=He.NotificationServicesController,this.notificationServicesPushController=He.NotificationServicesPushController,this.deFiPositionsController=He.DeFiPositionsController,this.accountTreeController=He.AccountTreeController,this.seedlessOnboardingController=He.SeedlessOnboardingController,this.networkOrderController=He.NetworkOrderController,this.notificationServicesController.init(),this.snapController.init(),this.cronjobController.init(),this.controllerMessenger.subscribe("TransactionController:transactionStatusUpdated",({transactionMeta:e})=>{this._onFinishedTransaction(e)}),this.controllerMessenger.subscribe("NotificationServicesPushController:onNewNotifications",e=>{this.metaMetricsController.trackEvent({category:ge.MetaMetricsEventCategory.PushNotifications,event:ge.MetaMetricsEventName.PushNotificationReceived,properties:{notification_id:e.id,notification_type:e.type,chain_id:null==e?void 0:e.chain_id}})}),this.controllerMessenger.subscribe("NotificationServicesPushController:pushNotificationClicked",e=>{this.metaMetricsController.trackEvent({category:ge.MetaMetricsEventCategory.PushNotifications,event:ge.MetaMetricsEventName.PushNotificationClicked,properties:{notification_id:e.id,notification_type:e.type,chain_id:null==e?void 0:e.chain_id}})}),this.metamaskMiddleware=(0,mt.default)({static:{eth_syncing:!1,web3_clientVersion:`MetaMask/v${o}`},version:o,getAccounts:({origin:e})=>{if(e===he.ORIGIN_METAMASK){const e=this.accountsController.getSelectedAccount().address;return e?[e]:[]}return this.isUnlocked()?this.getPermittedAccounts(e):[]},processTransaction:(e,t)=>(0,Pt.addDappTransaction)(this.getAddTransactionRequest({transactionParams:e,dappRequest:t})),processTypedMessage:(...e)=>(0,Et.addTypedMessage)({signatureController:this.signatureController,signatureParams:e}),processTypedMessageV3:(...e)=>(0,Et.addTypedMessage)({signatureController:this.signatureController,signatureParams:e}),processTypedMessageV4:(...e)=>(0,Et.addTypedMessage)({signatureController:this.signatureController,signatureParams:e}),processPersonalMessage:(...e)=>(0,Et.addPersonalMessage)({signatureController:this.signatureController,signatureParams:e}),processEncryptionPublicKey:this.encryptionPublicKeyController.newRequestEncryptionPublicKey.bind(this.encryptionPublicKeyController),processDecryptMessage:this.decryptMessageController.newRequestDecryptMessage.bind(this.decryptMessageController),getPendingNonce:this.getPendingNonce.bind(this),getPendingTransactionByHash:e=>this.txController.state.transactions.find(t=>t.hash===e&&t.status===V.TransactionStatus.submitted),processSendCalls:Xt.processSendCalls.bind(null,{addTransaction:this.txController.addTransaction.bind(this.txController),addTransactionBatch:this.txController.addTransactionBatch.bind(this.txController),getDismissSmartAccountSuggestionEnabled:()=>this.preferencesController.state.preferences.dismissSmartAccountSuggestionEnabled,isAtomicBatchSupported:this.txController.isAtomicBatchSupported.bind(this.txController),validateSecurity:(e,t,r)=>(0,Rt.validateRequestWithPPOM)({chainId:r,ppomController:this.ppomController,request:t,securityAlertId:e,updateSecurityAlertResponse:this.updateSecurityAlertResponse.bind(this)})},this.controllerMessenger),getCallsStatus:Xt.getCallsStatus.bind(null,this.controllerMessenger),getCapabilities:Xt.getCapabilities.bind(null,{getDismissSmartAccountSuggestionEnabled:()=>this.preferencesController.state.preferences.dismissSmartAccountSuggestionEnabled,getIsSmartTransaction:e=>(0,Te.getIsSmartTransaction)(this._getMetaMaskState(),e),isAtomicBatchSupported:this.txController.isAtomicBatchSupported.bind(this.txController),isRelaySupported:sr.isRelaySupported,getSendBundleSupportedChains:hr.getSendBundleSupportedChains},this.controllerMessenger)}),this.on("update",e=>this._onStateUpdate(e));const ze={AccountTracker:this.accountTrackerController,TokenRatesController:this.tokenRatesController,DecryptMessageController:this.decryptMessageController,EncryptionPublicKeyController:this.encryptionPublicKeyController,SignatureController:this.signatureController,SwapsController:this.swapsController,BridgeController:this.bridgeController,BridgeStatusController:this.bridgeStatusController,EnsController:this.ensController,ApprovalController:this.approvalController};this.store.updateStructure({AccountsController:this.accountsController,AppStateController:this.appStateController,AppMetadataController:this.appMetadataController,KeyringController:this.keyringController,PreferencesController:this.preferencesController,MetaMetricsController:this.metaMetricsController,MetaMetricsDataDeletionController:this.metaMetricsDataDeletionController,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,MultichainNetworkController:this.multichainNetworkController,NetworkController:this.networkController,AlertController:this.alertController,OnboardingController:this.onboardingController,SeedlessOnboardingController:this.seedlessOnboardingController,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController,SubjectMetadataController:this.subjectMetadataController,AnnouncementController:this.announcementController,NetworkOrderController:this.networkOrderController,AccountOrderController:this.accountOrderController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,TokenBalancesController:this.tokenBalancesController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,PhishingController:this.phishingController,SelectedNetworkController:this.selectedNetworkController,LoggingController:this.loggingController,MultichainRatesController:this.multichainRatesController,NameController:this.nameController,UserOperationController:this.userOperationController,AuthenticationController:this.authenticationController,UserStorageController:this.userStorageController,NotificationServicesController:this.notificationServicesController,NotificationServicesPushController:this.notificationServicesPushController,RemoteFeatureFlagController:this.remoteFeatureFlagController,DeFiPositionsController:this.deFiPositionsController,...ze,...qe}),this.memStore=new We.default({config:{AccountsController:this.accountsController,AppStateController:this.appStateController,AppMetadataController:this.appMetadataController,MultichainAssetsController:this.multichainAssetsController,MultichainBalancesController:this.multichainBalancesController,MultichainTransactionsController:this.multichainTransactionsController,MultichainAssetsRatesController:this.multichainAssetsRatesController,TokenRatesController:this.tokenRatesController,MultichainNetworkController:this.multichainNetworkController,NetworkController:this.networkController,KeyringController:this.keyringController,PreferencesController:this.preferencesController,MetaMetricsController:this.metaMetricsController,MetaMetricsDataDeletionController:this.metaMetricsDataDeletionController,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,AlertController:this.alertController,OnboardingController:this.onboardingController,SeedlessOnboardingController:this.seedlessOnboardingController,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController,SubjectMetadataController:this.subjectMetadataController,AnnouncementController:this.announcementController,NetworkOrderController:this.networkOrderController,AccountOrderController:this.accountOrderController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,TokenBalancesController:this.tokenBalancesController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,SelectedNetworkController:this.selectedNetworkController,LoggingController:this.loggingController,MultichainRatesController:this.multichainRatesController,SnapController:this.snapController,CronjobController:this.cronjobController,SnapsRegistry:this.snapsRegistry,SnapInterfaceController:this.snapInterfaceController,SnapInsightsController:this.snapInsightsController,NameController:this.nameController,UserOperationController:this.userOperationController,AuthenticationController:this.authenticationController,UserStorageController:this.userStorageController,NotificationServicesController:this.notificationServicesController,NotificationServicesPushController:this.notificationServicesPushController,RemoteFeatureFlagController:this.remoteFeatureFlagController,DeFiPositionsController:this.deFiPositionsController,PhishingController:this.phishingController,...ze,...Ue},controllerMessenger:this.controllerMessenger});const Je=[this.accountTrackerController.resetState.bind(this.accountTrackerController),this.decryptMessageController.resetState.bind(this.decryptMessageController),this.encryptionPublicKeyController.resetState.bind(this.encryptionPublicKeyController),this.signatureController.resetState.bind(this.signatureController),this.swapsController.resetState.bind(this.swapsController),this.bridgeController.resetState.bind(this.bridgeController),this.ensController.resetState.bind(this.ensController),this.approvalController.clear.bind(this.approvalController)];ke.isManifestV3?!0===r&&(this.resetStates(Je),this.extension.storage.session.set({isFirstMetaMaskControllerSetup:!1})):this.resetStates(Je);!this.isUnlocked()&&this.onboardingController.state.completedOnboarding,this._startUISync(),this.extension.runtime.getPlatformInfo().then(({os:e})=>{this.appStateController.setBrowserEnvironment(e,this.extension.runtime.getBrowserInfo===undefined?"chrome":"firefox")}),this.setupControllerEventSubscriptions(),this.setupMultichainDataAndSubscriptions(),this.publicConfigStore=this.createPublicConfigStore(),this.extension.runtime.onMessageExternal.addListener(Ve.onMessageReceived),(0,Ve.checkForMultipleVersionsRunning)(),this.onboardingController.state.completedOnboarding&&this.postOnboardingInitialization()}getInfuraFeatureFlags(){(0,_e.default)({url:"https://swap.api.cx.metamask.io/featureFlags",cacheRefreshTime:20*pe.MINUTE}).then(this.onFeatureFlagResponseReceived).catch(e=>{C.default.warn("Feature flag endpoint is unreachable",e)})}onFeatureFlagResponseReceived(e){const{multiChainAssets:t={}}=e,{pollInterval:r}=t;r>0&&this.tokenBalancesController.setIntervalLength(r*pe.SECOND)}postOnboardingInitialization(){const{usePhishDetect:e}=this.preferencesController.state;this.networkController.lookupNetwork(),e&&this.phishingController.maybeUpdateState()}triggerNetworkrequests(){this.tokenDetectionController.enable(),this.getInfuraFeatureFlags(),(0,z.isEvmAccountType)(this.accountsController.getSelectedMultichainAccount().type)||this.multichainRatesController.start()}stopNetworkRequests(){this.txController.stopIncomingTransactionPolling(),this.tokenDetectionController.disable(),this.multichainRatesController.stop()}resetStates(e){e.forEach(e=>{try{e()}catch(e){console.error(e)}})}async getSnapKeyring(){let[e]=this.keyringController.getKeyringsByType(ce.KeyringType.snap);return e||(await this.keyringController.addNewKeyring(ce.KeyringType.snap),[e]=this.keyringController.getKeyringsByType(ce.KeyringType.snap)),e}trackInsightSnapView(e){this.metaMetricsController.trackEvent({event:ge.MetaMetricsEventName.InsightSnapViewed,category:ge.MetaMetricsEventCategory.Snaps,properties:{snap_id:e}})}_getSnapMetadata(e){var t;return null===(t=this.snapsRegistry.state.database)||void 0===t||null===(t=t.verifiedSnaps)||void 0===t||null===(t=t[e])||void 0===t?void 0:t.metadata}async handleSnapRequest(e){return await this.controllerMessenger.call("SnapController:handleRequest",e)}getLocale(){const{currentLocale:e}=this.preferencesController.state;return e}getPreferences(){const{preferences:e,securityAlertsEnabled:t,useCurrencyRateCheck:r,useTransactionSimulations:n,useTokenDetection:o,useMultiAccountBalanceChecker:s,openSeaEnabled:i,useNftDetection:a}=this.preferencesController.state;return{privacyMode:e.privacyMode,showTestnets:e.showTestNetworks,securityAlertsEnabled:t,useCurrencyRateCheck:r,useTransactionSimulations:n,useTokenDetection:o,useMultiAccountBalanceChecker:s,openSeaEnabled:i,useNftDetection:a}}getSnapPermissionSpecifications(){return{...(0,B.buildSnapEndowmentSpecifications)(Object.keys(de.ExcludedSnapEndowments)),...(0,B.buildSnapRestrictedMethodSpecifications)(Object.keys(de.ExcludedSnapPermissions),{getPreferences:()=>{const e=this.getLocale(),t=this.currencyRateController.state.currentCurrency,{privacyMode:r,securityAlertsEnabled:n,useCurrencyRateCheck:o,useTransactionSimulations:s,useTokenDetection:i,useMultiAccountBalanceChecker:a,openSeaEnabled:l,useNftDetection:c,showTestnets:d}=this.getPreferences();return{locale:e,currency:t,hideBalances:r,useSecurityAlerts:n,useExternalPricingData:o,simulateOnChainActions:s,useTokenDetection:i,batchCheckBalances:a,displayNftMedia:l,useNftDetection:c,showTestnets:d}},clearSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:clearSnapState"),getMnemonic:async e=>{if(!e)return this.getPrimaryKeyringMnemonic();try{const{type:t,mnemonic:r}=await this.controllerMessenger.call("KeyringController:withKeyring",{id:e},async({keyring:e})=>({type:e.type,mnemonic:e.mnemonic}));if(t!==p.KeyringTypes.hd||!r)throw new Error(`Entropy source with ID "${e}" not found.`);return r}catch{throw new Error(`Entropy source with ID "${e}" not found.`)}},getMnemonicSeed:async e=>{if(!e)return this.getPrimaryKeyringMnemonicSeed();try{const{type:t,seed:r}=await this.controllerMessenger.call("KeyringController:withKeyring",{id:e},async({keyring:e})=>({type:e.type,seed:e.seed}));if(t!==p.KeyringTypes.hd||!r)throw new Error(`Entropy source with ID "${e}" not found.`);return r}catch{throw new Error(`Entropy source with ID "${e}" not found.`)}},getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),getSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:get"),handleSnapRpcRequest:this.handleSnapRequest.bind(this),getSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getSnapState"),requestUserApproval:this.approvalController.addAndShowApprovalRequest.bind(this.approvalController),showNativeNotification:(e,t)=>this.controllerMessenger.call("RateLimitController:call",e,"showNativeNotification",e,t.message),showInAppNotification:(e,t)=>{const{message:r,title:n,footerLink:o}=t,s={interfaceId:t.content,message:r,title:n,footerLink:o};return this.controllerMessenger.call("RateLimitController:call",e,"showInAppNotification",e,s)},updateSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:updateSnapState"),maybeUpdatePhishingList:()=>{const{usePhishDetect:e}=this.preferencesController.state;e&&this.controllerMessenger.call("PhishingController:maybeUpdateState")},isOnPhishingList:e=>{const{usePhishDetect:t}=this.preferencesController.state;return!!t&&this.controllerMessenger.call("PhishingController:testOrigin",e).result},createInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:createInterface"),getInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:getInterface"),getClientCryptography:()=>({}),getSnapKeyring:this.getSnapKeyring.bind(this)})}}setupControllerEventSubscriptions(){let e,t;try{var r;t=null===(r=this.accountsController.getSelectedMultichainAccount(Ne.MultichainNetworks.SOLANA))||void 0===r?void 0:r.address}catch{}this.controllerMessenger.subscribe("PreferencesController:stateChange",(0,gt.previousValueComparator)(async(e,t)=>{const{currentLocale:r}=t;await(0,xe.updateCurrentLocale)(r),Cr(kr,this,Mr).call(this,t,e)},this.preferencesController.state)),this.controllerMessenger.subscribe(`${this.accountsController.name}:selectedAccountChange`,async t=>{t.address&&t.address!==e&&(e=t.address,await this._onAccountChange(t.address))}),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,async(e,t)=>{const r=(0,vt.diffMap)(e,t);for(const[e,t]of r.entries())this._notifyAccountsChange(e,t)},vt.getPermittedAccountsByOrigin),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,async(e,t)=>{const r=(0,vt.getChangedAuthorizations)(e,t),n=(0,vt.getRemovedAuthorizations)(e,t);for(const[e,t]of n.entries()){const r=(0,ee.getSessionScopes)(t,{getNonEvmSupportedMethods:this.getNonEvmSupportedMethods.bind(this)});Object.entries(r).forEach(([t,r])=>{r.notifications.includes("eth_subscription")&&r.methods.includes("eth_subscribe")&&this.removeMultichainApiEthSubscriptionMiddleware({scope:t,origin:e})})}for(const[e,t]of r.entries()){const r=(0,ee.getSessionScopes)(t,{getNonEvmSupportedMethods:this.getNonEvmSupportedMethods.bind(this)});Object.entries(r).forEach(([t,r])=>{r.notifications.includes("eth_subscription")&&r.methods.includes("eth_subscribe")?Object.values(this.connections[e]??{}).forEach(({tabId:r})=>{this.addMultichainApiEthSubscriptionMiddleware({scope:t,origin:e,tabId:r})}):this.removeMultichainApiEthSubscriptionMiddleware({scope:t,origin:e})}),this._notifyAuthorizationChange(e,t)}},vt.getAuthorizedScopesByOrigin),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,async(e,t)=>{(0,u.uniq)([...t.keys(),...e.keys()]).forEach(r=>{var n,o;const s=t.get(r),i=e.get(r),a=Boolean(null==s||null===(n=s.sessionProperties)||void 0===n?void 0:n[ee.KnownSessionProperties.SolanaAccountChangedNotifications]),l=Boolean(null==i||null===(o=i.sessionProperties)||void 0===o?void 0:o[ee.KnownSessionProperties.SolanaAccountChangedNotifications]);if(!a&&!l)return;const c=(s?(0,ee.getPermittedAccountsForScopes)(s,[Ne.MultichainNetworks.SOLANA,Ne.MultichainNetworks.SOLANA_DEVNET,Ne.MultichainNetworks.SOLANA_TESTNET]):[]).map(e=>{const{address:t}=(0,J.parseCaipAccountId)(e);return t}),d=(0,u.uniq)(c),[p]=this.sortMultichainAccountsByLastSelected(d),h=(i?(0,ee.getPermittedAccountsForScopes)(i,[Ne.MultichainNetworks.SOLANA,Ne.MultichainNetworks.SOLANA_DEVNET,Ne.MultichainNetworks.SOLANA_TESTNET]):[]).map(e=>{const{address:t}=(0,J.parseCaipAccountId)(e);return t}),g=(0,u.uniq)(h),[m]=this.sortMultichainAccountsByLastSelected(g);p!==m&&this._notifySolanaAccountChange(r,m?[m]:[])})},vt.getAuthorizedScopesByOrigin),this.controllerMessenger.subscribe(`${this.accountsController.name}:selectedAccountChange`,async e=>{if(e.type===z.SolAccountType.DataAccount&&e.address!==t){t=e.address;const r=(0,vt.getOriginsWithSessionProperty)(this.permissionController.state,ee.KnownSessionProperties.SolanaAccountChangedNotifications),n=(0,vt.getPermittedAccountsForScopesByOrigin)(this.permissionController.state,[Ne.MultichainNetworks.SOLANA,Ne.MultichainNetworks.SOLANA_DEVNET,Ne.MultichainNetworks.SOLANA_TESTNET]);if(n.size>0)for(const[t,o]of n.entries()){o.map(e=>{const{address:t}=(0,J.parseCaipAccountId)(e);return t}).includes(e.address)&&r[t]&&this._notifySolanaAccountChange(t,[e.address])}}}),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,async(e,t)=>{const r=(0,vt.diffMap)(e,t);for(const[e,t]of r.entries()){const r=this.selectedNetworkController.getNetworkClientIdForDomain(e),n=this.networkController.getNetworkConfigurationByNetworkClientId(r);if(!n){C.default.warn(`No network configuration found for clientId: ${r}`);continue}const{chainId:o}=n;if(t.length>0&&!t.includes(o)){const r=this.networkController.findNetworkClientIdByChainId(t[0]);this.networkController.setActiveNetwork(r),this.selectedNetworkController.setNetworkClientIdForDomain(e,r)}}},vt.getPermittedChainsByOrigin),this.controllerMessenger.subscribe("NetworkController:networkRemoved",({chainId:e})=>{const t=(0,J.toCaipChainId)("eip155",(0,J.hexToBigInt)(e).toString(10));this.removeAllScopePermissions(t)}),this.controllerMessenger.subscribe(`${this.snapController.name}:snapInstallStarted`,(e,t,r)=>{var n;const o=null===(n=this._getSnapMetadata(e))||void 0===n?void 0:n.category;this.metaMetricsController.trackEvent({event:r?ge.MetaMetricsEventName.SnapUpdateStarted:ge.MetaMetricsEventName.SnapInstallStarted,category:ge.MetaMetricsEventCategory.Snaps,properties:{snap_id:e,origin:t,snap_category:o}})}),this.controllerMessenger.subscribe(`${this.snapController.name}:snapInstallFailed`,(e,t,r,n)=>{var o;const s=n.includes("User rejected the request."),i=r?ge.MetaMetricsEventName.SnapUpdateFailed:ge.MetaMetricsEventName.SnapInstallFailed,a=r?ge.MetaMetricsEventName.SnapUpdateRejected:ge.MetaMetricsEventName.SnapInstallRejected,l=null===(o=this._getSnapMetadata(e))||void 0===o?void 0:o.category;this.metaMetricsController.trackEvent({event:s?a:i,category:ge.MetaMetricsEventCategory.Snaps,properties:{snap_id:e,origin:t,snap_category:l}})}),this.controllerMessenger.subscribe(`${this.snapController.name}:snapInstalled`,(e,t,r)=>{var n;if(r)return;const o=e.id,s=null===(n=this._getSnapMetadata(o))||void 0===n?void 0:n.category;this.metaMetricsController.trackEvent({event:ge.MetaMetricsEventName.SnapInstalled,category:ge.MetaMetricsEventCategory.Snaps,properties:{snap_id:o,version:e.version,origin:t,snap_category:s}})}),this.controllerMessenger.subscribe(`${this.snapController.name}:snapUpdated`,(e,t,r,n)=>{var o;if(n)return;const s=e.id,i=null===(o=this._getSnapMetadata(s))||void 0===o?void 0:o.category;this.metaMetricsController.trackEvent({event:ge.MetaMetricsEventName.SnapUpdated,category:ge.MetaMetricsEventCategory.Snaps,properties:{snap_id:s,old_version:t,new_version:e.version,origin:r,snap_category:i}})}),this.controllerMessenger.subscribe(`${this.snapController.name}:snapTerminated`,e=>{const t=Object.values(this.approvalController.state.pendingApprovals).filter(t=>t.origin===e.id&&t.type.startsWith(de.RestrictedMethods.snap_dialog));for(const e of t)this.approvalController.reject(e.id,new Error("Snap was terminated."))}),this.controllerMessenger.subscribe(`${this.snapController.name}:snapUninstalled`,e=>{var t;const r=this.notificationServicesController.getNotificationsByType(Z.TRIGGER_TYPES.SNAP).filter(t=>t.data.origin===e.id).map(e=>e.id);this.notificationServicesController.deleteNotificationsById(r);const n=e.id,o=null===(t=this._getSnapMetadata(n))||void 0===t?void 0:t.category;this.metaMetricsController.trackEvent({event:ge.MetaMetricsEventName.SnapUninstalled,category:ge.MetaMetricsEventCategory.Snaps,properties:{snap_id:n,version:e.version,snap_category:o}})})}setupMultichainDataAndSubscriptions(){this.controllerMessenger.subscribe("AccountsController:selectedAccountChange",e=>{0===this.activeControllerConnections||(0,z.isEvmAccountType)(e.type)?this.multichainRatesController.stop():this.multichainRatesController.start()}),this.controllerMessenger.subscribe("CurrencyRateController:stateChange",({currentCurrency:e})=>{e!==this.multichainRatesController.state.fiatCurrency&&this.multichainRatesController.setFiatCurrency(e)})}addMultichainApiEthSubscriptionMiddleware({scope:e,origin:t,tabId:r}){const n=this.multichainSubscriptionManager.subscribe({scope:e,origin:t,tabId:r});this.multichainMiddlewareManager.addMiddleware({scope:e,origin:t,tabId:r,middleware:n.middleware})}removeMultichainApiEthSubscriptionMiddleware({scope:e,origin:t}){this.multichainMiddlewareManager.removeMiddlewareByScopeAndOrigin(e,t),this.multichainSubscriptionManager.unsubscribeByScopeAndOrigin(e,t)}createPublicConfigStore(){const e=new l.ObservableStore,t=async({isUnlocked:e})=>{const{chainId:t,networkVersion:r,isConnected:n}=await this.getProviderNetworkState();return{isUnlocked:e,chainId:t,networkVersion:n?r:"loading"}},r=async r=>{var n;(null===(n=r.networksMetadata[r.selectedNetworkClientId])||void 0===n?void 0:n.status)===ae.NetworkStatus.Available&&e.putState(await t(r))};return this.on("update",r),r(this.getState()),e}async getProviderState(e){const t=await this.getProviderNetworkState(e),r={};if(ke.isManifestV3){var n;const{chrome:e}=globalThis;r.extensionId=null==e||null===(n=e.runtime)||void 0===n?void 0:n.id}return{isUnlocked:!0,accounts:this.getPermittedAccounts(e),...r,...t}}async getProviderNetworkState(e=R.METAMASK_DOMAIN){const t=this.controllerMessenger.call("SelectedNetworkController:getNetworkClientIdForDomain",e),r=this.controllerMessenger.call("NetworkController:getNetworkClientById",t),{chainId:n}=r.configuration,{completedOnboarding:o}=this.onboardingController.state;let s=this.deprecatedNetworkVersions[t];if(s===undefined&&o){try{const e=await r.provider.request({method:"net_version"});s=(0,Se.convertNetworkId)(e)}catch(e){console.error(e),s=null}this.deprecatedNetworkVersions[t]=s}const i=this.networkController.state.networksMetadata[t];return{chainId:n,networkVersion:s??"loading",isConnected:(null==i?void 0:i.status)===ae.NetworkStatus.Available}}getState(){const{vault:e}=this.keyringController.state,t=Boolean(e),r=this.memStore.getFlatState();return{isInitialized:t,...(0,Ut.sanitizeUIState)(r)}}getApi(){const{accountsController:e,addressBookController:t,alertController:r,appStateController:n,keyringController:o,nftController:s,nftDetectionController:i,currencyRateController:a,tokenBalancesController:l,tokenDetectionController:c,ensController:d,tokenListController:u,gasFeeController:p,metaMetricsController:h,networkController:g,multichainNetworkController:m,announcementController:f,onboardingController:C,permissionController:y,preferencesController:v,tokensController:b,smartTransactionsController:w,txController:k,backup:S,approvalController:T,phishingController:M,tokenRatesController:A,accountTrackerController:P,authenticationController:E,userStorageController:I,notificationServicesController:_,notificationServicesPushController:N,deFiPositionsController:O}=this;return{getState:this.getState.bind(this),setCurrentCurrency:a.setCurrentCurrency.bind(a),setUseBlockie:v.setUseBlockie.bind(v),setUsePhishDetect:v.setUsePhishDetect.bind(v),setUseMultiAccountBalanceChecker:v.setUseMultiAccountBalanceChecker.bind(v),setUseSafeChainsListValidation:v.setUseSafeChainsListValidation.bind(v),setUseTokenDetection:v.setUseTokenDetection.bind(v),setUseNftDetection:v.setUseNftDetection.bind(v),setUse4ByteResolution:v.setUse4ByteResolution.bind(v),setUseCurrencyRateCheck:v.setUseCurrencyRateCheck.bind(v),setOpenSeaEnabled:v.setOpenSeaEnabled.bind(v),getProviderConfig:()=>(0,Pe.getProviderConfig)({metamask:this.networkController.state}),grantPermissionsIncremental:this.permissionController.grantPermissionsIncremental.bind(this.permissionController),grantPermissions:this.permissionController.grantPermissions.bind(this.permissionController),setSecurityAlertsEnabled:v.setSecurityAlertsEnabled.bind(v),setAddSnapAccountEnabled:v.setAddSnapAccountEnabled.bind(v),setUseExternalNameSources:v.setUseExternalNameSources.bind(v),setUseTransactionSimulations:v.setUseTransactionSimulations.bind(v),setIpfsGateway:v.setIpfsGateway.bind(v),setIsIpfsGatewayEnabled:v.setIsIpfsGatewayEnabled.bind(v),setUseAddressBarEnsResolution:v.setUseAddressBarEnsResolution.bind(v),setParticipateInMetaMetrics:h.setParticipateInMetaMetrics.bind(h),setDataCollectionForMarketing:h.setDataCollectionForMarketing.bind(h),setMarketingCampaignCookieId:h.setMarketingCampaignCookieId.bind(h),setCurrentLocale:v.setCurrentLocale.bind(v),setServiceWorkerKeepAlivePreference:v.setServiceWorkerKeepAlivePreference.bind(v),markPasswordForgotten:this.markPasswordForgotten.bind(this),unMarkPasswordForgotten:this.unMarkPasswordForgotten.bind(this),getRequestAccountTabIds:this.getRequestAccountTabIds,getOpenMetamaskTabsIds:this.getOpenMetamaskTabsIds,markNotificationPopupAsAutomaticallyClosed:()=>this.notificationManager.markAsAutomaticallyClosed(),getCode:this.getCode.bind(this),addNewAccount:this.addNewAccount.bind(this),getSeedPhrase:this.getSeedPhrase.bind(this),resetAccount:this.resetAccount.bind(this),removeAccount:this.removeAccount.bind(this),importAccountWithStrategy:this.importAccountWithStrategy.bind(this),getNextAvailableAccountName:e.getNextAvailableAccountName.bind(e),getAccountsBySnapId:e=>(0,Mt.getAccountsBySnapId)(this.getSnapKeyring.bind(this),e),checkIsSeedlessPasswordOutdated:this.checkIsSeedlessPasswordOutdated.bind(this),syncPasswordAndUnlockWallet:this.syncPasswordAndUnlockWallet.bind(this),connectHardware:this.connectHardware.bind(this),forgetDevice:this.forgetDevice.bind(this),checkHardwareStatus:this.checkHardwareStatus.bind(this),unlockHardwareWalletAccount:this.unlockHardwareWalletAccount.bind(this),attemptLedgerTransportCreation:this.attemptLedgerTransportCreation.bind(this),submitQRHardwareCryptoHDKey:o.submitQRCryptoHDKey.bind(o),submitQRHardwareCryptoAccount:o.submitQRCryptoAccount.bind(o),cancelSyncQRHardware:o.cancelQRSynchronization.bind(o),submitQRHardwareSignature:o.submitQRSignature.bind(o),cancelQRHardwareSignRequest:o.cancelQRSignRequest.bind(o),submitPassword:this.submitPassword.bind(this),verifyPassword:this.verifyPassword.bind(this),setActiveNetwork:async e=>await this.multichainNetworkController.setActiveNetwork(e),getNetworksWithTransactionActivityByAccounts:this.multichainNetworkController.getNetworksWithTransactionActivityByAccounts.bind(this.multichainNetworkController),setActiveNetworkConfigurationId:e=>{this.networkController.setActiveNetwork(e)},setNetworkClientIdForDomain:(e,t)=>this.selectedNetworkController.setNetworkClientIdForDomain(e,t),rollbackToPreviousProvider:g.rollbackToPreviousProvider.bind(g),addNetwork:this.networkController.addNetwork.bind(this.networkController),updateNetwork:this.networkController.updateNetwork.bind(this.networkController),removeNetwork:this.multichainNetworkController.removeNetwork.bind(this.multichainNetworkController),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getNetworkConfigurationByNetworkClientId:this.networkController.getNetworkConfigurationByNetworkClientId.bind(this.networkController),setSelectedAddress:e=>{const t=this.accountsController.getAccountByAddress(e);if(!t)throw new Error(`No account found for address: ${e}`);this.accountsController.setSelectedAccount(t.id)},toggleExternalServices:this.toggleExternalServices.bind(this),addToken:b.addToken.bind(b),updateTokenType:b.updateTokenType.bind(b),setFeatureFlag:v.setFeatureFlag.bind(v),setPreference:v.setPreference.bind(v),addKnownMethodData:v.addKnownMethodData.bind(v),setDismissSeedBackUpReminder:v.setDismissSeedBackUpReminder.bind(v),setOverrideContentSecurityPolicyHeader:v.setOverrideContentSecurityPolicyHeader.bind(v),setAdvancedGasFee:v.setAdvancedGasFee.bind(v),setTheme:v.setTheme.bind(v),setSnapsAddSnapAccountModalDismissed:v.setSnapsAddSnapAccountModalDismissed.bind(v),setManageInstitutionalWallets:v.setManageInstitutionalWallets.bind(v),setSelectedInternalAccount:e=>{this.accountsController.getAccount(e)&&this.accountsController.setSelectedAccount(e)},setAccountName:e.setAccountName.bind(e),setAccountLabel:(e,t)=>{const r=this.accountsController.getAccountByAddress(e);if(r===undefined)throw new Error(`No account found for address: ${e}`);this.accountsController.setAccountName(r.id,t)},setSelectedMultichainAccount:e=>{this.accountTreeController.setSelectedAccountGroup(e)},getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),getTokenSymbol:this.getTokenSymbol.bind(this),getTokenStandardAndDetailsByChain:this.getTokenStandardAndDetailsByChain.bind(this),addNft:s.addNft.bind(s),addNftVerifyOwnership:s.addNftVerifyOwnership.bind(s),removeAndIgnoreNft:s.removeAndIgnoreNft.bind(s),removeNft:s.removeNft.bind(s),checkAndUpdateAllNftsOwnershipStatus:s.checkAndUpdateAllNftsOwnershipStatus.bind(s),checkAndUpdateSingleNftOwnershipStatus:s.checkAndUpdateSingleNftOwnershipStatus.bind(s),getNFTContractInfo:s.getNFTContractInfo.bind(s),isNftOwner:s.isNftOwner.bind(s),updateIncomingTransactions:k.updateIncomingTransactions.bind(k),setAddressBook:t.set.bind(t),removeFromAddressBook:t.delete.bind(t),setLastActiveTime:n.setLastActiveTime.bind(n),setCurrentExtensionPopupId:n.setCurrentExtensionPopupId.bind(n),setDefaultHomeActiveTabName:n.setDefaultHomeActiveTabName.bind(n),setConnectedStatusPopoverHasBeenShown:n.setConnectedStatusPopoverHasBeenShown.bind(n),setRecoveryPhraseReminderHasBeenShown:n.setRecoveryPhraseReminderHasBeenShown.bind(n),setRecoveryPhraseReminderLastShown:n.setRecoveryPhraseReminderLastShown.bind(n),setTermsOfUseLastAgreed:n.setTermsOfUseLastAgreed.bind(n),setSurveyLinkLastClickedOrClosed:n.setSurveyLinkLastClickedOrClosed.bind(n),setOnboardingDate:n.setOnboardingDate.bind(n),setLastViewedUserSurvey:n.setLastViewedUserSurvey.bind(n),setRampCardClosed:n.setRampCardClosed.bind(n),setNewPrivacyPolicyToastClickedOrClosed:n.setNewPrivacyPolicyToastClickedOrClosed.bind(n),setNewPrivacyPolicyToastShownDate:n.setNewPrivacyPolicyToastShownDate.bind(n),setSnapsInstallPrivacyWarningShownStatus:n.setSnapsInstallPrivacyWarningShownStatus.bind(n),setOutdatedBrowserWarningLastShown:n.setOutdatedBrowserWarningLastShown.bind(n),setIsUpdateAvailable:n.setIsUpdateAvailable.bind(n),setUpdateModalLastDismissedAt:n.setUpdateModalLastDismissedAt.bind(n),setLastUpdatedAt:n.setLastUpdatedAt.bind(n),setShowTestnetMessageInDropdown:n.setShowTestnetMessageInDropdown.bind(n),setShowBetaHeader:n.setShowBetaHeader.bind(n),setShowPermissionsTour:n.setShowPermissionsTour.bind(n),setShowAccountBanner:n.setShowAccountBanner.bind(n),setShowNetworkBanner:n.setShowNetworkBanner.bind(n),updateNftDropDownState:n.updateNftDropDownState.bind(n),getLastInteractedConfirmationInfo:n.getLastInteractedConfirmationInfo.bind(n),setLastInteractedConfirmationInfo:n.setLastInteractedConfirmationInfo.bind(n),updateSlides:n.updateSlides.bind(n),removeSlide:n.removeSlide.bind(n),setEnableEnforcedSimulations:n.setEnableEnforcedSimulations.bind(n),setEnableEnforcedSimulationsForTransaction:n.setEnableEnforcedSimulationsForTransaction.bind(n),setEnforcedSimulationsSlippageForTransaction:n.setEnforcedSimulationsSlippageForTransaction.bind(n),tryReverseResolveAddress:d.reverseResolveAddress.bind(d),startOAuthLogin:this.oauthService.startOAuthLogin.bind(this.oauthService),authenticate:this.seedlessOnboardingController.authenticate.bind(this.seedlessOnboardingController),resetOAuthLoginState:this.seedlessOnboardingController.clearState.bind(this.seedlessOnboardingController),createSeedPhraseBackup:this.createSeedPhraseBackup.bind(this),storeKeyringEncryptionKey:this.seedlessOnboardingController.storeKeyringEncryptionKey.bind(this.seedlessOnboardingController),restoreSocialBackupAndGetSeedPhrase:this.restoreSocialBackupAndGetSeedPhrase.bind(this),syncSeedPhrases:this.syncSeedPhrases.bind(this),changePassword:this.changePassword.bind(this),setLocked:this.setLocked.bind(this),createNewVaultAndKeychain:this.createNewVaultAndKeychain.bind(this),createNewVaultAndRestore:this.createNewVaultAndRestore.bind(this),generateNewMnemonicAndAddToVault:this.generateNewMnemonicAndAddToVault.bind(this),importMnemonicToVault:this.importMnemonicToVault.bind(this),exportAccount:this.exportAccount.bind(this),updateTransaction:k.updateTransaction.bind(k),approveTransactionsWithSameNonce:k.approveTransactionsWithSameNonce.bind(k),createCancelTransaction:this.createCancelTransaction.bind(this),createSpeedUpTransaction:this.createSpeedUpTransaction.bind(this),estimateGas:this.estimateGas.bind(this),estimateGasFee:k.estimateGasFee.bind(k),getNextNonce:this.getNextNonce.bind(this),addTransaction:(e,t)=>(0,Pt.addTransaction)(this.getAddTransactionRequest({transactionParams:e,transactionOptions:t,waitForSubmit:!1})),addTransactionAndWaitForPublish:(e,t)=>(0,Pt.addTransaction)(this.getAddTransactionRequest({transactionParams:e,transactionOptions:t,waitForSubmit:!0})),createTransactionEventFragment:Le.createTransactionEventFragmentWithTxId.bind(null,this.getTransactionMetricsRequest()),setTransactionActive:k.setTransactionActive.bind(k),decryptMessage:this.decryptMessageController.decryptMessage.bind(this.decryptMessageController),decryptMessageInline:this.decryptMessageController.decryptMessageInline.bind(this.decryptMessageController),cancelDecryptMessage:this.decryptMessageController.cancelDecryptMessage.bind(this.decryptMessageController),encryptionPublicKey:this.encryptionPublicKeyController.encryptionPublicKey.bind(this.encryptionPublicKeyController),cancelEncryptionPublicKey:this.encryptionPublicKeyController.cancelEncryptionPublicKey.bind(this.encryptionPublicKeyController),setSeedPhraseBackedUp:C.setSeedPhraseBackedUp.bind(C),completeOnboarding:C.completeOnboarding.bind(C),setFirstTimeFlowType:C.setFirstTimeFlowType.bind(C),setAlertEnabledness:r.setAlertEnabledness.bind(r),setUnconnectedAccountAlertShown:r.setUnconnectedAccountAlertShown.bind(r),setWeb3ShimUsageAlertDismissed:r.setWeb3ShimUsageAlertDismissed.bind(r),removePermissionsFor:this.removePermissionsFor,approvePermissionsRequest:this.acceptPermissionsRequest,rejectPermissionsRequest:this.rejectPermissionsRequest,...(0,vt.getPermissionBackgroundApiMethods)({permissionController:y,approvalController:T,accountsController:e,networkController:g,multichainNetworkController:m}),disableSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:disable"),enableSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:enable"),updateSnap:(e,t)=>(this.controllerMessenger.call("SnapController:install",e,t),null),removeSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:remove"),handleSnapRequest:this.handleSnapRequest.bind(this),revokeDynamicSnapPermissions:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:revokeDynamicPermissions"),disconnectOriginFromSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:disconnectOrigin"),updateNetworksList:this.updateNetworksList.bind(this),updateAccountsList:this.updateAccountsList.bind(this),setEnabledNetworks:this.setEnabledNetworks.bind(this),updateHiddenAccountsList:this.updateHiddenAccountsList.bind(this),getPhishingResult:async e=>(await M.maybeUpdateState(),M.test(e)),deleteInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:deleteInterface"),updateInterfaceState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:updateInterfaceState"),fetchAndSetQuotes:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:fetchAndSetQuotes"),setSelectedQuoteAggId:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSelectedQuoteAggId"),resetSwapsState:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:resetSwapsState"),setSwapsTokens:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTokens"),clearSwapsQuotes:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:clearSwapsQuotes"),setApproveTxId:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setApproveTxId"),setTradeTxId:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setTradeTxId"),setSwapsTxGasPrice:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTxGasPrice"),setSwapsTxGasLimit:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTxGasLimit"),setSwapsTxMaxFeePerGas:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTxMaxFeePerGas"),setSwapsTxMaxFeePriorityPerGas:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTxMaxFeePriorityPerGas"),safeRefetchQuotes:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:safeRefetchQuotes"),stopPollingForQuotes:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:stopPollingForQuotes"),setBackgroundSwapRouteState:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setBackgroundSwapRouteState"),resetPostFetchState:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:resetPostFetchState"),setSwapsErrorKey:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsErrorKey"),setInitialGasEstimate:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setInitialGasEstimate"),setCustomApproveTxData:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setCustomApproveTxData"),setSwapsLiveness:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsLiveness"),setSwapsFeatureFlags:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsFeatureFlags"),setSwapsUserFeeLevel:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsUserFeeLevel"),setSwapsQuotesPollingLimitEnabled:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsQuotesPollingLimitEnabled"),[H.BridgeBackgroundAction.RESET_STATE]:this.controllerMessenger.call.bind(this.controllerMessenger,`${H.BRIDGE_CONTROLLER_NAME}:${H.BridgeBackgroundAction.RESET_STATE}`),[H.BridgeUserAction.UPDATE_QUOTE_PARAMS]:this.controllerMessenger.call.bind(this.controllerMessenger,`${H.BRIDGE_CONTROLLER_NAME}:${H.BridgeUserAction.UPDATE_QUOTE_PARAMS}`),[H.BridgeBackgroundAction.TRACK_METAMETRICS_EVENT]:this.controllerMessenger.call.bind(this.controllerMessenger,`${H.BRIDGE_CONTROLLER_NAME}:${H.BridgeBackgroundAction.TRACK_METAMETRICS_EVENT}`),[te.BridgeStatusAction.SUBMIT_TX]:this.controllerMessenger.call.bind(this.controllerMessenger,`${te.BRIDGE_STATUS_CONTROLLER_NAME}:${te.BridgeStatusAction.SUBMIT_TX}`),fetchSmartTransactionFees:w.getFees.bind(w),clearSmartTransactionFees:w.clearFees.bind(w),submitSignedTransactions:w.submitSignedTransactions.bind(w),cancelSmartTransaction:w.cancelSmartTransaction.bind(w),fetchSmartTransactionsLiveness:w.fetchLiveness.bind(w),updateSmartTransaction:w.updateSmartTransaction.bind(w),setStatusRefreshInterval:w.setStatusRefreshInterval.bind(w),trackMetaMetricsEvent:h.trackEvent.bind(h),trackMetaMetricsPage:h.trackPage.bind(h),createEventFragment:h.createEventFragment.bind(h),updateEventFragment:h.updateEventFragment.bind(h),finalizeEventFragment:h.finalizeEventFragment.bind(h),trackInsightSnapView:this.trackInsightSnapView.bind(this),addEventBeforeMetricsOptIn:h.addEventBeforeMetricsOptIn.bind(h),bufferedTrace:h.bufferedTrace.bind(h),bufferedEndTrace:h.bufferedEndTrace.bind(h),rejectAllPendingApprovals:this.rejectAllPendingApprovals.bind(this),rejectPendingApproval:this.rejectPendingApproval,requestUserApproval:T.addAndShowApprovalRequest.bind(T),resolvePendingApproval:this.resolvePendingApproval,resetViewedNotifications:f.resetViewed.bind(f),updateViewedNotifications:f.updateViewed.bind(f),currencyRateStartPolling:a.startPolling.bind(a),currencyRateStopPollingByPollingToken:a.stopPollingByPollingToken.bind(a),tokenRatesStartPolling:A.startPolling.bind(A),tokenRatesStopPollingByPollingToken:A.stopPollingByPollingToken.bind(A),accountTrackerStartPolling:P.startPollingByNetworkClientId.bind(P),accountTrackerStopPollingByPollingToken:P.stopPollingByPollingToken.bind(P),tokenDetectionStartPolling:c.startPolling.bind(c),tokenDetectionStopPollingByPollingToken:c.stopPollingByPollingToken.bind(c),tokenListStartPolling:u.startPolling.bind(u),tokenListStopPollingByPollingToken:u.stopPollingByPollingToken.bind(u),tokenBalancesStartPolling:l.startPolling.bind(l),tokenBalancesStopPollingByPollingToken:l.stopPollingByPollingToken.bind(l),deFiStartPolling:O.startPolling.bind(O),deFiStopPolling:O.stopPollingByPollingToken.bind(O),gasFeeStartPolling:p.startPolling.bind(p),gasFeeStopPollingByPollingToken:p.stopPollingByPollingToken.bind(p),getGasFeeTimeEstimate:p.getTimeEstimate.bind(p),addPollingTokenToAppState:n.addPollingToken.bind(n),removePollingTokenFromAppState:n.removePollingToken.bind(n),updateThrottledOriginState:n.updateThrottledOriginState.bind(n),backupUserData:S.backupUserData.bind(S),restoreUserData:S.restoreUserData.bind(S),detectTokens:c.detectTokens.bind(c),fetchHistoricalPricesForAsset:(...e)=>this.multichainAssetsRatesController.fetchHistoricalPricesForAsset(...e),detectNfts:i.detectNfts.bind(i),addDetectedTokens:b.addDetectedTokens.bind(b),addImportedTokens:b.addTokens.bind(b),ignoreTokens:b.ignoreTokens.bind(b),getBalancesInSingleCall:(...e)=>this.assetsContractController.getBalancesInSingleCall(...e),performSignIn:E.performSignIn.bind(E),performSignOut:E.performSignOut.bind(E),getUserProfileLineage:E.getUserProfileLineage.bind(E),setIsBackupAndSyncFeatureEnabled:I.setIsBackupAndSyncFeatureEnabled.bind(I),syncInternalAccountsWithUserStorage:I.syncInternalAccountsWithUserStorage.bind(I),setHasAccountSyncingSyncedAtLeastOnce:I.setHasAccountSyncingSyncedAtLeastOnce.bind(I),setIsAccountSyncingReadyToBeDispatched:I.setIsAccountSyncingReadyToBeDispatched.bind(I),deleteAccountSyncingDataFromUserStorage:I.performDeleteStorageAllFeatureEntries.bind(I),syncContactsWithUserStorage:I.syncContactsWithUserStorage.bind(I),checkAccountsPresence:_.checkAccountsPresence.bind(_),createOnChainTriggers:_.createOnChainTriggers.bind(_),disableAccounts:_.disableAccounts.bind(_),enableAccounts:_.enableAccounts.bind(_),fetchAndUpdateMetamaskNotifications:_.fetchAndUpdateMetamaskNotifications.bind(_),deleteNotificationsById:_.deleteNotificationsById.bind(_),getNotificationsByType:_.getNotificationsByType.bind(_),markMetamaskNotificationsAsRead:_.markMetamaskNotificationsAsRead.bind(_),setFeatureAnnouncementsEnabled:_.setFeatureAnnouncementsEnabled.bind(_),enablePushNotifications:N.enablePushNotifications.bind(N),disablePushNotifications:N.disablePushNotifications.bind(N),enableMetamaskNotifications:_.enableMetamaskNotifications.bind(_),disableMetamaskNotifications:_.disableNotificationServices.bind(_),throwTestError:this.throwTestError.bind(this),captureTestError:this.captureTestError.bind(this),updateProposedNames:this.nameController.updateProposedNames.bind(this.nameController),setName:this.nameController.setName.bind(this.nameController),createSnapAccount:async(e,t,r)=>{const n=await this.getSnapKeyring();return await n.createAccount(e,t,r)},multichainUpdateBalance:e=>this.multichainBalancesController.updateBalance(e),multichainUpdateTransactions:e=>this.multichainTransactionsController.updateTransactionsForAccount(e),decodeTransactionData:e=>(0,xt.decodeTransactionData)({...e,provider:this.provider}),createMetaMetricsDataDeletionTask:this.metaMetricsDataDeletionController.createMetaMetricsDataDeletionTask.bind(this.metaMetricsDataDeletionController),updateDataDeletionTaskStatus:this.metaMetricsDataDeletionController.updateDataDeletionTaskStatus.bind(this.metaMetricsDataDeletionController),endTrace:Ee.endTrace,isRelaySupported:sr.isRelaySupported,isSendBundleSupported:hr.isSendBundleSupported,openUpdateTabAndReload:()=>(0,ir.openUpdateTabAndReload)(this.requestSafeReload.bind(this)),requestSafeReload:this.requestSafeReload.bind(this),applyTransactionContainersExisting:(e,t)=>(0,pr.applyTransactionContainersExisting)({containerTypes:t,messenger:this.controllerMessenger,transactionId:e,updateEditableParams:this.txController.updateEditableParams.bind(this.txController)})}}rejectOriginPendingApprovals(e){(0,$t.rejectOriginApprovals)({approvalController:this.approvalController,deleteInterface:e=>this.controllerMessenger.call("SnapInterfaceController:deleteInterface",e),origin:e})}async exportAccount(e,t){return await this.verifyPassword(t),this.keyringController.exportAccount(t,e)}async getTokenStandardAndDetails(e,t,r){var n,o,s,i;const a=Cr(kr,this,Pr).call(this),{tokensChainsCache:l}=this.tokenListController.state,c=(null==l||null===(n=l[a])||void 0===n?void 0:n.data)||{},{allTokens:d}=this.tokensController.state,u=(null==d||null===(o=d[a])||void 0===o?void 0:o[t])||[],p={...be.STATIC_MAINNET_TOKEN_LIST[null==e?void 0:e.toLowerCase()]||{},...c[null==e?void 0:e.toLowerCase()]||{},...u.find(({address:t})=>(0,ye.isEqualCaseInsensitive)(t,e))||{}},h=(0,ye.isEqualCaseInsensitive)(p.standard,se.TokenStandard.ERC20)||!0===p.erc20,g=!(r||(0,ye.isEqualCaseInsensitive)(p.standard,se.TokenStandard.ERC1155)||(0,ye.isEqualCaseInsensitive)(p.standard,se.TokenStandard.ERC721)||p.erc721),m=p.decimals!==undefined&&p.symbol;let f;if(h||g&&m)try{const r=t?await(0,Ce.fetchTokenBalance)(e,t,this.provider):undefined;f={address:e,balance:r,standard:se.TokenStandard.ERC20,decimals:p.decimals,symbol:p.symbol}}catch(e){C.default.warn(`Failed to get token balance. Error: ${e}`)}if(f===undefined)try{f=await this.assetsContractController.getTokenStandardAndDetails(e,t,r)}catch(e){C.default.warn(`Failed to get token standard and details. Error: ${e}`)}if(f){if((0,ye.isEqualCaseInsensitive)(f.standard,se.TokenStandard.ERC1155))try{const n=await(0,Ce.fetchERC1155Balance)(e,t,r,this.provider),o=null!=n&&n._hex?parseInt(n._hex,16).toString():null;f={...f,balance:o}}catch(e){C.default.warn("Failed to get token balance. Error:",e)}}return{...f,decimals:null===(s=f)||void 0===s||null===(s=s.decimals)||void 0===s?void 0:s.toString(10),balance:null===(i=f)||void 0===i||null===(i=i.balance)||void 0===i?void 0:i.toString(10)}}async getTokenStandardAndDetailsByChain(e,t,r,n){var o,s,i,a;const{tokensChainsCache:l}=this.tokenListController.state,c=(null==l||null===(o=l[n])||void 0===o?void 0:o.data)||{},{allTokens:d}=this.tokensController.state,u=this.accountsController.getSelectedAccount(),p=(null==d||null===(s=d[n])||void 0===s?void 0:s[u.address])||[];let h={};n===ae.CHAIN_IDS.MAINNET&&(h=be.STATIC_MAINNET_TOKEN_LIST[null==e?void 0:e.toLowerCase()]||{});const g=c[null==e?void 0:e.toLowerCase()]||{},m=p.find(({address:t})=>(0,ye.isEqualCaseInsensitive)(t,e))||{},f={...h,...g,...m},y=(0,ye.isEqualCaseInsensitive)(f.standard,se.TokenStandard.ERC20)||!0===f.erc20,v=!(r||(0,ye.isEqualCaseInsensitive)(f.standard,se.TokenStandard.ERC1155)||(0,ye.isEqualCaseInsensitive)(f.standard,se.TokenStandard.ERC721)||f.erc721),b=f.decimals!==undefined&&f.symbol;let w;if(y||v&&b)try{let r=0;Cr(kr,this,Pr).call(this)===n&&(r=await(0,Ce.fetchTokenBalance)(e,t,this.provider)),w={address:e,balance:r,standard:se.TokenStandard.ERC20,decimals:f.decimals,symbol:f.symbol}}catch(e){C.default.warn(`Failed to get token balance. Error: ${e}`)}if(w===undefined)try{var k,S;const o=null===(k=this.networkController)||void 0===k||null===(k=k.state)||void 0===k||null===(k=k.networkConfigurationsByChainId)||void 0===k||null===(k=k[n])||void 0===k||null===(k=k.rpcEndpoints[null===(S=this.networkController)||void 0===S||null===(S=S.state)||void 0===S||null===(S=S.networkConfigurationsByChainId)||void 0===S||null===(S=S[n])||void 0===S?void 0:S.defaultRpcEndpointIndex])||void 0===k?void 0:k.networkClientId;w=await this.assetsContractController.getTokenStandardAndDetails(e,t,r,o)}catch(e){C.default.warn(`Failed to get token standard and details. Error: ${e}`)}if(w){if((0,ye.isEqualCaseInsensitive)(w.standard,se.TokenStandard.ERC1155))try{const n=await(0,Ce.fetchERC1155Balance)(e,t,r,this.provider),o=null!=n&&n._hex?parseInt(n._hex,16).toString():null;w={...w,balance:o}}catch(e){C.default.warn("Failed to get token balance. Error:",e)}}return{...w,decimals:null===(i=w)||void 0===i||null===(i=i.decimals)||void 0===i?void 0:i.toString(10),balance:null===(a=w)||void 0===a||null===(a=a.balance)||void 0===a?void 0:a.toString(10)}}async getTokenSymbol(e){try{const t=await this.assetsContractController.getTokenStandardAndDetails(e);return null==t?void 0:t.symbol}catch(e){return null}}async createSeedPhraseBackup(e,r,n){let o=!1;try{var s,i;null===(s=(i=this.metaMetricsController).bufferedTrace)||void 0===s||s.call(i,{name:Ee.TraceName.OnboardingCreateKeyAndBackupSrp,op:Ee.TraceOperation.OnboardingSecurityOp});const a=t.from(r),l=this._convertMnemonicToWordlistIndices(a);await this.seedlessOnboardingController.createToprfKeyAndBackupSeedPhrase(e,l,n),o=!0,await this.syncKeyringEncryptionKey()}catch(e){var a,l,c,d;const t=e instanceof Error?e.message:"Unknown error";throw null===(a=(l=this.metaMetricsController).bufferedTrace)||void 0===a||a.call(l,{name:Ee.TraceName.OnboardingCreateKeyAndBackupSrpError,op:Ee.TraceOperation.OnboardingError,tags:{errorMessage:t}}),null===(c=(d=this.metaMetricsController).bufferedEndTrace)||void 0===c||c.call(d,{name:Ee.TraceName.OnboardingCreateKeyAndBackupSrpError}),C.default.error("[createSeedPhraseBackup] error",e),e}finally{var u,p;null===(u=(p=this.metaMetricsController).bufferedEndTrace)||void 0===u||u.call(p,{name:Ee.TraceName.OnboardingCreateKeyAndBackupSrp,data:{success:o}})}}async fetchAllSecretData(e){let t=!1;try{var r,n;null===(r=(n=this.metaMetricsController).bufferedTrace)||void 0===r||r.call(n,{name:Ee.TraceName.OnboardingFetchSrps,op:Ee.TraceOperation.OnboardingSecurityOp});const o=await this.seedlessOnboardingController.fetchAllSecretData(e);return t=!0,o}catch(e){var o,s,i,a;const t=e instanceof Error?e.message:"Unknown error";throw null===(o=(s=this.metaMetricsController).bufferedTrace)||void 0===o||o.call(s,{name:Ee.TraceName.OnboardingFetchSrpsError,op:Ee.TraceOperation.OnboardingError,tags:{errorMessage:t}}),null===(i=(a=this.metaMetricsController).bufferedEndTrace)||void 0===i||i.call(a,{name:Ee.TraceName.OnboardingFetchSrpsError}),e}finally{var l,c;null===(l=(c=this.metaMetricsController).bufferedEndTrace)||void 0===l||l.call(c,{name:Ee.TraceName.OnboardingFetchSrps,data:{success:t}})}}async syncPasswordAndUnlockWallet(e){let t=!1;const r=this.onboardingController.getIsSocialLoginFlow();let n=!1;if(r)try{n=await this.seedlessOnboardingController.checkIsPasswordOutdated({skipCache:!1})}catch(e){C.default.error("error while checking if password is outdated",e)}if(!r||!n)return await this.submitPassword(e),r&&this.seedlessOnboardingController.revokeRefreshToken(e).catch(e=>{C.default.error("error while revoking seedless refresh token",e)}),t=!0,t;const o=await this.syncSeedlessGlobalPasswordMutex.acquire();try{const r=await this.keyringController.verifyPassword(e).then(()=>!0).catch(e=>{if(e.message.includes("Incorrect password"))return!1;throw C.default.error("error while verifying keyring password",e.message),e});if(await this.seedlessOnboardingController.submitGlobalPassword({globalPassword:e,maxKeyChainLength:20}).then(()=>{t=!0}).catch(e=>{if(C.default.error(`error while submitting global password: ${e.message} , isKeyringPasswordValid: ${r}`),e instanceof ne.RecoveryError){if((null==e?void 0:e.message)===ne.SeedlessOnboardingControllerErrorMessage.IncorrectPassword&&r)throw new Error(ne.SeedlessOnboardingControllerErrorMessage.OutdatedPassword);throw new m.JsonRpcError(-32603,e.message,e.data)}if(e.message!==ne.SeedlessOnboardingControllerErrorMessage.MaxKeyChainLengthExceeded)throw e;t=!1}),!t)return await this.seedlessOnboardingController.refreshAuthTokens(),await this.restoreSocialBackupAndGetSeedPhrase(e),t;const n=await this.seedlessOnboardingController.loadKeyringEncryptionKey();await this.submitEncryptionKey(n);let o=!1;try{var s,i;await this.seedlessOnboardingController.syncLatestGlobalPassword({globalPassword:e}),null===(s=(i=this.metaMetricsController).bufferedTrace)||void 0===s||s.call(i,{name:Ee.TraceName.OnboardingResetPassword,op:Ee.TraceOperation.OnboardingSecurityOp}),await this.keyringController.changePassword(e),o=!0,await this.syncKeyringEncryptionKey(),await this.seedlessOnboardingController.checkIsPasswordOutdated({skipCache:!0}),this.seedlessOnboardingController.revokeRefreshToken(e).catch(e=>{C.default.error("error while revoking seedless refresh token",e)})}catch(e){var a,l,c,d;const t=e instanceof Error?e.message:"Unknown error";throw null===(a=(l=this.metaMetricsController).bufferedTrace)||void 0===a||a.call(l,{name:Ee.TraceName.OnboardingResetPasswordError,op:Ee.TraceOperation.OnboardingError,tags:{errorMessage:t}}),null===(c=(d=this.metaMetricsController).bufferedEndTrace)||void 0===c||c.call(d,{name:Ee.TraceName.OnboardingResetPasswordError}),await this.setLocked(),e}finally{var u,p;null===(u=(p=this.metaMetricsController).bufferedEndTrace)||void 0===u||u.call(p,{name:Ee.TraceName.OnboardingResetPassword,data:{success:o}})}return t}finally{o()}}async syncKeyringEncryptionKey(){const e=await this.keyringController.exportEncryptionKey();await this.seedlessOnboardingController.storeKeyringEncryptionKey(e)}async checkIsSeedlessPasswordOutdated(e=!1){const t=this.onboardingController.getIsSocialLoginFlow(),{completedOnboarding:r}=this.onboardingController.state;if(!t||!r)return!1;return await this.seedlessOnboardingController.checkIsPasswordOutdated({skipCache:e})}async syncSeedPhrases(){if(!this.onboardingController.getIsSocialLoginFlow())throw new Error("Syncing seed phrases is only available for social login flow");const[e,...r]=await this.fetchAllSecretData();if(!e)throw new Error("No root SRP found");for(const e of r){if(!this.seedlessOnboardingController.getSecretDataBackupState(e.data,e.type)){if(e.type===ne.SecretType.PrivateKey){await this.importAccountWithStrategy("privateKey",[(0,J.bytesToHex)(e.data)],{shouldCreateSocialBackup:!1,shouldSelectAccount:!1});continue}const r=this._convertEnglishWordlistIndicesToCodepoints(e.data),n=t.from(r).toString("utf8");await this.importMnemonicToVault(n,{shouldCreateSocialBackup:!1,shouldSelectAccount:!1,shouldImportSolanaAccount:!0})}}}async addNewSeedPhraseBackup(e,r,n=!0){const o=t.from(e,"utf8"),s=this._convertMnemonicToWordlistIndices(o);if(n){let e=!1;try{var i,a;null===(i=(a=this.metaMetricsController).bufferedTrace)||void 0===i||i.call(a,{name:Ee.TraceName.OnboardingAddSrp,op:Ee.TraceOperation.OnboardingSecurityOp}),await this.seedlessOnboardingController.addNewSecretData(s,ne.SecretType.Mnemonic,{keyringId:r}),e=!0}catch(e){var l,c,d,u;const t=e instanceof Error?e.message:"Unknown error";throw null===(l=(c=this.metaMetricsController).bufferedTrace)||void 0===l||l.call(c,{name:Ee.TraceName.OnboardingAddSrpError,op:Ee.TraceOperation.OnboardingError,tags:{errorMessage:t}}),null===(d=(u=this.metaMetricsController).bufferedEndTrace)||void 0===d||d.call(u,{name:Ee.TraceName.OnboardingAddSrpError}),e}finally{var p,h;null===(p=(h=this.metaMetricsController).bufferedEndTrace)||void 0===p||p.call(h,{name:Ee.TraceName.OnboardingAddSrp,data:{success:e}})}}else this.seedlessOnboardingController.updateBackupMetadataState({keyringId:r,data:s,type:ne.SecretType.Mnemonic})}async changePassword(e,t){const r=this.onboardingController.getIsSocialLoginFlow();try{if(await this.keyringController.changePassword(e),r)try{await this.seedlessOnboardingController.changePassword(e,t);const r=await this.keyringController.exportEncryptionKey();await this.seedlessOnboardingController.storeKeyringEncryptionKey(r)}catch(e){C.default.error("error while changing seedless-onboarding password",e),C.default.error("reverting keyring password change"),await this.keyringController.changePassword(t);const r=await this.keyringController.exportEncryptionKey();throw await this.seedlessOnboardingController.storeKeyringEncryptionKey(r),e}}catch(e){throw C.default.error("error while changing password",e),e}}async createNewVaultAndKeychain(e){const t=await this.createVaultMutex.acquire();try{return await this.keyringController.createNewVaultAndKeychain(e),this.keyringController.state.keyrings[0]}finally{t()}}async importMnemonicToVault(e,r={shouldCreateSocialBackup:!0,shouldSelectAccount:!0,shouldImportSolanaAccount:!0}){const{shouldCreateSocialBackup:n,shouldSelectAccount:o,shouldImportSolanaAccount:s}=r,i=await this.createVaultMutex.acquire();try{if(this.keyringController.getKeyringsByType(p.KeyringTypes.hd).some(r=>t.from(this._convertEnglishWordlistIndicesToCodepoints(r.mnemonic)).toString("utf8")===e))throw new Error("This Secret Recovery Phrase has already been imported.");const{id:r}=await this.keyringController.addNewKeyring(p.KeyringTypes.hd,{mnemonic:e,numberOfAccounts:1}),[i]=await this.keyringController.withKeyring({id:r},async({keyring:e})=>e.getAccounts());if(this.onboardingController.getIsSocialLoginFlow())try{await this.addNewSeedPhraseBackup(e,r,n)}catch(e){throw await this.keyringController.removeAccount(i),e}if(o){const e=this.accountsController.getAccountByAddress(i);this.accountsController.setSelectedAccount(e.id)}return{newAccountAddress:i,discoveredAccounts:await this._addAccountsWithBalance(r,s)}}finally{i()}}async restoreSeedPhrasesToVault(e){if(!this.onboardingController.getIsSocialLoginFlow())return;const r=!1,n=!1;for(const o of e){if(this.seedlessOnboardingController.getSecretDataBackupState(o.data,o.type))continue;if(o.type===ne.SecretType.PrivateKey){await this.importAccountWithStrategy("privateKey",[(0,J.bytesToHex)(o.data)],{shouldCreateSocialBackup:r,shouldSelectAccount:n});continue}const e=this._convertEnglishWordlistIndicesToCodepoints(o.data),s=t.from(e).toString("utf8");await this.importMnemonicToVault(s,{shouldCreateSocialBackup:r,shouldSelectAccount:n,shouldImportSolanaAccount:false})}}async restoreSocialBackupAndGetSeedPhrase(e){try{const[r,...n]=await this.fetchAllSecretData(e),o=this._convertEnglishWordlistIndicesToCodepoints(r.data),s=t.from(o).toString("utf8"),i=Array.from(t.from(s,"utf8").values());return await this.createNewVaultAndRestore(e,i),n.length>0&&await this.restoreSeedPhrasesToVault(n),s}catch(e){if(C.default.error("Error restoring social backup and getting seed phrase",e),e instanceof ne.RecoveryError)throw new m.JsonRpcError(-32603,e.message,e.data);throw e}}async generateNewMnemonicAndAddToVault(){const e=await this.createVaultMutex.acquire();try{const{id:e}=await this.keyringController.addNewKeyring(p.KeyringTypes.hd),[t]=await this.keyringController.withKeyring({id:e},async({keyring:e})=>e.getAccounts()),r=this.accountsController.getAccountByAddress(t);return this.accountsController.setSelectedAccount(r.id),t}finally{e()}}async createNewVaultAndRestore(e,r){const n=await this.createVaultMutex.acquire();try{const{completedOnboarding:n}=this.onboardingController.state,o=t.from(r);this.permissionController.clearState(),await this.snapController.clearState(),this.accountOrderController.updateHiddenAccountsList([]),this.accountTrackerController.clearAccounts(),this.txController.clearUnapprovedTransactions(),n&&this.tokenDetectionController.enable();const s=this._convertMnemonicToWordlistIndices(o);if(await this.keyringController.createNewVaultAndRestore(e,s),await this.accountsController.updateAccounts(),this.accountTreeController.init(),n&&await this._addAccountsWithBalance(),(0,Be.getIsSeedlessOnboardingFeatureEnabled)()){if(this.onboardingController.getIsSocialLoginFlow()){const e=this.keyringController.state.keyrings[0].metadata.id;this.seedlessOnboardingController.updateBackupMetadataState({keyringId:e,data:s,type:ne.SecretType.Mnemonic}),await this.syncKeyringEncryptionKey()}}}finally{n()}}async _getMultichainWalletSnapClient(e){const t=await this.getSnapKeyring(),r=this.controllerMessenger;return new Re.MultichainWalletSnapClient(e,t,r)}async _addAccountsWithBalance(e,t=!0){try{await this.userStorageController.setHasAccountSyncingSyncedAtLeastOnce(!1),await this.userStorageController.setIsAccountSyncingReadyToBeDispatched(!1);const o=Cr(kr,this,Pr).call(this),s=e?{id:e}:{type:p.KeyringTypes.hd},{accounts:i,entropySource:a}=await this.keyringController.withKeyring(s,async({keyring:e,metadata:t})=>({accounts:await e.getAccounts(),entropySource:t.id}));let l=i[i.length-1];for(let e=i.length;;e++){if("0x0"===await this.getBalance(l,this.provider)){var r,n;await this.tokenDetectionController.detectTokens({chainIds:[o],selectedAddress:l});const t=null===(r=this.tokensController.state.allTokens)||void 0===r||null===(r=r[o])||void 0===r?void 0:r[l],s=null===(n=this.tokensController.state.allDetectedTokens)||void 0===n||null===(n=n[o])||void 0===n?void 0:n[l];if(0===((null==t?void 0:t.length)??0)&&0===((null==s?void 0:s.length)??0)){1!==e&&await this.removeAccount(l);break}}l=await this.keyringController.withKeyring(s,async({keyring:e})=>{const[t]=await e.addAccounts(1);return t})}const c={bitcoin:0,solana:0};if(t){const e=await this._getMultichainWalletSnapClient(je.SOLANA_WALLET_SNAP_ID),t=z.SolScope.Mainnet,r=await e.discoverAccounts(a,t);c.solana=r.length,0===r.length&&await this._addSnapAccount(a,e,{scope:t})}return c}catch(e){return C.default.warn(`Failed to add accounts with balance. Error: ${e}`),{bitcoin:0,solana:0}}finally{await this.userStorageController.setHasAccountSyncingSyncedAtLeastOnce(!0),await this.userStorageController.setIsAccountSyncingReadyToBeDispatched(!0)}}async _importAccountsWithBalances(){const{keyrings:e}=this.keyringController.state;for(const{metadata:t}of e){await this.keyringController.withKeyring({id:t.id},async({keyring:e})=>e.type===p.KeyringTypes.hd)&&await this._addAccountsWithBalance(t.id,true)}}async _addSnapAccount(e,t,r={}){let n=e;try{if(!n){n=await this.keyringController.withKeyring({type:p.KeyringTypes.hd},async({metadata:e})=>e.id)}return await t.createAccount({...r,entropySource:n},{displayConfirmation:!1,displayAccountNameSuggestion:!1,setSelectedAccount:!1})}catch(e){return C.default.warn(`Failed to add Snap account. Error: ${e}`),(0,oe.captureException)(e),null}}_convertMnemonicToWordlistIndices(e){const t=e.toString().split(" ").map(e=>G.wordlist.indexOf(e));return new Uint8Array(new Uint16Array(t).buffer)}_convertEnglishWordlistIndicesToCodepoints(e){return t.from(Array.from(new Uint16Array(e.buffer)).map(e=>G.wordlist[e]).join(" "))}async getBalance(e,t){const r=this.accountTrackerController.state.accountsByChainId[Cr(kr,this,Pr).call(this)],n=null==r?void 0:r[e];if(n&&n.balance)return n.balance;try{return await t.request({method:"eth_getBalance",params:[e,"latest"]})||"0x0"}catch(e){throw C.default.error(e),e}}async submitPassword(e){await this.submitPasswordOrEncryptionKey({password:e})}async submitEncryptionKey(e){await this.submitPasswordOrEncryptionKey({encryptionKey:e})}async submitPasswordOrEncryptionKey({password:e,encryptionKey:t}){const r=this.onboardingController.getIsSocialLoginFlow();await this.offscreenPromise,t?await this.keyringController.submitEncryptionKey(t):(await this.keyringController.submitPassword(e),r&&await this.seedlessOnboardingController.submitPassword(e));try{await this.blockTracker.checkForLatestBlock()}catch(e){C.default.error("Error while unlocking extension.",e)}await this.accountsController.updateAccounts(),this.multichainAccountService.init(),this.accountTreeController.init()}async _loginUser(e){try{await this.submitPassword(e),await this.accountTrackerController.updateAccountsAllActiveNetworks()}finally{this._startUISync()}}_startUISync(){this.emit("startUISync"),this.startUISync=!0,this.memStore.subscribe(this.sendUpdate.bind(this))}async submitEncryptionKeyFromSessionStorage(){try{const{loginToken:e,loginSalt:t}=await this.extension.storage.session.get(["loginToken","loginSalt"]);if(e&&t){const{vault:r}=this.keyringController.state;if(JSON.parse(r).salt!==t)return console.warn("submitEncryptionKey: Stored salt and vault salt do not match"),void await this.clearLoginArtifacts();await this.keyringController.submitEncryptionKey(e,t)}}catch(e){throw await this.clearLoginArtifacts(),e}}async clearLoginArtifacts(){await this.extension.storage.session.remove(["loginToken","loginSalt"])}async verifyPassword(e){await this.keyringController.verifyPassword(e)}getPrimaryKeyringMnemonic(){const[e]=this.keyringController.getKeyringsByType(ce.KeyringType.hdKeyTree);if(!e.mnemonic)throw new Error("Primary keyring mnemonic unavailable.");return e.mnemonic}getPrimaryKeyringMnemonicSeed(){const[e]=this.keyringController.getKeyringsByType(ce.KeyringType.hdKeyTree);if(!e.seed)throw new Error("Primary keyring mnemonic unavailable.");return e.seed}async attemptLedgerTransportCreation(){return await Cr(kr,this,Tr).call(this,{name:le.HardwareDeviceNames.ledger},async e=>e.attemptMakeApp())}async connectHardware(e,t,r){return Cr(kr,this,Tr).call(this,{name:e,hdPath:r},async e=>{let r=[];switch(t){case-1:r=await e.getPreviousPage();break;case 1:r=await e.getNextPage();break;default:r=await e.getFirstPage()}const n=await this.keyringController.getAccounts(),o=[...new Set(n.concat(r.map(e=>e.address.toLowerCase())))];return this.accountTrackerController.syncWithAddresses(o),r})}async checkHardwareStatus(e,t){return Cr(kr,this,Tr).call(this,{name:e,hdPath:t},async e=>e.isUnlocked())}async getHardwareTypeForMetric(e){return await this.keyringController.withKeyring({address:e},({keyring:e})=>le.HardwareKeyringType[e.type])}async forgetDevice(e){return Cr(kr,this,Tr).call(this,{name:e},async e=>{for(const t of e.accounts)this._onAccountRemoved(t);return e.forgetDevice(),!0})}async getAccountType(e){switch(await this.keyringController.getAccountKeyringType(e)){case ce.KeyringType.trezor:case ce.KeyringType.oneKey:case ce.KeyringType.lattice:case ce.KeyringType.qr:case ce.KeyringType.ledger:return"hardware";case ce.KeyringType.imported:return"imported";case ce.KeyringType.snap:return"snap";default:return"MetaMask"}}async getDeviceModel(e){return this.keyringController.withKeyring({address:e},async({keyring:e})=>{switch(e.type){case ce.KeyringType.trezor:case ce.KeyringType.oneKey:return e.getModel();case ce.KeyringType.qr:return e.getName();case ce.KeyringType.ledger:return le.HardwareDeviceNames.ledger;case ce.KeyringType.lattice:return le.HardwareDeviceNames.lattice;default:return undefined}})}getAccountLabel(e,t,r){return`${e[0].toUpperCase()}${e.slice(1)} ${parseInt(t,10)+1} ${r||""}`.trim()}async unlockHardwareWalletAccount(e,t,r,n){const{address:o}=await Cr(kr,this,Tr).call(this,{name:t,hdPath:r},async r=>{r.setAccountToUnlock(e);const[o]=await r.addAccounts(1);return{address:(0,Q.normalize)(o),label:this.getAccountLabel(t===le.HardwareDeviceNames.qr?r.getName():t,e,n)}});this.preferencesController.setSelectedAddress(o);const s=this.accountsController.listAccounts(),{identities:i}=this.preferencesController.state;return{unlockedAccount:o,identities:i,accounts:s}}async addNewAccount(e,t){const r=await this.keyringController.getAccounts(),n=t?{id:t}:{type:p.KeyringTypes.hd},o=await this.keyringController.withKeyring(n,async({keyring:t})=>{if(t.type!==p.KeyringTypes.hd)throw new Error("Cannot add account to non-HD keyring");const n=await t.getAccounts();if(e&&e!==n.length){if(e>n.length)throw new Error("Account out of sequence");const t=n[e];if(!t)throw new Error(`Can't find account at index ${e}`);return t}const[o]=await t.addAccounts(1);if(r.includes(o))throw await t.removeAccount(o),new Error(`Cannot add duplicate ${o} account`);return o});return r.includes(o)||this.preferencesController.setSelectedAddress(o),o}async getSeedPhrase(e,t){return this._convertEnglishWordlistIndicesToCodepoints(await this.keyringController.exportSeedPhrase(e,t))}async resetAccount(){const e=this.accountsController.getSelectedAccount().address,t=Cr(kr,this,Pr).call(this);return this.txController.wipeTransactions({address:e,chainId:t}),this.smartTransactionsController.wipeSmartTransactions({address:e,ignoreNetwork:!1}),this.bridgeStatusController.wipeBridgeStatus({address:e,ignoreNetwork:!1}),this.networkController.resetConnection(),e}captureKeyringTypesWithMissingIdentities(e=[],t=[]){const r=t.filter(t=>!e.some(e=>e.address.toLowerCase()===t.toLowerCase())).map(e=>this.keyringController.getAccountKeyringType(e)),n=e.length,o=this.accountTrackerController.state.accountsByChainId[Cr(kr,this,Pr).call(this)],s=Object.keys(o||{}).length;(0,oe.captureException)(new Error(`Attempt to get permission specifications failed because their were ${t.length} accounts, but ${n} identities, and the ${r} keyrings included accounts with missing identities. Meanwhile, there are ${s} accounts in the account tracker.`))}sortEvmAccountsByLastSelected(e){const t=this.accountsController.listAccounts();return this.sortAddressesWithInternalAccounts(e,t)}sortMultichainAccountsByLastSelected(e){const t=this.accountsController.listMultichainAccounts();return this.sortAddressesWithInternalAccounts(e,t)}sortAddressesWithInternalAccounts(e,t){return e.sort((r,n)=>{const o=t.find(e=>e.address.toLowerCase()===r.toLowerCase()),s=t.find(e=>e.address.toLowerCase()===n.toLowerCase());if(!o)throw this.captureKeyringTypesWithMissingIdentities(t,e),new Error(`Missing identity for address: "${r}".`);if(!s)throw this.captureKeyringTypesWithMissingIdentities(t,e),new Error(`Missing identity for address: "${n}".`);return o.metadata.lastSelected===s.metadata.lastSelected?0:o.metadata.lastSelected===undefined?1:s.metadata.lastSelected===undefined?-1:s.metadata.lastSelected-o.metadata.lastSelected})}getPermittedAccounts(e,{ignoreLock:t}={}){let r;try{r=this.permissionController.getCaveat(e,ee.Caip25EndowmentPermissionName,ee.Caip25CaveatType)}catch(e){if(e instanceof O.PermissionDoesNotExistError)return[];throw e}if(!this.isUnlocked()&&!t)return[];const n=(0,ee.getEthAccounts)(r.value);return this.sortEvmAccountsByLastSelected(n)}removeAllScopePermissions(e){this.permissionController.updatePermissionsByCaveat(ee.Caip25CaveatType,t=>ee.Caip25CaveatMutators[ee.Caip25CaveatType].removeScope(t,e))}removeAllAccountPermissions(e){this.permissionController.updatePermissionsByCaveat(ee.Caip25CaveatType,t=>ee.Caip25CaveatMutators[ee.Caip25CaveatType].removeAccount(t,e))}async removeAccount(e){return this._onAccountRemoved(e),await this.keyringController.removeAccount(e),e}async importAccountWithStrategy(e,t,r={shouldCreateSocialBackup:!0,shouldSelectAccount:!0}){const{shouldCreateSocialBackup:n,shouldSelectAccount:o}=r,s=await this.keyringController.importAccountWithStrategy(e,t);if(this.onboardingController.getIsSocialLoginFlow()){const{id:e,privateKey:t}=await this.keyringController.withKeyring({address:s},async({keyring:e,metadata:t})=>{const r=await e.exportAccount(s);return{id:t.id,privateKey:r}});try{await this.addNewPrivateKeyBackup(t,e,n)}catch(e){throw await this.keyringController.removeAccount(s),e}}o&&this.preferencesController.setSelectedAddress(s)}async addNewPrivateKeyBackup(e,t,r=!0){const n=(0,J.hexToBytes)((0,J.add0x)(e));r?await this.seedlessOnboardingController.addNewSecretData(n,ne.SecretType.PrivateKey,{keyringId:t}):this.seedlessOnboardingController.updateBackupMetadataState({keyringId:t,data:n,type:ne.SecretType.PrivateKey})}async requestPermissionApproval(e,t,r={}){const n=(0,S.nanoid)();return this.approvalController.addAndShowApprovalRequest({id:n,origin:e,requestData:{metadata:{id:n,origin:e},permissions:t,...r},type:O.MethodNames.RequestPermissions})}async requestApprovalPermittedChainsPermission(e,t){const r=(0,ee.setPermittedEthChainIds)({requiredScopes:{},optionalScopes:{},sessionProperties:{},isMultichainOrigin:!1},[t]);await this.permissionController.requestPermissionsIncremental({origin:e},{[ee.Caip25EndowmentPermissionName]:{caveats:[{type:ee.Caip25CaveatType,value:r}]}})}getNonEvmSupportedMethods(e){return this.controllerMessenger.call("MultichainRouter:getSupportedMethods",e)}notifySolanaAccountChangedForCurrentAccount(e){var t;let r;try{r=this.permissionController.getCaveat(e,ee.Caip25EndowmentPermissionName,ee.Caip25CaveatType)}catch{}if(!r)return;const n=null===(t=r.value.sessionProperties)||void 0===t?void 0:t[ee.KnownSessionProperties.SolanaAccountChangedNotifications],o=(0,ee.getSessionScopes)(r.value,{getNonEvmSupportedMethods:this.getNonEvmSupportedMethods.bind(this)}),s=o[Ne.MultichainNetworks.SOLANA]||o[Ne.MultichainNetworks.SOLANA_DEVNET]||o[Ne.MultichainNetworks.SOLANA_TESTNET];if(n&&s){const{accounts:t}=s,r=t.map(e=>{const{address:t}=(0,J.parseCaipAccountId)(e);return t}),[n]=this.sortMultichainAccountsByLastSelected(r);n&&this._notifySolanaAccountChange(e,[n])}}getAddTransactionRequest({transactionParams:e,transactionOptions:t,dappRequest:r,...n}){var o;const s=(null==r?void 0:r.networkClientId)??(null==t?void 0:t.networkClientId),{chainId:i}=this.networkController.getNetworkConfigurationByNetworkClientId(s);return{internalAccounts:this.accountsController.listAccounts(),dappRequest:r,networkClientId:s,selectedAccount:this.accountsController.getAccountByAddress(e.from),transactionController:this.txController,transactionOptions:t,transactionParams:e,userOperationController:this.userOperationController,chainId:i,ppomController:this.ppomController,securityAlertsEnabled:null===(o=this.preferencesController.state)||void 0===o?void 0:o.securityAlertsEnabled,updateSecurityAlertResponse:this.updateSecurityAlertResponse.bind(this),...n}}async getCurrentAccountEIP1559Compatibility(){return!0}async createCancelTransaction(e,t,r){await this.txController.stopTransaction(e,t,r);return this.getState()}async createSpeedUpTransaction(e,t,r){await this.txController.speedUpTransaction(e,t,r);return this.getState()}async estimateGas(e){return new Promise((t,r)=>{this.provider.request({method:"eth_estimateGas",params:[e]}).then(e=>t(e.toString(16))).catch(e=>r(e))})}async updateSecurityAlertResponse(e,t,r){return await(0,Rt.updateSecurityAlertResponse)({appStateController:this.appStateController,messenger:this.controllerMessenger,method:e,securityAlertId:t,securityAlertResponse:r,signatureController:this.signatureController,transactionController:this.txController})}getHDEntropyIndex(){const e=this.accountsController.getSelectedAccount(),t=this.keyringController.state.keyrings.filter(e=>e.type===p.KeyringTypes.hd).findIndex(t=>t.accounts.includes(e.address));return-1===t?undefined:t}markPasswordForgotten(){this.preferencesController.setPasswordForgotten(!0),this.sendUpdate()}unMarkPasswordForgotten(){this.preferencesController.setPasswordForgotten(!1),this.sendUpdate()}setupUntrustedCommunicationEip1193({connectionStream:e,sender:t,subjectType:r}){if(t.url&&this.onboardingController.state.completedOnboarding&&this.preferencesController.state.usePhishDetect){const{hostname:r}=new URL(t.url);this.phishingController.maybeUpdateState();const n=this.phishingController.test(t.url);if(null!=n&&n.result)return this.sendPhishingWarning(e,r),void this.metaMetricsController.trackEvent({event:ge.MetaMetricsEventName.PhishingPageDisplayed,category:ge.MetaMetricsEventCategory.Phishing,properties:{url:r}})}let n;n=r||(t.id&&t.id!==this.extension.runtime.id?O.SubjectType.Extension:O.SubjectType.Website);const o=(0,nt.setupMultiplex)(e);o.ignoreStream(Nt.METAMASK_CAIP_MULTICHAIN_PROVIDER),this.setupProviderConnectionEip1193(o.createStream(Nt.METAMASK_EIP_1193_PROVIDER),t,n),t.url&&this.setupPublicConfig(o.createStream("publicConfig"))}setupUntrustedCommunicationCaip({connectionStream:e,sender:t,subjectType:r}){let n;n=r||(t.id&&t.id!==this.extension.runtime.id?O.SubjectType.Extension:O.SubjectType.Website),this.setupProviderConnectionCaip(e,t,n)}setupTrustedCommunication(e,t){const r=(0,nt.setupMultiplex)(e);this.setupControllerConnection(r.createStream("controller")),this.setupProviderConnectionEip1193(r.createStream("provider"),t,O.SubjectType.Internal)}setupPhishingCommunication({connectionStream:e}){const{usePhishDetect:t}=this.preferencesController.state;if(!t)return;const r=(0,nt.setupMultiplex)(e).createStream("metamask-phishing-safelist");r.on("data",(0,ht.default)({safelistPhishingDomain:this.safelistPhishingDomain.bind(this),backToSafetyPhishingWarning:this.backToSafetyPhishingWarning.bind(this)},r))}setUpCookieHandlerCommunication({connectionStream:e}){const{metaMetricsId:t,dataCollectionForMarketing:r,participateInMetaMetrics:n}=this.metaMetricsController.state;if(t&&r&&n){const t=(0,nt.setupMultiplex)(e).createStream(Nt.METAMASK_COOKIE_HANDLER);t.on("data",(0,ht.default)({getCookieFromMarketingPage:this.getCookieFromMarketingPage.bind(this)},t))}}getCookieFromMarketingPage(e){const{ga_client_id:t}=e;this.metaMetricsController.setMarketingCampaignCookieId(t)}sendPhishingWarning(e,t){(0,nt.setupMultiplex)(e).createStream("phishing").write({hostname:t})}setupControllerConnection(e){const t=new Lt.PatchStore(this.memStore);let r=!1;const n=()=>{if(!(0,nt.isStreamWritable)(e)||!r)return;const n=t.flushPendingPatches();e.write({jsonrpc:"2.0",method:"sendUpdate",params:[n]})},s={...this.getApi(),...this.controllerApi,startPatches:()=>{r=!0,n()},getStatePatches:()=>t.flushPendingPatches()};this.on("update",n),this.activeControllerConnections+=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),e.on("data",(0,ht.default)(s,e));const i=()=>{(0,nt.isStreamWritable)(e)&&e.write({jsonrpc:"2.0",method:"startUISync"})};this.startUISync?i():this.once("startUISync",i);const a=()=>{e.mmFinished||(this.activeControllerConnections-=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),e.mmFinished=!0,this.removeListener("update",n),t.destroy())};e.mmFinished=!1,(0,o.finished)(e,a),e.once("close",a),e.once("end",a)}setupProviderConnectionEip1193(e,t,r){let n,s;n=r===O.SubjectType.Internal?he.ORIGIN_METAMASK:r===O.SubjectType.Snap?t.snapId:new URL(t.url).origin,t.id&&t.id!==this.extension.runtime.id&&this.subjectMetadataController.addSubjectMetadata({origin:n,extensionId:t.id,subjectType:O.SubjectType.Extension}),t.tab&&t.tab.id&&(s=t.tab.id);let i=n;t.tab&&t.tab.url&&(i=new URL(t.tab.url).origin);const l=this.setupProviderEngineEip1193({origin:n,sender:t,subjectType:r,tabId:s,mainFrameOrigin:i}),c=(0,ze.default)(),d=(0,a.createEngineStream)({engine:l}),u=this.addConnection(n,{tabId:s,apiType:yr,engine:l});(0,o.pipeline)(e,c,d,e,e=>{var t;l.destroy(),u&&this.removeConnection(n,u),!e||null!==(t=e.message)&&void 0!==t&&t.match("Premature close")||C.default.error(e)}),r!==O.SubjectType.Internal&&this._notifyChainChangeForConnection({engine:l},n)}setupProviderConnectionCaip(e,t,r){let n,s;n=r===O.SubjectType.Internal?he.ORIGIN_METAMASK:r===O.SubjectType.Snap?t.snapId:new URL(t.url).origin,t.id&&t.id!==this.extension.runtime.id&&this.subjectMetadataController.addSubjectMetadata({origin:n,extensionId:t.id,subjectType:O.SubjectType.Extension}),t.tab&&t.tab.id&&(s=t.tab.id);const i=this.setupProviderEngineCaip({origin:n,sender:t,subjectType:r,tabId:s}),l=(0,ze.default)(),c=(0,a.createEngineStream)({engine:i}),d=this.addConnection(n,{tabId:s,apiType:vr,engine:i});setTimeout(()=>this.notifySolanaAccountChangedForCurrentAccount(n),500),(0,o.pipeline)(e,l,c,e,e=>{var t;i.destroy(),d&&this.removeConnection(n,d),!e||null!==(t=e.message)&&void 0!==t&&t.match("Premature close")||C.default.error(e)})}setupCommonMiddlewareHooks(e){return{addSubjectMetadata:this.subjectMetadataController.addSubjectMetadata.bind(this.subjectMetadataController),getProviderState:this.getProviderState.bind(this),handleWatchAssetRequest:this.handleWatchAssetRequest.bind(this),requestUserApproval:this.approvalController.addAndShowApprovalRequest.bind(this.approvalController),getCaveat:({target:t,caveatType:r})=>{try{return this.permissionController.getCaveat(e,t,r)}catch(e){if(!(e instanceof O.PermissionDoesNotExistError))throw e}return undefined},requestPermittedChainsPermissionIncrementalForOrigin:t=>(0,ee.requestPermittedChainsPermissionIncremental)({...t,origin:e,hooks:{requestPermissionsIncremental:this.permissionController.requestPermissionsIncremental.bind(this.permissionController),grantPermissionsIncremental:this.permissionController.grantPermissionsIncremental.bind(this.permissionController)}}),addNetwork:this.networkController.addNetwork.bind(this.networkController),updateNetwork:this.networkController.updateNetwork.bind(this.networkController),setActiveNetwork:async t=>{await this.networkController.setActiveNetwork(t),this.permissionController.hasPermission(e,ee.Caip25EndowmentPermissionName)&&this.selectedNetworkController.setNetworkClientIdForDomain(e,t)},getNetworkConfigurationByChainId:this.networkController.getNetworkConfigurationByChainId.bind(this.networkController),setTokenNetworkFilter:e=>{const{tokenNetworkFilter:t}=this.preferencesController.getPreferences();e&&1===Object.keys(t).length&&this.preferencesController.setPreference("tokenNetworkFilter",{[e]:!0})},setEnabledNetworks:(e,t)=>{this.networkOrderController.setEnabledNetworks(e,t)},getEnabledNetworks:e=>this.networkOrderController.state.enabledNetworkMap[e]||{},getCurrentChainIdForDomain:e=>{const t=this.selectedNetworkController.getNetworkClientIdForDomain(e),{chainId:r}=this.networkController.getNetworkConfigurationByNetworkClientId(t);return r},getWeb3ShimUsageState:this.alertController.getWeb3ShimUsageState.bind(this.alertController),setWeb3ShimUsageRecorded:this.alertController.setWeb3ShimUsageRecorded.bind(this.alertController),rejectApprovalRequestsForOrigin:()=>this.rejectOriginPendingApprovals(e)}}setupProviderEngineEip1193({origin:e,subjectType:t,sender:r,tabId:n,mainFrameOrigin:o}){const s=new i.JsonRpcEngine;s.push((0,Ze.default)({origin:e})),o&&s.push((0,Xe.default)({mainFrameOrigin:o})),s.push((0,R.createSelectedNetworkMiddleware)(this.controllerMessenger));const a=this.selectedNetworkController.getProviderAndBlockTracker(e),l=(0,h.default)(a),c=(0,g.default)(a);return c.events.on("notification",e=>s.emit("notification",e)),n&&s.push((0,et.default)({tabId:n})),s.push((0,Je.default)({origin:e})),s.push(this.permissionLogController.createMiddleware()),e===Me.BaseUrl.Portfolio&&s.push((0,Ot.createTxVerificationMiddleware)(this.networkController)),s.push((0,Bt.default)()),s.push((0,Ft.default)({getThrottledOriginState:this.appStateController.getThrottledOriginState.bind(this.appStateController),updateThrottledOriginState:this.appStateController.updateThrottledOriginState.bind(this.appStateController)})),s.push((0,qe.createPPOMMiddleware)(this.ppomController,this.preferencesController,this.networkController,this.appStateController,this.accountsController,this.updateSecurityAlertResponse.bind(this))),s.push((0,He.createTrustSignalsMiddleware)(this.networkController,this.appStateController,this.phishingController,this.preferencesController,this.getPermittedAccounts.bind(this))),s.push((0,kt.default)({getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getHDEntropyIndex:this.getHDEntropyIndex.bind(this),getHardwareTypeForMetric:this.getHardwareTypeForMetric.bind(this),snapAndHardwareMessenger:this.controllerMessenger.getRestricted({name:"SnapAndHardwareMessenger",allowedActions:["KeyringController:getKeyringForAccount","SnapController:get","AccountsController:getSelectedAccount"]}),appStateController:this.appStateController,metaMetricsController:this.metaMetricsController})),s.push((0,Qe.createUnsupportedMethodMiddleware)()),t===O.SubjectType.Snap&&(0,Fe.isSnapPreinstalled)(e)&&s.push((0,B.createPreinstalledSnapsMiddleware)({getPermissions:this.permissionController.getPermissions.bind(this.permissionController,e),getAllEvmAccounts:()=>this.controllerMessenger.call("AccountsController:listAccounts").map(e=>e.address),grantPermissions:t=>this.controllerMessenger.call("PermissionController:grantPermissions",{approvedPermissions:t,subject:{origin:e}})})),s.push((0,Qe.createEthAccountsMethodMiddleware)({getAccounts:this.getPermittedAccounts.bind(this,e)})),t!==O.SubjectType.Internal&&s.push(this.permissionController.createPermissionMiddleware({origin:e})),t===O.SubjectType.Website&&s.push((0,rt.default)({location:r.url,registerOnboarding:this.onboardingController.registerOnboarding})),s.push((0,jt.default)({messenger:this.controllerMessenger.getRestricted({name:"EvmMethodsToNonEvmAccountFilterMessenger",allowedActions:["AccountsController:getSelectedAccount"]})})),s.push((0,Qe.createEip1193MethodMiddleware)({subjectType:t,...this.setupCommonMiddlewareHooks(e),metamaskState:this.getState(),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),sendMetrics:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getAccounts:this.getPermittedAccounts.bind(this,e),getCaip25PermissionFromLegacyPermissionsForOrigin:e=>(0,ee.getCaip25PermissionFromLegacyPermissions)(e),getPermissionsForOrigin:this.permissionController.getPermissions.bind(this.permissionController,e),requestPermissionsForOrigin:t=>this.permissionController.requestPermissions({origin:e},t,{metadata:{isEip1193Request:!0}}),revokePermissionsForOrigin:t=>{try{this.permissionController.revokePermissions({[e]:t})}catch(e){console.log(e)}},updateCaveat:this.permissionController.updateCaveat.bind(this.permissionController,e),hasApprovalRequestsForOrigin:()=>this.approvalController.has({origin:e})})),s.push((0,B.createSnapsMethodMiddleware)(t===O.SubjectType.Snap,{clearSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:clearSnapState",e),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),getSnaps:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getPermitted",e),requestPermissions:async t=>await this.permissionController.requestPermissions({origin:e},t),getPermissions:this.permissionController.getPermissions.bind(this.permissionController,e),getSnapFile:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getFile",e),getSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getSnapState",e),updateSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:updateSnapState",e),installSnaps:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:install",e),invokeSnap:this.permissionController.executeRestrictedMethod.bind(this.permissionController,e,de.RestrictedMethods.wallet_snap),getIsLocked:()=>!this.appStateController.isUnlocked(),getIsActive:()=>this._isClientOpen,getInterfaceState:(...t)=>this.controllerMessenger.call("SnapInterfaceController:getInterface",e,...t).state,getInterfaceContext:(...t)=>this.controllerMessenger.call("SnapInterfaceController:getInterface",e,...t).context,createInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:createInterface",e),updateInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:updateInterface",e),resolveInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:resolveInterface",e),getSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:get"),trackError:e=>{var t,r;return null===(t=global.sentry)||void 0===t||null===(r=t.captureException)||void 0===r?void 0:r.call(t,e)},trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getAllSnaps:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getAll"),openWebSocket:this.controllerMessenger.call.bind(this.controllerMessenger,"WebSocketService:open",e),closeWebSocket:this.controllerMessenger.call.bind(this.controllerMessenger,"WebSocketService:close",e),getWebSockets:this.controllerMessenger.call.bind(this.controllerMessenger,"WebSocketService:getAll",e),sendWebSocketMessage:this.controllerMessenger.call.bind(this.controllerMessenger,"WebSocketService:sendMessage",e),getCurrencyRate:e=>{const t=this.multichainRatesController.state.rates[e],{fiatCurrency:r}=this.multichainRatesController.state;return t?{...t,currency:r}:undefined},getEntropySources:()=>this.controllerMessenger.call("KeyringController:getState").keyrings.map((e,t)=>e.type===p.KeyringTypes.hd?{id:e.metadata.id,name:e.metadata.name,type:"mnemonic",primary:0===t}:null).filter(Boolean),hasPermission:this.permissionController.hasPermission.bind(this.permissionController,e),scheduleBackgroundEvent:t=>this.controllerMessenger.call("CronjobController:schedule",{...t,snapId:e}),cancelBackgroundEvent:this.controllerMessenger.call.bind(this.controllerMessenger,"CronjobController:cancel",e),getBackgroundEvents:this.controllerMessenger.call.bind(this.controllerMessenger,"CronjobController:get",e),getNetworkConfigurationByChainId:this.controllerMessenger.call.bind(this.controllerMessenger,"NetworkController:getNetworkConfigurationByChainId"),getNetworkClientById:this.controllerMessenger.call.bind(this.controllerMessenger,"NetworkController:getNetworkClientById"),startTrace:e=>{const{_isStandaloneSpan:t,...r}=(0,Ee.trace)(e);return r},endTrace:Ee.endTrace,handleSnapRpcRequest:t=>this.handleSnapRequest({...t,origin:e}),getAllowedKeyringMethods:(0,Ue.keyringSnapPermissionsBuilder)(this.subjectMetadataController,e)})),s.push(l),s.push(c.middleware),s.push(this.metamaskMiddleware),s.push((0,d.providerAsMiddleware)(a.provider)),s}setupProviderEngineCaip({origin:e,sender:t,subjectType:r,tabId:n}){const o=new i.JsonRpcEngine;o.push((0,Ze.default)({origin:e})),n&&o.push((0,et.default)({tabId:n})),o.push((0,Je.default)({origin:e})),o.push((e,t,r,n)=>[he.MESSAGE_TYPE.WALLET_CREATE_SESSION,he.MESSAGE_TYPE.WALLET_INVOKE_METHOD,he.MESSAGE_TYPE.WALLET_GET_SESSION,he.MESSAGE_TYPE.WALLET_REVOKE_SESSION].includes(e.method)?r():n(m.rpcErrors.methodNotFound({data:{method:e.method}}))),o.push((0,kt.default)({getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getHDEntropyIndex:this.getHDEntropyIndex.bind(this),getHardwareTypeForMetric:this.getHardwareTypeForMetric.bind(this),snapAndHardwareMessenger:this.controllerMessenger.getRestricted({name:"SnapAndHardwareMessenger",allowedActions:["KeyringController:getKeyringForAccount","SnapController:get","AccountsController:getSelectedAccount"]}),appStateController:this.appStateController,metaMetricsController:this.metaMetricsController})),o.push(X.multichainMethodCallValidatorMiddleware);const s=(0,Qe.makeMethodMiddlewareMaker)([X.walletRevokeSession,X.walletGetSession,X.walletInvokeMethod,X.walletCreateSession]);o.push(s({findNetworkClientIdByChainId:this.networkController.findNetworkClientIdByChainId.bind(this.networkController),listAccounts:this.accountsController.listAccounts.bind(this.accountsController),requestPermissionsForOrigin:(t,r={})=>this.permissionController.requestPermissions({origin:e},t,r),getCaveatForOrigin:this.permissionController.getCaveat.bind(this.permissionController,e),getSelectedNetworkClientId:()=>this.networkController.state.selectedNetworkClientId,revokePermissionForOrigin:this.permissionController.revokePermission.bind(this.permissionController,e),getNonEvmSupportedMethods:this.getNonEvmSupportedMethods.bind(this),isNonEvmScopeSupported:this.controllerMessenger.call.bind(this.controllerMessenger,"MultichainRouter:isSupportedScope"),handleNonEvmRequestForOrigin:t=>this.controllerMessenger.call("MultichainRouter:handleRequest",{...t,origin:e}),getNonEvmAccountAddresses:this.controllerMessenger.call.bind(this.controllerMessenger,"MultichainRouter:getSupportedAccounts"),trackSessionCreatedEvent:e=>this.metaMetricsController.trackEvent({event:ge.MetaMetricsEventName.PermissionsRequested,properties:{api_source:ge.MetaMetricsRequestedThrough.MultichainApi,method:he.MESSAGE_TYPE.WALLET_CREATE_SESSION,chain_id_list:(0,ee.getAllScopesFromCaip25CaveatValue)(e)}})})),o.push((0,Qe.createUnsupportedMethodMiddleware)(new Set([...ae.UNSUPPORTED_RPC_METHODS,"eth_requestAccounts","eth_accounts"]))),r===O.SubjectType.Website&&o.push((0,rt.default)({location:t.url,registerOnboarding:this.onboardingController.registerOnboarding})),o.push((0,Qe.createMultichainMethodMiddleware)({subjectType:r,...this.setupCommonMiddlewareHooks(e)})),o.push(this.metamaskMiddleware);try{const t=this.permissionController.getCaveat(e,ee.Caip25EndowmentPermissionName,ee.Caip25CaveatType),r=(0,ee.getSessionScopes)(t.value,{getNonEvmSupportedMethods:this.getNonEvmSupportedMethods.bind(this)});Object.entries(r).forEach(([t,r])=>{r.notifications.includes("eth_subscription")&&r.methods.includes("eth_subscribe")&&this.addMultichainApiEthSubscriptionMiddleware({scope:t,origin:e,tabId:n})})}catch(e){}return this.multichainSubscriptionManager.on("notification",(t,r,s)=>{e===t&&n===r&&o.emit("notification",s)}),o.push(this.multichainMiddlewareManager.generateMultichainMiddlewareForOriginAndTabId(e,n)),o.push(async(e,t,r,n)=>{const{provider:o}=this.networkController.getNetworkClientById(e.networkClientId);return t.result=await o.request(e),n()}),o}setupPublicConfig(e){const t=(0,c.storeAsStream)(this.publicConfigStore);(0,o.pipeline)(t,e,e=>{var r;t.destroy(),!e||null!==(r=e.message)&&void 0!==r&&r.match("Premature close")||C.default.error(e)})}addConnection(e,{tabId:t,apiType:r,engine:n}){if(e===he.ORIGIN_METAMASK)return null;this.connections[e]||(this.connections[e]={});const o=(0,S.nanoid)();return this.connections[e][o]={tabId:t,apiType:r,engine:n},o}removeConnection(e,t){const r=this.connections[e];r&&(delete r[t],0===Object.keys(r).length&&delete this.connections[e])}removeAllConnections(e){const t=this.connections[e];t&&Object.keys(t).forEach(t=>{this.removeConnection(e,t)})}notifyConnections(e,t,r){const n=this.connections[e];n&&Object.values(n).forEach(e=>{r&&e.apiType!==r||e.engine&&e.engine.emit("notification",t)})}notifyAllConnections(e,t){const r="function"==typeof e?t=>e(t):()=>e;Object.keys(this.connections).forEach(e=>{Object.values(this.connections[e]).forEach(async n=>{if(!t||n.apiType===t)try{this.notifyConnection(n,await r(e))}catch(e){console.error(e)}})})}notifyConnection(e,t){try{e.engine&&e.engine.emit("notification",t)}catch(e){console.error(e)}}async _onKeyringControllerUpdate(e){const{keyrings:t}=e,r=t.reduce((e,{accounts:t})=>e.concat(t),[]).filter(Dt.isEthAddress);r.length&&this.accountTrackerController.syncWithAddresses(r)}_onUnlock(){this.unMarkPasswordForgotten(),this.emit("unlock")}_onLock(){this.emit("lock")}_onStateUpdate(e){this.isClientOpenAndUnlocked=e.isUnlocked&&this._isClientOpen,this._notifyChainChange()}_onAccountRemoved(e){this.removeAllAccountPermissions(e)}privateSendUpdate(){this.emit("update",this.getState())}isUnlocked(){return this.keyringController.state.isUnlocked}getExternalPendingTransactions(e){return this.smartTransactionsController.getTransactions({addressFrom:e,status:"pending"})}async initializeChainlist(){const e=`cachedFetch:${ae.CHAIN_SPEC_URL}`,{cachedResponse:t}=await(0,fe.getStorageItem)(e)||{};t||await(0,fe.setStorageItem)(e,{cachedResponse:(0,w.rawChainData)(),cachedTime:0}),await(0,gt.initializeRpcProviderDomains)()}async getPendingNonce(e,t){const{nonceDetails:r,releaseLock:n}=await this.txController.getNonceLock(e,t),o=r.params.highestSuggested;return n(),o}async getNextNonce(e,t){const r=await this.txController.getNonceLock(e,t);return r.releaseLock(),r.nextNonce}throwTestError(e){setTimeout(()=>{const t=new Error(e);throw t.name="TestError",t})}captureTestError(e){setTimeout(()=>{const t=new Error(e);t.name="TestError",(0,oe.captureException)(t)})}getTransactionMetricsRequest(){return{...{createEventFragment:this.metaMetricsController.createEventFragment.bind(this.metaMetricsController),finalizeEventFragment:this.metaMetricsController.finalizeEventFragment.bind(this.metaMetricsController),getEventFragmentById:this.metaMetricsController.getEventFragmentById.bind(this.metaMetricsController),getParticipateInMetrics:()=>this.metaMetricsController.state.participateInMetaMetrics,trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),updateEventFragment:this.metaMetricsController.updateEventFragment.bind(this.metaMetricsController),getAccountBalance:(e,t)=>{var r;return null===(r=this.accountTrackerController.state.accountsByChainId)||void 0===r||null===(r=r[t])||void 0===r||null===(r=r[e])||void 0===r?void 0:r.balance},getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getHardwareTypeForMetric:this.getHardwareTypeForMetric.bind(this),getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getSelectedAddress:()=>this.accountsController.getSelectedAccount().address,getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),getTransaction:e=>this.txController.state.transactions.find(t=>t.id===e),getIsSmartTransaction:e=>(0,Te.getIsSmartTransaction)(this._getMetaMaskState(),e),getSmartTransactionByMinedTxHash:e=>this.smartTransactionsController.getSmartTransactionByMinedTxHash(e),getMethodData:e=>{if(!e)return null;const{knownMethodData:t,use4ByteResolution:r}=this.preferencesController.state,n=(0,gt.addHexPrefix)(e);return(0,gt.getMethodDataName)(t,r,n,this.preferencesController.addKnownMethodData.bind(this.preferencesController),this.provider)},getIsConfirmationAdvancedDetailsOpen:()=>this.preferencesController.state.preferences.showConfirmationAdvancedDetails,getHDEntropyIndex:this.getHDEntropyIndex.bind(this),getNetworkRpcUrl:e=>{try{var t;const n=this.networkController.findNetworkClientIdByChainId(e),o=this.networkController.getNetworkConfigurationByNetworkClientId(n);if(o.rpcUrl)return o.rpcUrl;if((null===(t=o.rpcEndpoints)||void 0===t?void 0:t.length)>0){var r;const e=o.defaultRpcEndpointIndex||0;return(null===(r=o.rpcEndpoints[e])||void 0===r?void 0:r.url)||o.rpcEndpoints[0].url}return"unknown"}catch(e){return console.error("Error getting RPC URL:",e),"unknown"}}},snapAndHardwareMessenger:this.controllerMessenger.getRestricted({name:"SnapAndHardwareMessenger",allowedActions:["KeyringController:getKeyringForAccount","SnapController:get","AccountsController:getSelectedAccount"]}),provider:this.provider}}updateAccountBalanceForTransactionNetwork(e){const{networkClientId:t,txParams:{from:r}}=e;this.accountTrackerController.updateAccountByAddress({address:r,networkClientId:t})}toggleExternalServices(e){this.preferencesController.toggleExternalServices(e),this.tokenListController.updatePreventPollingOnNetworkRestart(!e),e?(this.tokenDetectionController.enable(),this.gasFeeController.enableNonRPCGasFeeApis()):(this.tokenDetectionController.disable(),this.gasFeeController.disableNonRPCGasFeeApis())}async setLedgerTransportPreference(e){const t=window.navigator.hid?le.LedgerTransportTypes.webhid:le.LedgerTransportTypes.u2f;return null!=e&&e.updateTransportMethod?e.updateTransportMethod(t).catch(e=>{throw e}):undefined}recordFirstTimeInfo(e){if(!("firstTimeInfo"in e)){const t="13.2.0";e.firstTimeInfo={version:t,date:Date.now()}}}set isClientOpen(e){this._isClientOpen=e,this.controllerMessenger.call("SnapController:setClientActive",e)}onClientClosed(){try{this.gasFeeController.stopAllPolling(),this.currencyRateController.stopAllPolling(),this.tokenRatesController.stopAllPolling(),this.tokenDetectionController.stopAllPolling(),this.tokenListController.stopAllPolling(),this.tokenBalancesController.stopAllPolling(),this.appStateController.clearPollingTokens(),this.accountTrackerController.stopAllPolling(),this.deFiPositionsController.stopAllPolling()}catch(e){console.error(e)}}onEnvironmentTypeClosed(e){const t=he.POLLING_TOKEN_ENVIRONMENT_TYPES[e];this.appStateController.state[t].forEach(e=>{this.gasFeeController.stopPollingByPollingToken(e),this.currencyRateController.stopPollingByPollingToken(e),this.tokenRatesController.stopPollingByPollingToken(e),this.tokenDetectionController.stopPollingByPollingToken(e),this.tokenListController.stopPollingByPollingToken(e),this.tokenBalancesController.stopPollingByPollingToken(e),this.accountTrackerController.stopPollingByPollingToken(e),this.appStateController.removePollingToken(e,t)})}safelistPhishingDomain(e){return(0,gt.getPlatform)()===he.PLATFORM_FIREFOX||this.metaMetricsController.trackEvent({category:ge.MetaMetricsEventCategory.Phishing,event:ge.MetaMetricsEventName.ProceedAnywayClicked,properties:{url:e,referrer:{url:e}}},{excludeMetaMetricsId:!0}),this.phishingController.bypass(e)}async backToSafetyPhishingWarning(){this.metaMetricsController.trackEvent({category:ge.MetaMetricsEventCategory.Navigation,event:ge.MetaMetricsEventName.PortfolioLinkClicked,properties:{location:"phishing_page",text:"Back to safety"}}),await this.platform.switchToAnotherURL(undefined,"https://portfolio.metamask.io/?metamaskEntry=phishing_page_portfolio_button")}setLocked(){return this.keyringController.setLocked()}rejectAllPendingApprovals(){(0,$t.rejectAllApprovals)({approvalController:this.approvalController,deleteInterface:e=>this.controllerMessenger.call("SnapInterfaceController:deleteInterface",e)})}async getCode(e,t){const{provider:r}=this.networkController.getNetworkClientById(t);return await r.request({method:"eth_getCode",params:[e]})}async _onAccountChange(e){const t=(0,vt.getPermittedAccountsByOrigin)(this.permissionController.state);for(const[r,n]of t.entries())n.includes(e)&&this._notifyAccountsChange(r,n)}_notifyAccountsChange(e,t){this.notifyConnections(e,{method:vt.NOTIFICATION_NAMES.accountsChanged,params:t.length<2?t:this.getPermittedAccounts(e)},yr),this.permissionLogController.updateAccountsHistory(e,t)}async _notifyAuthorizationChange(e,t){this.notifyConnections(e,{method:X.MultichainApiNotifications.sessionChanged,params:{sessionScopes:(0,ee.getSessionScopes)(t,{getNonEvmSupportedMethods:this.getNonEvmSupportedMethods.bind(this)})}},vr)}async _notifySolanaAccountChange(e,t){this.notifyConnections(e,{method:X.MultichainApiNotifications.walletNotify,params:{scope:Ne.MultichainNetworks.SOLANA,notification:{method:vt.NOTIFICATION_NAMES.accountsChanged,params:t}}},vr)}async _notifyChainChange(){this.notifyAllConnections(async e=>({method:vt.NOTIFICATION_NAMES.chainChanged,params:await this.getProviderNetworkState(e)}),yr)}async _notifyChainChangeForConnection(e,t){this.notifyConnection(e,{method:vt.NOTIFICATION_NAMES.chainChanged,params:await this.getProviderNetworkState(t)})}async _onFinishedTransaction(e){if(![V.TransactionStatus.confirmed,V.TransactionStatus.failed].includes(e.status))return;const t=performance.now(),r=(0,Ee.trace)({name:Ee.TraceName.OnFinishedTransaction,startTime:performance.timeOrigin});(0,Ee.trace)({name:Ee.TraceName.OnFinishedTransaction,startTime:performance.timeOrigin,parentContext:r,data:{transactionMeta:e}}),await this._createTransactionNotifcation(e),await this._updateNFTOwnership(e),this._trackTransactionFailure(e),await this.tokenBalancesController.updateBalancesByChainId({chainId:e.chainId}),(0,Ee.endTrace)({name:Ee.TraceName.OnFinishedTransaction,timestamp:performance.timeOrigin+t})}async _createTransactionNotifcation(e){const{chainId:t}=e;let r={};if(t){var n,o;const e=null===(n=this.networkController.state.networkConfigurationsByChainId)||void 0===n?void 0:n[t];r={blockExplorerUrl:null==e||null===(o=e.blockExplorerUrls)||void 0===o?void 0:o[null==e?void 0:e.defaultBlockExplorerUrlIndex]}}try{await this.platform.showTransactionNotification(e,r)}catch(e){C.default.error("Failed to create transaction notification",e)}}async _updateNFTOwnership(e){var t,r;const{type:n,txParams:o,chainId:s,txReceipt:i}=e,a=this.accountsController.getSelectedAccount().address,{allNfts:l}=this.nftController.state,c=null==i?void 0:i.logs,d=n===V.TransactionType.contractInteraction&&c,u=(n===V.TransactionType.tokenMethodTransferFrom||n===V.TransactionType.tokenMethodSafeTransferFrom)&&o!==undefined;if(!d&&!u)return;const p=null===(t=this.networkController)||void 0===t||null===(t=t.state)||void 0===t||null===(t=t.networkConfigurationsByChainId)||void 0===t||null===(t=t[s])||void 0===t||null===(t=t.rpcEndpoints[null===(r=this.networkController)||void 0===r||null===(r=r.state)||void 0===r||null===(r=r.networkConfigurationsByChainId)||void 0===r||null===(r=r[s])||void 0===r?void 0:r.defaultRpcEndpointIndex])||void 0===t?void 0:t.networkClientId;if(u){var h;const{data:e,to:t,from:r}=o,n=(0,ve.parseStandardTokenTransactionData)(e),i=(0,Ce.getTokenIdParam)(n)??(0,we.getTokenValueParam)(n),a=null==l||null===(h=l[r])||void 0===h||null===(h=h[s])||void 0===h?void 0:h.find(({address:e,tokenId:r})=>(0,ye.isEqualCaseInsensitive)(e,t)&&r===i);a&&this.nftController.checkAndUpdateSingleNftOwnershipStatus(a,!1,p,{userAddress:r})}else{const e=c.map(e=>{const t=e.topics&&e.topics[0]===Ae.TRANSFER_SINFLE_LOG_TOPIC_HASH,r=e.topics&&e.topics[0]===Ae.TOKEN_TRANSFER_LOG_TOPIC_HASH;let n;return t&&(n=e.topics&&e.topics[3]&&e.topics[3].match(null==a?void 0:a.slice(2))),r&&(n=e.topics&&e.topics[2]&&e.topics[2].match(null==a?void 0:a.slice(2))),{isERC1155NftTransfer:t,isERC721NftTransfer:r,isTransferToSelectedAddress:n,...e}});if(0!==e.length){const t=[];e.forEach(e=>{if(e.isTransferToSelectedAddress&&(e.isERC1155NftTransfer||e.isERC721NftTransfer)){let r;r=e.isERC1155NftTransfer?new W.Interface(Y.abiERC1155):new W.Interface(Y.abiERC721);try{const n=r.parseLog({data:e.data,topics:e.topics});t.push({contract:e.address,...n})}catch(e){}}});const r=[],n=[];t.forEach(e=>{var t;const o=(0,Ce.getTokenIdParam)(e),i=null==l||null===(t=l[a])||void 0===t||null===(t=t[s])||void 0===t?void 0:t.find(({address:t,tokenId:r})=>(0,ye.isEqualCaseInsensitive)(t,e.contract)&&r===o);i?r.push(i):n.push({tokenId:o,...e})});const o=r.map(async e=>this.nftController.checkAndUpdateSingleNftOwnershipStatus(e,!1,p,{selectedAddress:a}));await Promise.allSettled(o);const i=n.map(async e=>this.nftController.addNft(e.contract,e.tokenId,p));await Promise.allSettled(i)}}}_trackTransactionFailure(e){var t,r;const{txReceipt:n}=e,o=this.getState(),{allTokens:s}=this.tokensController.state,i=this.accountsController.getSelectedAccount(),a=(null==s||null===(t=s[e.chainId])||void 0===t?void 0:t[i.address])||[];n&&"0x0"===n.status&&this.metaMetricsController.trackEvent({event:"Tx Status Update: On-Chain Failure",category:ge.MetaMetricsEventCategory.Background,properties:{action:"Transactions",errorMessage:null===(r=e.simulationFails)||void 0===r?void 0:r.reason,numberOfTokens:a.length,numberOfAccounts:Object.keys(o.accounts).length}},{matomoEvent:!0})}_onUserOperationAdded(e){const t=this.txController.state.transactions.find(t=>t.id===e.id);t&&(t.type===V.TransactionType.swap?this.controllerMessenger.publish("TransactionController:transactionNewSwap",{transactionMeta:t}):t.type===V.TransactionType.swapApproval&&this.controllerMessenger.publish("TransactionController:transactionNewSwapApproval",{transactionMeta:t}))}_onUserOperationTransactionUpdated(e){const t={...e,txParams:{...e.txParams,from:this.accountsController.getSelectedAccount().address}};this.txController.state.transactions.some(e=>e.id===t.id)||this.txController.update(e=>{e.transactions.push(t)}),this.txController.updateTransaction(t,"Generated from user operation"),this.controllerMessenger.publish("TransactionController:transactionStatusUpdated",{transactionMeta:t})}_getMetaMaskState(){return{metamask:this.getState()}}_getConfigForRemoteFeatureFlagRequest(){return{distribution:wr.main||U.DistributionType.Main,environment:br.production||U.EnvironmentType.Development}}}async function Tr(e,t){var r,n,o,s,i;const a=null===(r=this.opts.overrides)||void 0===r?void 0:r.keyrings;let l=null;switch(e.name){case le.HardwareDeviceNames.trezor:l=(null==a||null===(n=a.trezor)||void 0===n?void 0:n.type)||y.TrezorKeyring.type;break;case le.HardwareDeviceNames.oneKey:l=(null==a||null===(o=a.oneKey)||void 0===o?void 0:o.type)||(null===y.OneKeyKeyring||void 0===y.OneKeyKeyring?void 0:y.OneKeyKeyring.type);break;case le.HardwareDeviceNames.ledger:l=(null==a||null===(s=a.ledger)||void 0===s?void 0:s.type)||v.LedgerKeyring.type;break;case le.HardwareDeviceNames.qr:l=k.MetaMaskKeyring.type;break;case le.HardwareDeviceNames.lattice:l=(null==a||null===(i=a.lattice)||void 0===i?void 0:i.type)||b.default.type;break;default:throw new Error("MetamaskController:#withKeyringForDevice - Unknown device")}return this.keyringController.withKeyring({type:l},async({keyring:r})=>{if(e.hdPath&&r.setHdPath&&r.setHdPath(e.hdPath),e.name===le.HardwareDeviceNames.lattice&&(r.appName="MetaMask"),e.name===le.HardwareDeviceNames.ledger&&await this.setLedgerTransportPreference(r),e.name===le.HardwareDeviceNames.trezor||e.name===le.HardwareDeviceNames.oneKey){const e=r.getModel();this.appStateController.setTrezorModel(e)}return r.network=(0,Pe.getProviderConfig)({metamask:this.networkController.state}).type,await t(r)},{createIfMissing:!0})}function Mr(e,t){const r=Cr(kr,this,Ar).call(this,t),n=Cr(kr,this,Ar).call(this,e);r!==n&&this.tokenListController.updatePreventPollingOnNetworkRestart(!n)}function Ar(e){const{useTokenDetection:t,useTransactionSimulations:r,preferences:n}=e??{},{petnamesEnabled:o}=n??{};return t||o||r}function Pr(){const e=Cr(kr,this,Er).call(this);return this.networkController.getNetworkClientById(e).configuration.chainId}function Er(){return this.networkController.state.selectedNetworkClientId}function Ir({existingControllers:e,initFunctions:t,initState:r}){const n={getCronjobControllerStorageManager:()=>this.opts.cronjobControllerStorageManager,getFlatState:this.getState.bind(this),getGlobalChainId:Cr(kr,this,Pr).bind(this),getGlobalNetworkClientId:Cr(kr,this,Er).bind(this),getPermittedAccounts:this.getPermittedAccounts.bind(this),getProvider:()=>this.provider,getStateUI:this._getMetaMaskState.bind(this),getTransactionMetricsRequest:this.getTransactionMetricsRequest.bind(this),updateAccountBalanceForTransactionNetwork:this.updateAccountBalanceForTransactionNetwork.bind(this),offscreenPromise:this.offscreenPromise,preinstalledSnaps:this.opts.preinstalledSnaps,persistedState:r,removeAllConnections:this.removeAllConnections.bind(this),setupUntrustedCommunicationEip1193:this.setupUntrustedCommunicationEip1193.bind(this),showNotification:this.platform._showNotification,getMetaMetricsId:this.metaMetricsController.getMetaMetricsId.bind(this.metaMetricsController),trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),refreshOAuthToken:this.oauthService.getNewRefreshToken.bind(this.oauthService),revokeAndGetNewRefreshToken:this.oauthService.revokeAndGetNewRefreshToken.bind(this.oauthService),getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getHardwareTypeForMetric:this.getHardwareTypeForMetric.bind(this),trace:Ee.trace};return(0,Yt.initControllers)({baseControllerMessenger:this.controllerMessenger,existingControllers:e,initFunctions:t,initRequest:n})}r.default=Sr}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"$root$",file:"app/scripts/metamask-controller.js"}],[222,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:2,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=2;try{"etherscan"===t.data.config.provider.type&&(t.data.config.provider.type="rpc",t.data.config.provider.rpcTarget="https://rpc.metamask.io/")}catch(e){}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/002.js"}],[223,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:3,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=3;try{"https://rawtestrpc.metamask.io/"===t.data.config.provider.rpcTarget&&(t.data.config.provider.rpcTarget="https://testrpc.metamask.io/")}catch(e){}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/003.js"}],[224,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:4,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=4;try{if("rpc"!==t.data.config.provider.type)return Promise.resolve(t);switch(t.data.config.provider.rpcTarget){case"https://testrpc.metamask.io/":t.data.config.provider={type:"testnet"};break;case"https://rpc.metamask.io/":t.data.config.provider={type:"mainnet"}}}catch(e){}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/004.js"}],[225,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:5,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=5;try{const e=function(e){const{config:t}=e,r={...e,KeyringController:{vault:e.vault,selectedAccount:t.selectedAccount,walletNicknames:e.walletNicknames}};return delete r.vault,delete r.walletNicknames,delete r.config.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #5${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/005.js"}],[226,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:6,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=6;try{const e=function(e){const t=e.KeyringController,r={...e,PreferencesController:{selectedAddress:t.selectedAccount}};return delete r.KeyringController.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #6${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/006.js"}],[227,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:7,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=7;try{const e=function(e){const t={...e,TransactionManager:{transactions:e.transactions||[],gasMultiplier:e.gasMultiplier||1}};return delete t.transactions,delete t.gasMultiplier,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #7${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/007.js"}],[228,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:8,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=8;try{const e=function(e){const t={...e,NoticeController:{noticesList:e.noticesList||[]}};return delete t.noticesList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #8${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/008.js"}],[229,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:9,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=9;try{const e=function(e){const t=(0,n.merge)({},e,{CurrencyController:{currentCurrency:e.currentFiat||e.fiatCurrency||"USD",conversionRate:e.conversionRate,conversionDate:e.conversionDate}});return delete t.currentFiat,delete t.fiatCurrency,delete t.conversionRate,delete t.conversionDate,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #9${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/009.js"}],[23,{"../../controllers/institutional-snap/InstitutionalSnapController":94},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.InstitutionalSnapControllerInit=void 0;var n=e("../../controllers/institutional-snap/InstitutionalSnapController");r.InstitutionalSnapControllerInit=e=>({controller:new n.InstitutionalSnapController({messenger:e.controllerMessenger})})}}},{package:"$root$",file:"app/scripts/controller-init/institutional-snap/institutional-snap-controller-init.ts"}],[230,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:10,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=10;try{const e=function(e){const t=(0,n.merge)({},e,{ShapeShiftController:{shapeShiftTxList:e.shapeShiftTxList||[]}});return delete t.shapeShiftTxList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #10${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/010.js"}],[231,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:11,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=11;try{const e=function(e){const t=e;return delete t.TOSHash,delete t.isDisclaimerConfirmed,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #11${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/011.js"}],[232,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:12,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=12;try{const e=function(e){const t=e;return t.NoticeController.noticesList.forEach(e=>{e.read&&(e.body="")}),t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #12${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/012.js"}],[233,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:13,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=13;try{const e=function(e){const t=e,{config:r}=t;r&&r.provider&&"testnet"===r.provider.type&&(t.config.provider.type="ropsten");return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #13${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/013.js"}],[2338,{"./constants.cjs":2339,"./helpers/Bundler.cjs":2340,"./helpers/PendingUserOperationTracker.cjs":2341,"./helpers/SnapSmartContractAccount.cjs":2342,"./logger.cjs":2344,"./types.cjs":2345,"./utils/gas-fees.cjs":2347,"./utils/gas.cjs":2348,"./utils/transaction.cjs":2349,"./utils/validation.cjs":2350,"@metamask/base-controller":1238,"@metamask/controller-utils":1315,"@metamask/eth-query":1404,"@metamask/rpc-errors":1958,"@metamask/transaction-controller":2316,"@metamask/utils":2361,events:3630,lodash:4088,uuid:4918},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n,o,s,i,a,l,c,d,u,p,h,g,m,f,C,y,v,b,w,k,S,T,M,A,P=this&&this.__classPrivateFieldSet||function(e,t,r,n,o){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?o.call(e,r):o?o.value=r:t.set(e,r),r},E=this&&this.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)},I=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.UserOperationController=void 0;const _=e("@metamask/base-controller"),N=e("@metamask/controller-utils"),O=I(e("@metamask/eth-query")),R=e("@metamask/rpc-errors"),j=e("@metamask/transaction-controller"),D=e("@metamask/utils"),x=I(e("events")),B=e("lodash"),F=e("uuid"),L=e("./constants.cjs"),U=e("./helpers/Bundler.cjs"),$=e("./helpers/PendingUserOperationTracker.cjs"),G=e("./helpers/SnapSmartContractAccount.cjs"),K=e("./logger.cjs"),q=e("./types.cjs"),H=e("./utils/gas.cjs"),V=e("./utils/gas-fees.cjs"),W=e("./utils/transaction.cjs"),Y=e("./utils/validation.cjs"),z={userOperations:{persist:!0,anonymous:!1}};class J extends _.BaseController{constructor({entrypoint:e,getGasFeeEstimates:t,messenger:r,state:a}){super({name:"UserOperationController",metadata:z,messenger:r,state:{userOperations:{},...a}}),n.add(this),o.set(this,void 0),s.set(this,void 0),i.set(this,void 0),this.hub=new x.default,P(this,o,e,"f"),P(this,s,t,"f"),P(this,i,new $.PendingUserOperationTracker({getUserOperations:()=>(0,B.cloneDeep)(Object.values(this.state.userOperations)),messenger:r}),"f"),E(this,n,"m",w).call(this)}async addUserOperation(e,t){return(0,Y.validateAddUserOperationRequest)(e),(0,Y.validateAddUserOperationOptions)(t),await E(this,n,"m",a).call(this,e,t)}async addUserOperationFromTransaction(e,t){(0,Y.validateAddUserOperationOptions)(t);const{data:r,from:o,maxFeePerGas:s,maxPriorityFeePerGas:i,to:l,value:c}=e,d={data:""===r?undefined:r,from:o,maxFeePerGas:s,maxPriorityFeePerGas:i,to:l,value:c};return(0,Y.validateAddUserOperationRequest)(d),await E(this,n,"m",a).call(this,d,{...t,transaction:e})}startPollingByNetworkClientId(e){return E(this,i,"f").startPolling({networkClientId:e})}}r.UserOperationController=J,o=new WeakMap,s=new WeakMap,i=new WeakMap,n=new WeakSet,a=async function(e,t){(0,K.projectLogger)("Adding user operation",{request:e,options:t});const{networkClientId:r,origin:o,smartContractAccount:s,swaps:i,transaction:a}=t,{chainId:u,provider:p}=await E(this,n,"m",T).call(this,r),h=await E(this,n,"m",d).call(this,u,o,a,i),g=s??new G.SnapSmartContractAccount(this.messagingSystem),m={chainId:u,metadata:h,options:{...t,smartContractAccount:g},provider:p,request:e,transaction:a},{id:C}=h;let y=!1;const v=(async()=>{try{return await E(this,n,"m",l).call(this,m)}catch(e){if(E(this,n,"m",f).call(this,h,e),y)throw e;return undefined}})(),b=async()=>(y=!0,await v);return{id:C,hash:b,transactionHash:async()=>{await b();const{transactionHash:e}=await E(this,n,"m",c).call(this,h);return e}}},l=async function(e){const{metadata:t,options:r}=e,{requireApproval:o,smartContractAccount:s}=r;let i;try{return await E(this,n,"m",u).call(this,e),await E(this,n,"m",p).call(this,t,s),this.hub.emit("user-operation-added",t),!1!==o&&(i=await E(this,n,"m",h).call(this,e)),await E(this,n,"m",g).call(this,t,s),await E(this,n,"m",m).call(this,t),i?.success(),t.hash}catch(e){throw i?.error(e),e}},c=async function(e){const{id:t,hash:r}=e;return(0,K.projectLogger)("Waiting for confirmation",t,r),new Promise((e,r)=>{this.hub.once(`${t}:confirmed`,t=>{e(t)}),this.hub.once(`${t}:failed`,(e,t)=>{r(t)})})},d=async function(e,t,r,o){const s={actualGasCost:null,actualGasUsed:null,baseFeePerGas:null,bundlerUrl:null,chainId:e,error:null,hash:null,id:(0,F.v1)(),origin:t,status:q.UserOperationStatus.Unapproved,swapsMetadata:o?{approvalTxId:o.approvalTxId??null,destinationTokenAddress:o.destinationTokenAddress??null,destinationTokenAmount:o.destinationTokenAmount??null,destinationTokenDecimals:o.destinationTokenDecimals??null,destinationTokenSymbol:o.destinationTokenSymbol??null,estimatedBaseFee:o.estimatedBaseFee??null,sourceTokenAddress:o.sourceTokenAddress??null,sourceTokenAmount:o.sourceTokenAmount??null,sourceTokenDecimals:o.sourceTokenDecimals??null,sourceTokenSymbol:o.sourceTokenSymbol??null,swapAndSendRecipient:o.swapAndSendRecipient??null,swapMetaData:o.swapMetaData??null,swapTokenValue:o.swapTokenValue??null}:null,time:Date.now(),transactionHash:null,transactionParams:r??null,transactionType:null,userFeeLevel:null,userOperation:E(this,n,"m",C).call(this,r)};return E(this,n,"m",y).call(this,s),(0,K.projectLogger)("Added user operation",s.id),s},u=async function(e){const{chainId:t,metadata:r,options:i,provider:a,request:l,transaction:c}=e,{data:d,from:u,to:p,value:h}=l,{id:g,transactionParams:m,userOperation:f}=r,{smartContractAccount:C}=i;(0,K.projectLogger)("Preparing user operation",{id:g});const v=await E(this,n,"m",S).call(this,c,a,i);r.transactionType=v??null,(0,K.projectLogger)("Determined transaction type",v),await(0,V.updateGasFees)({getGasFeeEstimates:E(this,s,"f"),metadata:r,originalRequest:l,provider:a,transaction:m??undefined});const b=await C.prepareUserOperation({chainId:t,data:d,from:u,to:p,value:h});(0,Y.validatePrepareUserOperationResponse)(b);const{bundler:w,callData:k,dummyPaymasterAndData:T,dummySignature:M,initCode:A,nonce:P,sender:I}=b;f.callData=k,f.initCode=A??L.EMPTY_BYTES,f.nonce=P,f.paymasterAndData=T??L.EMPTY_BYTES,f.sender=I,f.signature=M??L.EMPTY_BYTES,r.bundlerUrl=w,await(0,H.updateGas)(r,b,E(this,o,"f")),E(this,n,"m",y).call(this,r)},p=async function(e,t){const{id:r,userOperation:o,chainId:s}=e;(0,K.projectLogger)("Requesting paymaster data",{id:r});const i=await t.updateUserOperation({userOperation:o,chainId:s});(0,Y.validateUpdateUserOperationResponse)(i),o.paymasterAndData=i.paymasterAndData??L.EMPTY_BYTES,i.callGasLimit&&(o.callGasLimit=i.callGasLimit),i.preVerificationGas&&(o.preVerificationGas=i.preVerificationGas),i.verificationGasLimit&&(o.verificationGasLimit=i.verificationGasLimit),E(this,n,"m",y).call(this,e)},h=async function(e){(0,K.projectLogger)("Requesting approval");const{metadata:t}=e,{resultCallbacks:r,value:o}=await E(this,n,"m",k).call(this,t),s=o?.txMeta;return s&&await E(this,n,"m",M).call(this,e,s),t.status=q.UserOperationStatus.Approved,E(this,n,"m",y).call(this,t),r},g=async function(e,t){const{id:r,chainId:o,userOperation:s}=e;(0,K.projectLogger)("Signing user operation",r,s);const i=await t.signUserOperation({userOperation:s,chainId:o});(0,Y.validateSignUserOperationResponse)(i);const{signature:a}=i;s.signature=a,(0,K.projectLogger)("Signed user operation",a),e.status=q.UserOperationStatus.Signed,E(this,n,"m",y).call(this,e)},m=async function(e){const{userOperation:t}=e;(0,K.projectLogger)("Submitting user operation",t);const r=new U.Bundler(e.bundlerUrl),s=await r.sendUserOperation(t,E(this,o,"f"));e.hash=s,e.status=q.UserOperationStatus.Submitted,E(this,n,"m",y).call(this,e)},f=function(e,t){const{id:r}=e,o=t;(0,K.projectLogger)("User operation failed",r,t),e.error={name:o.name,message:o.message,stack:o.stack,code:o.code,rpc:o.value},e.status=q.UserOperationStatus.Failed,E(this,n,"m",y).call(this,e),String(o.code)===String(R.errorCodes.provider.userRejectedRequest)&&E(this,n,"m",v).call(this,r)},C=function(e){return{callData:L.EMPTY_BYTES,callGasLimit:L.EMPTY_BYTES,initCode:L.EMPTY_BYTES,maxFeePerGas:e?.maxFeePerGas??L.EMPTY_BYTES,maxPriorityFeePerGas:e?.maxPriorityFeePerGas??L.EMPTY_BYTES,nonce:L.EMPTY_BYTES,paymasterAndData:L.EMPTY_BYTES,preVerificationGas:L.EMPTY_BYTES,sender:L.ADDRESS_ZERO,signature:L.EMPTY_BYTES,verificationGasLimit:L.EMPTY_BYTES}},y=function(e){const{id:t}=e;this.update(r=>{r.userOperations[t]=(0,B.cloneDeep)(e)}),E(this,n,"m",b).call(this,e)},v=function(e){this.update(t=>{delete t.userOperations[e]})},b=function(e){if(!e.transactionParams)return;const t=(0,W.getTransactionMetadata)(e);this.hub.emit("transaction-updated",t)},w=function(){E(this,i,"f").hub.on("user-operation-confirmed",e=>{(0,K.projectLogger)("In listener..."),this.hub.emit("user-operation-confirmed",e),this.hub.emit(`${e.id}:confirmed`,e)}),E(this,i,"f").hub.on("user-operation-failed",(e,t)=>{this.hub.emit("user-operation-failed",e,t),this.hub.emit(`${e.id}:failed`,e,t)}),E(this,i,"f").hub.on("user-operation-updated",e=>{E(this,n,"m",y).call(this,e)})},k=async function(e){const{id:t,origin:r}=e,n=N.ApprovalType.Transaction,o={txId:t};return await this.messagingSystem.call("ApprovalController:addRequest",{id:t,origin:r,type:n,requestData:o,expectsResult:!0},!0)},S=async function(e,t,r){if(!e)return undefined;if(r.type)return r.type;const n=new O.default(t),o=(0,j.determineTransactionType)(e,n);return(await o).type},T=async function(e){const{provider:t,configuration:r}=this.messagingSystem.call("NetworkController:getNetworkClientById",e),{chainId:n}=r;return{provider:t,chainId:n}},M=async function(e,t){(0,K.projectLogger)("Found updated transaction in approval",{updatedTransaction:t});const{metadata:r,request:o}=e,{userOperation:s}=r,i=s.paymasterAndData!==L.EMPTY_BYTES,a=(0,D.add0x)(t.txParams.maxFeePerGas),l=(0,D.add0x)(t.txParams.maxPriorityFeePerGas);let c=!1;const d=s.maxFeePerGas,u=s.maxPriorityFeePerGas,p=d!==a||u!==l,h=i&&a===L.VALUE_ZERO&&l===L.VALUE_ZERO;p&&!h&&((0,K.projectLogger)("Gas fees updated during approval",{previousMaxFeePerGas:d,previousMaxPriorityFeePerGas:u,updatedMaxFeePerGas:a,updatedMaxPriorityFeePerGas:l}),s.maxFeePerGas=a,s.maxPriorityFeePerGas=l,c=i);const g=o.data??L.EMPTY_BYTES,m=t.txParams.data??L.EMPTY_BYTES;g!==m&&((0,K.projectLogger)("Data updated during approval",{previousData:g,updatedData:m}),c=!0);const f=o.value??L.VALUE_ZERO,C=t.txParams.value??L.VALUE_ZERO;if(f!==C&&((0,K.projectLogger)("Value updated during approval",{previousValue:f,updatedValue:C}),c=!0),c){const t={...o,data:m,maxFeePerGas:a,maxPriorityFeePerGas:l,value:C};await E(this,n,"m",A).call(this,{...e,request:t})}},A=async function(e){(0,K.projectLogger)("Regenerating user operation as parameters were updated during approval");const{options:{smartContractAccount:t},metadata:r}=e;await E(this,n,"m",u).call(this,e),await E(this,n,"m",p).call(this,r,t),(0,K.projectLogger)("Regenerated user operation",r.userOperation)}}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/UserOperationController.cjs"}],[2339,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.VALUE_ZERO=r.ADDRESS_ZERO=r.EMPTY_BYTES=void 0,r.EMPTY_BYTES="0x",r.ADDRESS_ZERO="0x0000000000000000000000000000000000000000",r.VALUE_ZERO="0x0"}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/constants.cjs"}],[234,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:14,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=14;try{const e=function(e){const t=e;return t.NetworkController={},t.NetworkController.provider=t.config.provider,delete t.config.provider,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #14${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/014.js"}],[2340,{"../logger.cjs":2344},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n,o,s,i=this&&this.__classPrivateFieldSet||function(e,t,r,n,o){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?o.call(e,r):o?o.value=r:t.set(e,r),r},a=this&&this.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)};Object.defineProperty(r,"__esModule",{value:!0}),r.Bundler=void 0;const l=e("../logger.cjs"),c=(0,l.createModuleLogger)(l.projectLogger,"bundler");r.Bundler=class{constructor(e){n.add(this),o.set(this,void 0),i(this,o,e,"f")}async estimateUserOperationGas(e,t){c("Estimating gas",{url:a(this,o,"f"),userOperation:e,entrypoint:t});const r=await a(this,n,"m",s).call(this,"eth_estimateUserOperationGas",[e,t]);return c("Estimated gas",{response:r}),r}async getUserOperationReceipt(e){return c("Getting user operation receipt",{url:a(this,o,"f"),hash:e}),await a(this,n,"m",s).call(this,"eth_getUserOperationReceipt",[e])}async sendUserOperation(e,t){c("Sending user operation",{url:a(this,o,"f"),userOperation:e,entrypoint:t});const r=await a(this,n,"m",s).call(this,"eth_sendUserOperation",[e,t]);return c("Sent user operation",r),r}},o=new WeakMap,n=new WeakSet,s=async function(e,t){const r={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",id:1,method:e,params:t})},n=await fetch(a(this,o,"f"),r),s=await n.json();if(s.error){const e=new Error(s.error.message||s.error);throw e.code=s.error.code,e}return s.result}}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/helpers/Bundler.cjs"}],[2341,{"../logger.cjs":2344,"../types.cjs":2345,"./Bundler.cjs":2340,"@metamask/controller-utils":1315,"@metamask/eth-query":1404,"@metamask/polling-controller":1838,"@metamask/utils":2361,events:3630},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n,o,s,i,a,l,c,d,u,p,h,g=this&&this.__classPrivateFieldSet||function(e,t,r,n,o){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?o.call(e,r):o?o.value=r:t.set(e,r),r},m=this&&this.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)},f=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.PendingUserOperationTracker=void 0;const C=e("@metamask/controller-utils"),y=f(e("@metamask/eth-query")),v=e("@metamask/polling-controller"),b=e("@metamask/utils"),w=f(e("events")),k=e("../logger.cjs"),S=e("../types.cjs"),T=e("./Bundler.cjs"),M=(0,b.createModuleLogger)(k.projectLogger,"pending-user-operations");class A extends((0,v.BlockTrackerPollingControllerOnly)()){constructor({getUserOperations:e,messenger:t}){super(),n.add(this),o.set(this,void 0),s.set(this,void 0),this.hub=new w.default,g(this,o,e,"f"),g(this,s,t,"f")}async _executePoll({networkClientId:e}){try{const{blockTracker:t,configuration:r,provider:o}=this._getNetworkClientById(e);M("Polling",{blockNumber:t.getCurrentBlock(),chainId:r.chainId}),await m(this,n,"m",i).call(this,r.chainId,o)}catch(e){M("Failed to check user operations",e)}}_getNetworkClientById(e){return m(this,s,"f").call("NetworkController:getNetworkClientById",e)}}r.PendingUserOperationTracker=A,o=new WeakMap,s=new WeakMap,n=new WeakSet,i=async function(e,t){const r=m(this,n,"m",d).call(this).filter(t=>t.chainId===e);r.length?(M("Found pending user operations to check",{count:r.length,ids:r.map(e=>e.id)}),await Promise.all(r.map(e=>m(this,n,"m",a).call(this,e,t)))):M("No pending user operations to check")},a=async function(e,t){const{bundlerUrl:r,hash:o,id:s}=e;if(o&&r)try{const i=await m(this,n,"m",p).call(this,o,r),a=i?.success;if(i&&!a)return void m(this,n,"m",c).call(this,e,i);if(a)return void await m(this,n,"m",l).call(this,e,i,t);M("No receipt found for user operation",{id:s,hash:o})}catch(e){M("Failed to check user operation",s,e)}else M("Skipping user operation as missing hash or bundler",s)},l=async function(e,t,r){const{id:o}=e,{actualGasCost:s,actualGasUsed:i,receipt:{blockHash:a,transactionHash:l}}=t;M("User operation confirmed",o,l);const{baseFeePerGas:c}=await(0,C.query)(new y.default(r),"getBlockByHash",[a,!1]);e.actualGasCost=m(this,n,"m",h).call(this,s),e.actualGasUsed=m(this,n,"m",h).call(this,i),e.baseFeePerGas=c,e.status=S.UserOperationStatus.Confirmed,e.transactionHash=l,m(this,n,"m",u).call(this,e),this.hub.emit("user-operation-confirmed",e)},c=function(e,t){const{id:r}=e;M("User operation failed",r),e.status=S.UserOperationStatus.Failed,m(this,n,"m",u).call(this,e),this.hub.emit("user-operation-failed",e,new Error("User operation receipt has failed status"))},d=function(){return m(this,o,"f").call(this).filter(e=>e.status===S.UserOperationStatus.Submitted)},u=function(e){this.hub.emit("user-operation-updated",e)},p=async function(e,t){return new T.Bundler(t).getUserOperationReceipt(e)},h=function(e){return"number"==typeof e?(0,C.toHex)(e):e}}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/helpers/PendingUserOperationTracker.cjs"}],[2342,{"../constants.cjs":2339,"../utils/chain-id.cjs":2346},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n,o=this&&this.__classPrivateFieldSet||function(e,t,r,n,o){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?o.call(e,r):o?o.value=r:t.set(e,r),r},s=this&&this.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)};Object.defineProperty(r,"__esModule",{value:!0}),r.SnapSmartContractAccount=void 0;const i=e("../constants.cjs"),a=e("../utils/chain-id.cjs");r.SnapSmartContractAccount=class{constructor(e){n.set(this,void 0),o(this,n,e,"f")}async prepareUserOperation(e){const{chainId:t,data:r,from:o,to:l,value:c}=e,d=r??i.EMPTY_BYTES,u=l??i.ADDRESS_ZERO,p=c??i.VALUE_ZERO,h=await s(this,n,"f").call("KeyringController:prepareUserOperation",o,[{data:d,to:u,value:p}],{chainId:(0,a.toEip155ChainId)(t)}),{bundlerUrl:g,callData:m,dummyPaymasterAndData:f,dummySignature:C,gasLimits:y,initCode:v,nonce:b}=h;return{bundler:g,callData:m,dummyPaymasterAndData:f,dummySignature:C,gas:y,initCode:v,nonce:b,sender:o}}async updateUserOperation(e){const{userOperation:t,chainId:r}=e,{sender:o}=t,{paymasterAndData:l,verificationGasLimit:c,preVerificationGas:d,callGasLimit:u}=await s(this,n,"f").call("KeyringController:patchUserOperation",o,t,{chainId:(0,a.toEip155ChainId)(r)});return{paymasterAndData:l===i.EMPTY_BYTES?undefined:l,verificationGasLimit:c,preVerificationGas:d,callGasLimit:u}}async signUserOperation(e){const{userOperation:t,chainId:r}=e,{sender:o}=t;return{signature:await s(this,n,"f").call("KeyringController:signUserOperation",o,t,{chainId:(0,a.toEip155ChainId)(r)})}}},n=new WeakMap}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/helpers/SnapSmartContractAccount.cjs"}],[2343,{"./UserOperationController.cjs":2338,"./types.cjs":2345},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,o)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),o(e("./UserOperationController.cjs"),r),o(e("./types.cjs"),r)}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/index.cjs"}],[2344,{"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createModuleLogger=r.projectLogger=void 0;const n=e("@metamask/utils");Object.defineProperty(r,"createModuleLogger",{enumerable:!0,get:function(){return n.createModuleLogger}}),r.projectLogger=(0,n.createProjectLogger)("user-operation-controller")}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/logger.cjs"}],[2345,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n;Object.defineProperty(r,"__esModule",{value:!0}),r.UserOperationStatus=void 0,function(e){e.Unapproved="unapproved",e.Approved="approved",e.Signed="signed",e.Submitted="submitted",e.Failed="failed",e.Confirmed="confirmed"}(n||(r.UserOperationStatus=n={}))}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/types.cjs"}],[2346,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.toEip155ChainId=void 0,r.toEip155ChainId=function(e){const t=Number(e);return Number.isInteger(t)?t.toString():e}}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/utils/chain-id.cjs"}],[2347,{"../constants.cjs":2339,"../logger.cjs":2344,"@metamask/controller-utils":1315,"@metamask/eth-query":1404,"@metamask/gas-fee-controller":1490,"@metamask/transaction-controller":2316,"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.updateGasFees=void 0;const o=e("@metamask/controller-utils"),s=n(e("@metamask/eth-query")),i=e("@metamask/gas-fee-controller"),a=e("@metamask/transaction-controller"),l=e("@metamask/utils"),c=e("../constants.cjs"),d=e("../logger.cjs"),u=(0,d.createModuleLogger)(d.projectLogger,"gas-fees");function p(e){return(0,o.toHex)((0,o.gweiDecToWEIBN)(e))}function h(e){return!e||e===c.EMPTY_BYTES}r.updateGasFees=async function(e){const{metadata:t,originalRequest:r,transaction:n}=e,{userOperation:c}=t;let d;const g=async()=>(d||(d=await async function(e){const{getGasFeeEstimates:t,provider:r}=e;try{const{gasFeeEstimates:e,gasEstimateType:r}=await t();if(r===i.GAS_ESTIMATE_TYPES.FEE_MARKET){const{medium:{suggestedMaxPriorityFeePerGas:t,suggestedMaxFeePerGas:r}={}}=e;if(t&&r){const e={maxFeePerGas:p(r),maxPriorityFeePerGas:p(t)};return u("Using medium values from fee market estimate",e),e}}if(r===i.GAS_ESTIMATE_TYPES.LEGACY){const t=p(e.medium);return u("Using medium value from legacy estimate",t),{maxFeePerGas:t}}if(r===i.GAS_ESTIMATE_TYPES.ETH_GASPRICE){const t=p(e.gasPrice);return u("Using gasPrice from estimate",t),{maxFeePerGas:t}}}catch(e){u("Failed to get estimate",e)}const n=await(0,o.query)(new s.default(r),"gasPrice");if(!n)return{};const a=(0,l.add0x)(n.toString(16));return u("Using gasPrice from network as fallback",a),{maxFeePerGas:a}}(e)),d);c.maxFeePerGas=await async function(e,t,r){const{maxFeePerGas:n,maxPriorityFeePerGas:o}=e,{gasPrice:s}=r??{};if(!h(n))return u("Using maxFeePerGas from request",n),n;if(h(o)&&s)return u("Setting maxFeePerGas to transaction gasPrice",s),s;const{maxFeePerGas:i}=await t();if(!i)throw new Error("Failed to get gas fee estimate for maxFeePerGas");return u("Using maxFeePerGas from estimate",i),i}(r,g,n),c.maxPriorityFeePerGas=await async function(e,t,r,n){const{maxFeePerGas:o,maxPriorityFeePerGas:s}=e,{gasPrice:i}=n??{},{maxFeePerGas:a}=r;if(!h(s))return u("Using maxPriorityFeePerGas from request",s),s;if(h(o)&&i)return u("Setting maxPriorityFeePerGas to transaction gasPrice",i),i;const{maxPriorityFeePerGas:l}=await t();if(l)return u("Using maxPriorityFeePerGas from estimate",l),l;return u("Setting maxPriorityFeePerGas to maxFeePerGas",a),a}(r,g,c,n),t.userFeeLevel=function(e,t,r,n){const{origin:s}=e,{maxFeePerGas:i,maxPriorityFeePerGas:l}=t,{maxFeePerGas:c,maxPriorityFeePerGas:d}=r||{};if(h(i)&&h(l)&&n?.gasPrice)return s===o.ORIGIN_METAMASK?a.UserFeeLevel.CUSTOM:a.UserFeeLevel.DAPP_SUGGESTED;if(h(i)&&h(l)&&c&&d)return a.UserFeeLevel.MEDIUM;if(s===o.ORIGIN_METAMASK)return a.UserFeeLevel.CUSTOM;return a.UserFeeLevel.DAPP_SUGGESTED}(t,r,d,n)}}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/utils/gas-fees.cjs"}],[2348,{"../constants.cjs":2339,"../helpers/Bundler.cjs":2340,"../logger.cjs":2344,"@metamask/controller-utils":1315,"@metamask/utils":2361,"bn.js":3257},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.updateGas=void 0;const o=e("@metamask/controller-utils"),s=e("@metamask/utils"),i=n(e("bn.js")),a=e("../constants.cjs"),l=e("../helpers/Bundler.cjs"),c=e("../logger.cjs"),d=(0,c.createModuleLogger)(c.projectLogger,"gas");function u(e){const t=("string"==typeof e?(0,o.hexToBN)(e):new i.default(e)).muln(1.5);return(0,s.add0x)(t.toString(16))}r.updateGas=async function(e,t,r){const{userOperation:n}=e;if(t.gas)return n.callGasLimit=t.gas.callGasLimit,n.preVerificationGas=t.gas.preVerificationGas,n.verificationGasLimit=t.gas.verificationGasLimit,void d("Using gas values from smart contract account",{callGasLimit:n.callGasLimit,preVerificationGas:n.preVerificationGas,verificationGasLimit:n.verificationGasLimit});const o={...n,maxFeePerGas:a.VALUE_ZERO,maxPriorityFeePerGas:a.VALUE_ZERO,callGasLimit:a.VALUE_ZERO,preVerificationGas:a.VALUE_ZERO,verificationGasLimit:"0xF4240"},s=new l.Bundler(e.bundlerUrl),i=await s.estimateUserOperationGas(o,r);n.callGasLimit=u(i.callGasLimit),n.preVerificationGas=u(i.preVerificationGas),n.verificationGasLimit=u(i.verificationGasLimit??i.verificationGas),d("Using buffered gas values from bundler estimate",{callGasLimit:n.callGasLimit,preVerificationGas:n.preVerificationGas,verificationGasLimit:n.verificationGasLimit,multiplier:1.5,estimate:i})}}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/utils/gas.cjs"}],[2349,{"../constants.cjs":2339,"../types.cjs":2345,"@metamask/transaction-controller":2316,"@metamask/utils":2361,"bn.js":3257},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.getTransactionMetadata=void 0;const o=e("@metamask/transaction-controller"),s=e("@metamask/utils"),i=n(e("bn.js")),a=e("../constants.cjs"),l=e("../types.cjs");r.getTransactionMetadata=function(e){const{actualGasCost:t,actualGasUsed:r,baseFeePerGas:n,chainId:c,error:d,origin:u,transactionHash:p,id:h,swapsMetadata:g,time:m,transactionParams:f,transactionType:C,userFeeLevel:y,userOperation:v}=e;if(!f)return undefined;const b=t&&r?(0,s.add0x)(new i.default((0,s.remove0x)(t),16).div(new i.default((0,s.remove0x)(r),16)).toString(16)):undefined,w=d?{name:d.name,message:d.message,stack:d.stack,code:d.code,rpc:d.rpc}:undefined,k={[l.UserOperationStatus.Unapproved]:o.TransactionStatus.unapproved,[l.UserOperationStatus.Approved]:o.TransactionStatus.approved,[l.UserOperationStatus.Signed]:o.TransactionStatus.signed,[l.UserOperationStatus.Submitted]:o.TransactionStatus.submitted,[l.UserOperationStatus.Confirmed]:o.TransactionStatus.confirmed,[l.UserOperationStatus.Failed]:o.TransactionStatus.failed}[e.status],S=function(...e){const t=new i.default(0);for(const r of e)r&&t.iadd(new i.default((0,s.remove0x)(r),16));return(0,s.add0x)(t.toString(16))}(v.preVerificationGas,v.verificationGasLimit,v.callGasLimit),T=v.paymasterAndData!==a.EMPTY_BYTES,M=T?a.VALUE_ZERO:v.maxFeePerGas,A=T?a.VALUE_ZERO:v.maxPriorityFeePerGas,P=v.nonce===a.EMPTY_BYTES?undefined:v.nonce,E={...f,from:v.sender,gas:S,nonce:P,maxFeePerGas:M,maxPriorityFeePerGas:A};delete E.gasPrice;const I={approvalTxId:g?.approvalTxId??undefined,destinationTokenAddress:g?.destinationTokenAddress??undefined,destinationTokenAmount:g?.destinationTokenAmount??undefined,destinationTokenDecimals:g?.destinationTokenDecimals??undefined,destinationTokenSymbol:g?.destinationTokenSymbol??undefined,estimatedBaseFee:g?.estimatedBaseFee??undefined,sourceTokenAddress:g?.sourceTokenAddress??undefined,sourceTokenAmount:g?.sourceTokenAmount??undefined,sourceTokenDecimals:g?.sourceTokenDecimals??undefined,sourceTokenSymbol:g?.sourceTokenSymbol??undefined,swapAndSendRecipient:g?.swapAndSendRecipient??undefined,swapMetaData:g?.swapMetaData??undefined,swapTokenValue:g?.swapTokenValue??undefined},_=T?o.UserFeeLevel.CUSTOM:y;return{baseFeePerGas:n??undefined,chainId:c,error:w,hash:p??undefined,id:h,isUserOperation:!0,networkClientId:"user-operation",origin:u,status:k,time:m,txParams:E,txReceipt:{effectiveGasPrice:b??undefined,gasUsed:r??undefined},type:C??undefined,userFeeLevel:_,...I}}}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/utils/transaction.cjs"}],[235,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/transaction-controller"),o=e("lodash");r.default={version:15,migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=15;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=r;t.TransactionController.transactions=e.map(e=>e.err?("Gave up submitting tx."===e.err.message&&(e.status=n.TransactionStatus.failed),e):e)}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #15${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/015.js"}],[2350,{"../constants.cjs":2339,"@metamask/superstruct":2267,"@metamask/transaction-controller":2316,"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.validateSignUserOperationResponse=r.validateUpdateUserOperationResponse=r.validatePrepareUserOperationResponse=r.validateAddUserOperationOptions=r.validateAddUserOperationRequest=void 0;const n=e("@metamask/superstruct"),o=e("@metamask/transaction-controller"),s=e("@metamask/utils"),i=e("../constants.cjs");function a(e,t,r){try{(0,n.assert)(e,t,r)}catch(e){const t=e.failures().map(e=>e.path.length?`${e.path.join(".")} - ${e.message}`:e.message).join("\n");throw new Error(`${r}\n${t}`)}}function l(){return(0,n.define)("Hexadecimal String",e=>(0,s.isStrictHexString)(e))}function c(){return(0,n.define)("Hexadecimal String or 0x",e=>(0,s.isStrictHexString)(e)||e===i.EMPTY_BYTES)}r.validateAddUserOperationRequest=function(e){const t=l(),r=c();a(e,(0,n.object)({data:(0,n.optional)(r),from:t,maxFeePerGas:(0,n.optional)(t),maxPriorityFeePerGas:(0,n.optional)(t),to:(0,n.optional)(t),value:(0,n.optional)(t)}),"Invalid request to add user operation")},r.validateAddUserOperationOptions=function(e){a(e,(0,n.object)({networkClientId:(0,n.string)(),origin:(0,n.string)(),requireApproval:(0,n.optional)((0,n.boolean)()),smartContractAccount:(0,n.optional)((0,n.object)({prepareUserOperation:(0,n.func)(),updateUserOperation:(0,n.func)(),signUserOperation:(0,n.func)()})),swaps:(0,n.optional)((0,n.object)({approvalTxId:(0,n.optional)((0,n.string)()),destinationTokenAddress:(0,n.optional)((0,n.string)()),destinationTokenDecimals:(0,n.optional)((0,n.number)()),destinationTokenSymbol:(0,n.optional)((0,n.string)()),estimatedBaseFee:(0,n.optional)((0,n.string)()),sourceTokenSymbol:(0,n.optional)((0,n.string)()),swapMetaData:(0,n.optional)((0,n.object)()),swapTokenValue:(0,n.optional)((0,n.string)()),destinationTokenAmount:(0,n.optional)((0,n.string)()),sourceTokenAddress:(0,n.optional)((0,n.string)()),sourceTokenAmount:(0,n.optional)((0,n.string)()),sourceTokenDecimals:(0,n.optional)((0,n.number)()),swapAndSendRecipient:(0,n.optional)((0,n.string)())})),type:(0,n.optional)((0,n.enums)(Object.values(o.TransactionType)))}),"Invalid options to add user operation")},r.validatePrepareUserOperationResponse=function(e){const t=l(),r=c();a(e,(0,n.refine)((0,n.object)({bundler:(0,n.string)(),callData:t,dummyPaymasterAndData:(0,n.optional)(r),dummySignature:(0,n.optional)(r),gas:(0,n.optional)((0,n.object)({callGasLimit:t,preVerificationGas:t,verificationGasLimit:t})),initCode:(0,n.optional)(r),nonce:t,sender:t}),"ValidPrepareUserOperationResponse",({gas:e,dummySignature:t})=>!!(e||t&&t!==i.EMPTY_BYTES)||"Must specify dummySignature if not specifying gas"),"Invalid response when preparing user operation")},r.validateUpdateUserOperationResponse=function(e){a(e,(0,n.optional)((0,n.object)({paymasterAndData:(0,n.optional)(c()),callGasLimit:(0,n.optional)(c()),preVerificationGas:(0,n.optional)(c()),verificationGasLimit:(0,n.optional)(c())})),"Invalid response when updating user operation")},r.validateSignUserOperationResponse=function(e){const t=l();a(e,(0,n.object)({signature:t}),"Invalid response when signing user operation")}}}},{package:"@metamask/user-operation-controller",file:"node_modules/@metamask/user-operation-controller/dist/utils/validation.cjs"}],[236,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/transaction-controller"),o=e("lodash");r.default={version:16,migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=16;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map(e=>e.err?("transaction with the same hash was already imported."===e.err&&(e.status=n.TransactionStatus.submitted,delete e.err),e):e)}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #16${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/016.js"}],[237,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/transaction-controller"),o=e("lodash");r.default={version:17,migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=17;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map(e=>(!e.status===n.TransactionStatus.failed||e.retryCount>0&&e.retryCount<2&&(e.status=n.TransactionStatus.submitted,delete e.err),e))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #17${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/017.js"}],[2374,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=function(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),r=0;r<t.length;r++)t[r]=255;for(var n=0;n<e.length;n++){var o=e.charAt(n),s=o.charCodeAt(0);if(255!==t[s])throw new TypeError(o+" is ambiguous");t[s]=n}var i=e.length,a=e.charAt(0),l=Math.log(i)/Math.log(256),c=Math.log(256)/Math.log(i);function d(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;var r=0;if(" "!==e[r]){for(var n=0,o=0;e[r]===a;)n++,r++;for(var s=(e.length-r)*l+1>>>0,c=new Uint8Array(s);e[r];){var d=t[e.charCodeAt(r)];if(255===d)return;for(var u=0,p=s-1;(0!==d||u<o)&&-1!==p;p--,u++)d+=i*c[p]>>>0,c[p]=d%256>>>0,d=d/256>>>0;if(0!==d)throw new Error("Non-zero carry");o=u,r++}if(" "!==e[r]){for(var h=s-o;h!==s&&0===c[h];)h++;for(var g=new Uint8Array(n+(s-h)),m=n;h!==s;)g[m++]=c[h++];return g}}}return{encode:function(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===t.length)return"";for(var r=0,n=0,o=0,s=t.length;o!==s&&0===t[o];)o++,r++;for(var l=(s-o)*c+1>>>0,d=new Uint8Array(l);o!==s;){for(var u=t[o],p=0,h=l-1;(0!==u||p<n)&&-1!==h;h--,p++)u+=256*d[h]>>>0,d[h]=u%i>>>0,u=u/i>>>0;if(0!==u)throw new Error("Non-zero carry");n=p,o++}for(var g=l-n;g!==l&&0===d[g];)g++;for(var m=a.repeat(r);g<l;++g)m+=e.charAt(d[g]);return m},decodeUnsafe:d,decode:function(e){var t=d(e);if(t)return t;throw new Error("Non-base"+i+" character")}}}}}},{package:"@ensdomains/content-hash>cids>multibase>@multiformats/base-x",file:"node_modules/@multiformats/base-x/src/index.js"}],[238,{"fast-json-patch":3665,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("fast-json-patch"))&&n.__esModule?n:{default:n},s=e("lodash");r.default={version:18,migrate(e){const t=(0,s.cloneDeep)(e);t.meta.version=18;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map(e=>{if(!e.history||0===e.history.length){const t=function(e){const t={...e};return delete t.history,(0,s.cloneDeep)(t)}(e);return e.history=[t],e}const t=(r=e.history,r.map((e,t)=>0===t?e:function(e,t,r){const n=o.default.compare(e,t);return n[0]&&(r&&(n[0].note=r),n[0].timestamp=Date.now()),n}(r[t-1],e))).filter(e=>!Array.isArray(e)||e.length>0);var r;return e.history=t,e})}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #18${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/018.js"}],[239,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/transaction-controller"),o=e("lodash");r.default={version:19,migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=19;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map((e,t,r)=>{if(e.status!==n.TransactionStatus.submitted)return e;const o=function(e){const t=e.map(e=>{const{nonce:t}=e.txParams;return parseInt(t||"0x0",16)});return Math.max.apply(null,t)}(r.filter(e=>e.status===n.TransactionStatus.confirmed).filter(t=>t.txParams.from===e.txParams.from).filter(t=>t.metamaskNetworkId.from===e.metamaskNetworkId.from)),s=function(e,t){const r=e.map(e=>{const{nonce:t}=e.txParams;return parseInt(t,16)});let n=t;for(;r.includes(n);)n+=1;return n}(r.filter(e=>e.status===n.TransactionStatus.submitted).filter(t=>t.txParams.from===e.txParams.from).filter(t=>t.metamaskNetworkId.from===e.metamaskNetworkId.from),o),i=Math.max(s,o);return parseInt(e.txParams.nonce,16)>i+1&&(e.status=n.TransactionStatus.failed,e.err={message:"nonce too high",note:"migration 019 custom error"}),e})}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #19${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/019.js"}],[24,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){function n(e){return e.getRestricted({name:"AccountTreeController",allowedEvents:["AccountsController:accountAdded","AccountsController:accountRenamed","AccountsController:accountRemoved","AccountsController:selectedAccountChange"],allowedActions:["AccountsController:listMultichainAccounts","AccountsController:getAccount","AccountsController:getSelectedAccount","AccountsController:setSelectedAccount","SnapController:get","KeyringController:getState"]})}Object.defineProperty(r,"__esModule",{value:!0}),r.getAccountTreeControllerInitMessenger=function(e){return n(e)},r.getAccountTreeControllerMessenger=n}}},{package:"$root$",file:"app/scripts/controller-init/messengers/accounts/account-tree-controller-messenger.ts"}],[240,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:20,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=20;try{const e=function(e){const t=e;"metamask"in t&&!("firstTimeInfo"in t.metamask)&&(t.metamask.firstTimeInfo={version:"3.12.0",date:Date.now()});return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #20${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/020.js"}],[241,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:21,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=21;try{const e=function(e){const t=e;return delete t.BlacklistController,delete t.RecentBlocks,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #21${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/021.js"}],[2418,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.openrpcDocument=void 0,r.openrpcDocument={$schema:"https://meta.json-schema.tools/",$id:"https://meta.open-rpc.org/",title:"openrpcDocument",type:"object",required:["info","methods","openrpc"],additionalProperties:!1,patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}},properties:{openrpc:{title:"openrpc",type:"string",enum:["1.3.2","1.3.1","1.3.0","1.2.6","1.2.5","1.2.4","1.2.3","1.2.2","1.2.1","1.2.0","1.1.12","1.1.11","1.1.10","1.1.9","1.1.8","1.1.7","1.1.6","1.1.5","1.1.4","1.1.3","1.1.2","1.1.1","1.1.0","1.0.0","1.0.0-rc1","1.0.0-rc0"]},info:{$ref:"#/definitions/infoObject"},externalDocs:{$ref:"#/definitions/externalDocumentationObject"},servers:{title:"servers",type:"array",additionalItems:!1,items:{$ref:"#/definitions/serverObject"}},methods:{title:"methods",type:"array",additionalItems:!1,items:{title:"methodOrReference",oneOf:[{$ref:"#/definitions/methodObject"},{$ref:"#/definitions/referenceObject"}]}},components:{title:"components",type:"object",properties:{schemas:{title:"schemaComponents",type:"object",patternProperties:{"[0-z]+":{$ref:"#/definitions/JSONSchema"}}},links:{title:"linkComponents",type:"object",patternProperties:{"[0-z]+":{$ref:"#/definitions/linkObject"}}},errors:{title:"errorComponents",type:"object",patternProperties:{"[0-z]+":{$ref:"#/definitions/errorObject"}}},examples:{title:"exampleComponents",type:"object",patternProperties:{"[0-z]+":{$ref:"#/definitions/exampleObject"}}},examplePairings:{title:"examplePairingComponents",type:"object",patternProperties:{"[0-z]+":{$ref:"#/definitions/examplePairingObject"}}},contentDescriptors:{title:"contentDescriptorComponents",type:"object",patternProperties:{"[0-z]+":{$ref:"#/definitions/contentDescriptorObject"}}},tags:{title:"tagComponents",type:"object",patternProperties:{"[0-z]+":{$ref:"#/definitions/tagObject"}}}}},$schema:{title:"metaSchema",description:"JSON Schema URI (used by some editors)",type:"string",default:"https://meta.open-rpc.org/"}},definitions:{specificationExtension:{title:"specificationExtension"},JSONSchema:{$ref:"https://meta.json-schema.tools"},referenceObject:{title:"referenceObject",type:"object",additionalProperties:!1,required:["$ref"],properties:{$ref:{$ref:"https://meta.json-schema.tools/#/definitions/JSONSchemaObject/properties/$ref"}}},errorObject:{title:"errorObject",type:"object",description:"Defines an application level error.",additionalProperties:!1,required:["code","message"],properties:{code:{title:"errorObjectCode",description:"A Number that indicates the error type that occurred. This MUST be an integer. The error codes from and including -32768 to -32000 are reserved for pre-defined errors. These pre-defined errors SHOULD be assumed to be returned from any JSON-RPC api.",type:"integer"},message:{title:"errorObjectMessage",description:"A String providing a short description of the error. The message SHOULD be limited to a concise single sentence.",type:"string"},data:{title:"errorObjectData",description:"A Primitive or Structured value that contains additional information about the error. This may be omitted. The value of this member is defined by the Server (e.g. detailed error information, nested errors etc.)."}}},licenseObject:{title:"licenseObject",type:"object",additionalProperties:!1,properties:{name:{title:"licenseObjectName",type:"string"},url:{title:"licenseObjectUrl",type:"string"}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}},contactObject:{title:"contactObject",type:"object",additionalProperties:!1,properties:{name:{title:"contactObjectName",type:"string"},email:{title:"contactObjectEmail",type:"string"},url:{title:"contactObjectUrl",type:"string"}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}},infoObject:{title:"infoObject",type:"object",additionalProperties:!1,required:["title","version"],properties:{title:{title:"infoObjectProperties",type:"string"},description:{title:"infoObjectDescription",type:"string"},termsOfService:{title:"infoObjectTermsOfService",type:"string",format:"uri"},version:{title:"infoObjectVersion",type:"string"},contact:{$ref:"#/definitions/contactObject"},license:{$ref:"#/definitions/licenseObject"}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}},serverObject:{title:"serverObject",type:"object",required:["url"],additionalProperties:!1,properties:{url:{title:"serverObjectUrl",type:"string",format:"uri"},name:{title:"serverObjectName",type:"string"},description:{title:"serverObjectDescription",type:"string"},summary:{title:"serverObjectSummary",type:"string"},variables:{title:"serverObjectVariables",type:"object",patternProperties:{"[0-z]+":{title:"serverObjectVariable",type:"object",required:["default"],properties:{default:{title:"serverObjectVariableDefault",type:"string"},description:{title:"serverObjectVariableDescription",type:"string"},enum:{title:"serverObjectVariableEnum",type:"array",items:{title:"serverObjectVariableEnumItem",type:"string"}}}}}}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}},linkObject:{title:"linkObject",type:"object",additionalProperties:!1,properties:{name:{title:"linkObjectName",type:"string",minLength:1},summary:{title:"linkObjectSummary",type:"string"},method:{title:"linkObjectMethod",type:"string"},description:{title:"linkObjectDescription",type:"string"},params:{title:"linkObjectParams"},server:{title:"linkObjectServer",$ref:"#/definitions/serverObject"}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}},externalDocumentationObject:{title:"externalDocumentationObject",type:"object",additionalProperties:!1,description:"information about external documentation",required:["url"],properties:{description:{title:"externalDocumentationObjectDescription",type:"string"},url:{title:"externalDocumentationObjectUrl",type:"string",format:"uri"}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}},methodObject:{title:"methodObject",type:"object",required:["name","params"],additionalProperties:!1,properties:{name:{title:"methodObjectName",description:"The cannonical name for the method. The name MUST be unique within the methods array.",type:"string",minLength:1},description:{title:"methodObjectDescription",description:"A verbose explanation of the method behavior. GitHub Flavored Markdown syntax MAY be used for rich text representation.",type:"string"},summary:{title:"methodObjectSummary",description:"A short summary of what the method does.",type:"string"},servers:{title:"servers",type:"array",additionalItems:!1,items:{$ref:"#/definitions/serverObject"}},tags:{title:"methodObjectTags",type:"array",items:{title:"tagOrReference",oneOf:[{$ref:"#/definitions/tagObject"},{$ref:"#/definitions/referenceObject"}]}},paramStructure:{title:"methodObjectParamStructure",type:"string",description:"Format the server expects the params. Defaults to 'either'.",enum:["by-position","by-name","either"],default:"either"},params:{title:"methodObjectParams",type:"array",items:{title:"contentDescriptorOrReference",oneOf:[{$ref:"#/definitions/contentDescriptorObject"},{$ref:"#/definitions/referenceObject"}]}},result:{title:"methodObjectResult",oneOf:[{$ref:"#/definitions/contentDescriptorObject"},{$ref:"#/definitions/referenceObject"}]},errors:{title:"methodObjectErrors",description:"Defines an application level error.",type:"array",items:{title:"errorOrReference",oneOf:[{$ref:"#/definitions/errorObject"},{$ref:"#/definitions/referenceObject"}]}},links:{title:"methodObjectLinks",type:"array",items:{title:"linkOrReference",oneOf:[{$ref:"#/definitions/linkObject"},{$ref:"#/definitions/referenceObject"}]}},examples:{title:"methodObjectExamples",type:"array",items:{title:"examplePairingOrReference",oneOf:[{$ref:"#/definitions/examplePairingObject"},{$ref:"#/definitions/referenceObject"}]}},deprecated:{title:"methodObjectDeprecated",type:"boolean",default:!1},externalDocs:{$ref:"#/definitions/externalDocumentationObject"}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}},tagObject:{title:"tagObject",type:"object",additionalProperties:!1,required:["name"],properties:{name:{title:"tagObjectName",type:"string",minLength:1},description:{title:"tagObjectDescription",type:"string"},externalDocs:{$ref:"#/definitions/externalDocumentationObject"}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}},exampleObject:{title:"exampleObject",type:"object",required:["name","value"],properties:{summary:{title:"exampleObjectSummary",type:"string"},value:{title:"exampleObjectValue"},description:{title:"exampleObjectDescription",type:"string"},name:{title:"exampleObjectName",type:"string",minLength:1}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}},examplePairingObject:{title:"examplePairingObject",type:"object",required:["name","params"],properties:{name:{title:"examplePairingObjectName",type:"string",minLength:1},description:{title:"examplePairingObjectDescription",type:"string"},params:{title:"examplePairingObjectParams",type:"array",items:{title:"exampleOrReference",oneOf:[{$ref:"#/definitions/exampleObject"},{$ref:"#/definitions/referenceObject"}]}},result:{title:"examplePairingObjectResult",oneOf:[{$ref:"#/definitions/exampleObject"},{$ref:"#/definitions/referenceObject"}]}}},contentDescriptorObject:{title:"contentDescriptorObject",type:"object",additionalProperties:!1,required:["name","schema"],properties:{name:{title:"contentDescriptorObjectName",type:"string",minLength:1},description:{title:"contentDescriptorObjectDescription",type:"string"},summary:{title:"contentDescriptorObjectSummary",type:"string"},schema:{$ref:"#/definitions/JSONSchema"},required:{title:"contentDescriptorObjectRequired",type:"boolean",default:!1},deprecated:{title:"contentDescriptorObjectDeprecated",type:"boolean",default:!1}},patternProperties:{"^x-":{$ref:"#/definitions/specificationExtension"}}}}},r.default=r.openrpcDocument}}},{package:"@open-rpc/meta-schema",file:"node_modules/@open-rpc/meta-schema/index.js"}],[2419,{"@json-schema-tools/dereferencer":673,"@json-schema-tools/reference-resolver":677,"fast-safe-stringify":3667},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__assign||function(){return n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},n.apply(this,arguments)},o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))(function(o,s){function i(e){try{l(n.next(e))}catch(e){s(e)}}function a(e){try{l(n.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r(function(e){e(t)})).then(i,a)}l((n=n.apply(e,t||[])).next())})},s=this&&this.__generator||function(e,t){var r,n,o,s,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(a){return function(l){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;s&&(s=0,a[0]&&(i=0)),i;)try{if(r=1,n&&(o=2&a[0]?n.return:a[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,a[1])).done)return o;switch(n=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,n=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],n=0}finally{r=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.OpenRPCDocumentDereferencingError=void 0;var a=i(e("@json-schema-tools/dereferencer")),l=i(e("@json-schema-tools/reference-resolver")),c=i(e("fast-safe-stringify")),d=function(e){this.name="OpenRPCDocumentDereferencingError",this.message="The json schema provided cannot be dereferenced. Received Error: \n ".concat(e)};r.OpenRPCDocumentDereferencingError=d;var u=function(e,t,r){return o(void 0,void 0,void 0,function(){var n,o;return s(this,function(s){switch(s.label){case 0:if((n=e.$ref)===undefined)return[2,e];s.label=1;case 1:return s.trys.push([1,3,,4]),[4,r.resolve(n,t)];case 2:return[2,s.sent()];case 3:throw o=s.sent(),new d(["unable to eval pointer against OpenRPC Document.","error type: ".concat(o.name),"instance: ".concat(o.instance),"token: ".concat(o.token),"pointer: ".concat(n),"reference object: ".concat((0,c.default)(e))].join("\n"));case 4:return[2]}})})},p=function(e,t,r){return o(void 0,void 0,void 0,function(){var n,o,i,a,l,c;return s(this,function(s){switch(s.label){case 0:n=[],o=0,i=e,s.label=1;case 1:return o<i.length?(a=i[o],c=(l=n).push,[4,u(a,t,r)]):[3,4];case 2:c.apply(l,[s.sent()]),s.label=3;case 3:return o++,[3,1];case 4:return[2,n]}})})},h=function(e,t){return o(void 0,void 0,void 0,function(){var r,n,o;return s(this,function(s){switch(s.label){case 0:if(!0===e||!1===e)return[2,Promise.resolve(e)];t!==undefined&&(e.components={schemas:t}),r=new a.default(e),s.label=1;case 1:return s.trys.push([1,3,,4]),[4,r.resolve()];case 2:return!0!==(n=s.sent())&&!1!==n&&(delete n.components,delete e.components),[2,n];case 3:throw o=s.sent(),new d(["Unable to parse reference inside of JSONSchema",e.title?"Schema Title: ".concat(e.title):"","error message: ".concat(o.message),"schema in question: ".concat((0,c.default)(e))].join("\n"));case 4:return[2]}})})},g=function(e){return o(void 0,void 0,void 0,function(){var t,r,n,o,i,a,l;return s(this,function(s){switch(s.label){case 0:if(e.components===undefined)return[2,Promise.resolve(e)];if(e.components.contentDescriptors===undefined)return[2,Promise.resolve(e)];t=e.components.contentDescriptors,r=Object.keys(t),n={},e.components.schemas&&(n=e.components.schemas),o=0,i=r,s.label=1;case 1:return o<i.length?(a=i[o],l=t[a],[4,h(t[a].schema,n)]):[3,4];case 2:l.schema=s.sent(),s.label=3;case 3:return o++,[3,1];case 4:return[2,e]}})})},m=function(e,t,r){return o(void 0,void 0,void 0,function(){var n,o,i,a,l,c,d,g,m,f,C,y,v,b,w,k,S,T,M,A;return s(this,function(s){switch(s.label){case 0:return n=e,e.$ref===undefined?[3,2]:[4,u({$ref:e.$ref},t,r)];case 1:n=s.sent(),s.label=2;case 2:return n.tags===undefined?[3,4]:(o=n,[4,p(n.tags,t,r)]);case 3:o.tags=s.sent(),s.label=4;case 4:return n.errors===undefined?[3,6]:(i=n,[4,p(n.errors,t,r)]);case 5:i.errors=s.sent(),s.label=6;case 6:return n.links===undefined?[3,8]:(a=n,[4,p(n.links,t,r)]);case 7:a.links=s.sent(),s.label=8;case 8:return n.examples===undefined?[3,14]:(l=n,[4,p(n.examples,t,r)]);case 9:l.examples=s.sent(),c=0,d=n.examples,s.label=10;case 10:return c<d.length?(g=d[c],m=g,[4,p(g.params,t,r)]):[3,14];case 11:return m.params=s.sent(),g.result===undefined?[3,13]:(f=g,[4,u(g.result,t,r)]);case 12:f.result=s.sent(),s.label=13;case 13:return c++,[3,10];case 14:return C=n,[4,p(n.params,t,r)];case 15:return C.params=s.sent(),n.result===undefined?[3,17]:(y=n,[4,u(n.result,t,r)]);case 16:y.result=s.sent(),s.label=17;case 17:v={},t.components&&t.components.schemas&&(v=t.components.schemas),b=n.params,w=0,k=b,s.label=18;case 18:return w<k.length?(S=k[w],T=S,[4,h(S.schema,v)]):[3,21];case 19:T.schema=s.sent(),s.label=20;case 20:return w++,[3,18];case 21:return n.result===undefined?[3,23]:(M=n.result,A=M,[4,h(M.schema,v)]);case 22:A.schema=s.sent(),s.label=23;case 23:return[2,n]}})})};r.default=function(e,t){return void 0===t&&(t=l.default),o(this,void 0,void 0,function(){var r,i,a,l,c,d,u;return s(this,function(p){switch(p.label){case 0:return r=n({},e),[4,(f=r,o(void 0,void 0,void 0,function(){var e,t,r,n,o,i,a;return s(this,function(s){switch(s.label){case 0:if(f.components===undefined)return[2,Promise.resolve(f)];if(f.components.schemas===undefined)return[2,Promise.resolve(f)];e=f.components.schemas,t=Object.keys(e),r=0,n=t,s.label=1;case 1:return r<n.length?(o=n[r],i=e,a=o,[4,h(e[o],e)]):[3,4];case 2:i[a]=s.sent(),s.label=3;case 3:return r++,[3,1];case 4:return[2,f]}})}))];case 1:return r=p.sent(),[4,g(r)];case 2:r=p.sent(),i=[],a=0,l=r.methods,p.label=3;case 3:return a<l.length?(c=l[a],u=(d=i).push,[4,m(c,r,t)]):[3,6];case 4:u.apply(d,[p.sent()]),p.label=5;case 5:return a++,[3,3];case 6:return r.methods=i,[2,r]}var f})})}}}},{package:"@open-rpc/schema-utils-js",file:"node_modules/@open-rpc/schema-utils-js/build/dereference-document.js"}],[242,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/transaction-controller"),o=e("lodash");r.default={version:22,migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=22;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map(e=>(e.status!==n.TransactionStatus.submitted||e.submittedTime||(e.submittedTime=(new Date).getTime()),e))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #22${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/022.js"}],[2420,{"./dereference-document":2419,"./validate-open-rpc-document":2421,"@json-schema-tools/reference-resolver":677,"@json-schema-tools/reference-resolver/build/reference-resolver":678,"is-url":3907},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__assign||function(){return n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},n.apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,o)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&o(t,e,r);return s(t,e),t},a=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))(function(o,s){function i(e){try{l(n.next(e))}catch(e){s(e)}}function a(e){try{l(n.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r(function(e){e(t)})).then(i,a)}l((n=n.apply(e,t||[])).next())})},l=this&&this.__generator||function(e,t){var r,n,o,s,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(a){return function(l){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;s&&(s=0,a[0]&&(i=0)),i;)try{if(r=1,n&&(o=2&a[0]?n.return:a[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,a[1])).done)return o;switch(n=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,n=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],n=0}finally{r=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,l])}}},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.makeCustomResolver=void 0;var d=c(e("./dereference-document")),u=i(e("./validate-open-rpc-document")),p=c(e("@json-schema-tools/reference-resolver")),h=e("is-url"),g=c(e("@json-schema-tools/reference-resolver/build/reference-resolver")),m={dereference:!0,validate:!0};r.makeCustomResolver=function(e){return new g.default(e)},r.default=function(e,t){return function(r,o){return void 0===r&&(r="./openrpc.json"),void 0===o&&(o=m),a(this,void 0,void 0,function(){var s,i,a,c;return l(this,function(l){switch(l.label){case 0:return i=n(n({},m),o),"string"==typeof r?[3,1]:(s=r,[3,6]);case 1:return function(e){try{return JSON.parse(e),!0}catch(e){return!1}}(r)?(s=JSON.parse(r),[3,6]):[3,2];case 2:return h(r)?[4,e(r)]:[3,4];case 3:return s=l.sent(),[3,6];case 4:return[4,t(r)];case 5:s=l.sent(),l.label=6;case 6:if(i.validate&&(c=(0,u.default)(s))instanceof u.OpenRPCDocumentValidationError)throw c;return a=s,i.dereference?i.resolver===undefined?[3,8]:[4,(0,d.default)(s,i.resolver)]:[3,10];case 7:return a=l.sent(),[3,10];case 8:return[4,(0,d.default)(s,p.default)];case 9:a=l.sent(),l.label=10;case 10:if(i.validate&&(c=(0,u.default)(a))instanceof u.OpenRPCDocumentValidationError)throw c;return[2,a]}})})}}}}},{package:"@open-rpc/schema-utils-js",file:"node_modules/@open-rpc/schema-utils-js/build/parse-open-rpc-document.js"}],[2421,{"@json-schema-tools/meta-schema":674,"@open-rpc/meta-schema":2418,ajv:3058},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__assign||function(){return n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},n.apply(this,arguments)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.OpenRPCDocumentValidationError=void 0;var s=o(e("@open-rpc/meta-schema")),i=o(e("ajv")),a=o(e("@json-schema-tools/meta-schema")),l=function(e){this.name="OpenRPCDocumentDereferencingError",this.message=["Error validating OpenRPC Document against @open-rpc/meta-schema.","The errors found are as follows:",JSON.stringify(e,undefined,"  ")].join("\n")};r.OpenRPCDocumentValidationError=l,r.default=function(e){var t=new i.default;t.addSchema(a.default,"https://meta.json-schema.tools");var r=n({},s.default);delete r.definitions.JSONSchema.$id,delete r.definitions.JSONSchema.$schema,delete r.$schema,delete r.$id;try{t.validate(r,e)}catch(e){throw new Error(["schema-utils-js: Internal Error","-----",e,"-----","If you see this report it: https://github.com/open-rpc/schema-utils-js/issues"].join("\n"))}return!t.errors||new l(t.errors)}}}},{package:"@open-rpc/schema-utils-js",file:"node_modules/@open-rpc/schema-utils-js/build/validate-open-rpc-document.js"}],[243,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("@metamask/transaction-controller");r.default={version:23,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=23;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;if(e.length<=40)return t;const r=e.reverse();let n=!0;for(;r.length>40&&n;){const e=r.findIndex(e=>e.status===o.TransactionStatus.failed||e.status===o.TransactionStatus.rejected||e.status===o.TransactionStatus.confirmed||e.status===o.TransactionStatus.dropped);e<0?n=!1:r.splice(e,1)}t.TransactionController.transactions=r.reverse()}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #23${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/023.js"}],[2439,{assert:3314,buffer:3318,"component-type":3386,"join-component":3915},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(r){(function(){var n=e("component-type"),o=e("join-component"),s=e("assert");t.exports=function(e,t){switch(a(e),t=t||e.type,s(t,"You must pass an event type."),t){case"track":return function(e){s(e.anonymousId||e.userId,'You must pass either an "anonymousId" or a "userId".'),s(e.event,'You must pass an "event".')}(e);case"group":return function(e){s(e.anonymousId||e.userId,'You must pass either an "anonymousId" or a "userId".'),s(e.groupId,'You must pass a "groupId".')}(e);case"identify":case"page":case"screen":return function(e){s(e.anonymousId||e.userId,'You must pass either an "anonymousId" or a "userId".')}(e);case"alias":return function(e){s(e.userId,'You must pass a "userId".'),s(e.previousId,'You must pass a "previousId".')}(e);default:s(0,'Invalid event type: "'+t+'"')}};var i={anonymousId:["string","number"],category:"string",context:"object",event:"string",groupId:["string","number"],integrations:"object",name:"string",previousId:["string","number"],timestamp:"date",userId:["string","number"],type:"string"};function a(e){s("object"===n(e),"You must pass a message object.");var t=JSON.stringify(e);for(var a in s(r.byteLength(t,"utf8")<32768,"Your message must be < 32kb."),i){var l=e[a];if(l){var c=i[a];"array"!==n(c)&&(c=[c]);var d="object"===c[0]?"an":"a";s(c.some(function(e){return n(l)===e}),'"'+a+'" must be '+d+" "+o(c,"or")+".")}}}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@segment/loosely-validate-event",file:"node_modules/@segment/loosely-validate-event/index.js"}],[244,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("@metamask/transaction-controller");r.default={version:24,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=24;const r=function(e){const t=e;if(!t.TransactionController)return t;const{transactions:r}=t.TransactionController;return t.TransactionController.transactions=r.map((e,t)=>(e.status===o.TransactionStatus.unapproved&&e.txParams&&e.txParams.from&&(e.txParams.from=e.txParams.from.toLowerCase()),e)),t}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/024.js"}],[245,{"../lib/util":220,"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("@metamask/transaction-controller"),s=e("../lib/util");r.default={version:25,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=25;const r=function(e){const t=e;if(t.TransactionController&&t.TransactionController.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map(e=>(e.status!==o.TransactionStatus.unapproved||(e.txParams=function(e){const t={from:e=>(0,s.addHexPrefix)(e).toLowerCase(),to:()=>(0,s.addHexPrefix)(e.to).toLowerCase(),nonce:e=>(0,s.addHexPrefix)(e),value:e=>(0,s.addHexPrefix)(e),data:e=>(0,s.addHexPrefix)(e),gas:e=>(0,s.addHexPrefix)(e),gasPrice:e=>(0,s.addHexPrefix)(e)},r={};return Object.keys(t).forEach(n=>{e[n]&&(r[n]=t[n](e[n]))}),r}(e.txParams)),e))}return t}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/025.js"}],[246,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:26,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=26;try{const e=t.data;t.data=function(e){if(!e.KeyringController||!e.PreferencesController)return e;if(!e.KeyringController.walletNicknames)return e;return e.PreferencesController.identities=Object.keys(e.KeyringController.walletNicknames).reduce((t,r)=>(t[r]={name:e.KeyringController.walletNicknames[r],address:r},t),{}),delete e.KeyringController.walletNicknames,e}(e)}catch(e){return console.warn(`MetaMask Migration #26${e.stack}`),Promise.reject(e)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/026.js"}],[247,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("@metamask/transaction-controller");r.default={version:27,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=27;const r=function(e){const t=e;if(t.TransactionController&&t.TransactionController.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.filter(e=>e.status!==o.TransactionStatus.rejected)}return t}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/027.js"}],[2471,{"@metamask/eth-sig-util":1406,tslib:4871},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.transformTypedData=void 0;const n=e("tslib").__importStar(e("@metamask/eth-sig-util"));function o(e){switch(Object.prototype.toString.call(e)){case"[object Object]":{const t=Object.keys(e).map(t=>[t,o(e[t])]);return Object.fromEntries(t)}case"[object Array]":return e.map(e=>o(e));case"[object BigInt]":return e.toString();default:return e}}r.transformTypedData=(e,t)=>{if(!t)throw new Error("Trezor: Only version 4 of typed data signing is supported");const r=n.SignTypedDataVersion.V4,{types:s,primaryType:i,domain:a,message:l}=n.TypedDataUtils.sanitizeData(e),c=n.TypedDataUtils.hashStruct("EIP712Domain",o(a),s,r).toString("hex");let d=null;return"EIP712Domain"!==i&&(d=n.TypedDataUtils.hashStruct(i,o(l),s,r).toString("hex")),Object.assign({domain_separator_hash:c,message_hash:d},e)},r.default=r.transformTypedData}}},{package:"@metamask/eth-trezor-keyring>@trezor/connect-plugin-ethereum",file:"node_modules/@trezor/connect-plugin-ethereum/lib/index.js"}],[248,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:28,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=28;const r=function(e){const t=e;if(t.PreferencesController&&t.PreferencesController.tokens&&t.PreferencesController.identities){const{identities:e,tokens:r}=t.PreferencesController;t.PreferencesController.accountTokens={},Object.keys(e).forEach(e=>{t.PreferencesController.accountTokens[e]={mainnet:r}}),t.PreferencesController.tokens=[]}return t}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/028.js"}],[249,{"./fail-tx":423,"@metamask/transaction-controller":2316},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=e("@metamask/transaction-controller"),s=(n=e("./fail-tx"))&&n.__esModule?n:{default:n};r.default={version:29,migrate:(0,s.default)(29,"Stuck in approved state for too long.",e=>{const t=e.status===o.TransactionStatus.approved,r=e.submittedTime,n=Date.now();return t&&n-r>432e5})}}}},{package:"$root$",file:"app/scripts/migrations/029.js"}],[25,{"./account-tree-controller-messenger":24,"./institutional-snap-controller-messenger":26,"./multichain-account-service-messenger":27},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"getAccountTreeControllerInitMessenger",{enumerable:!0,get:function(){return n.getAccountTreeControllerInitMessenger}}),Object.defineProperty(r,"getAccountTreeControllerMessenger",{enumerable:!0,get:function(){return n.getAccountTreeControllerMessenger}}),Object.defineProperty(r,"getInstitutionalSnapControllerMessenger",{enumerable:!0,get:function(){return s.getInstitutionalSnapControllerMessenger}}),Object.defineProperty(r,"getMultichainAccountServiceInitMessenger",{enumerable:!0,get:function(){return o.getMultichainAccountServiceInitMessenger}}),Object.defineProperty(r,"getMultichainAccountServiceMessenger",{enumerable:!0,get:function(){return o.getMultichainAccountServiceMessenger}});var n=e("./account-tree-controller-messenger"),o=e("./multichain-account-service-messenger"),s=e("./institutional-snap-controller-messenger")}}},{package:"$root$",file:"app/scripts/controller-init/messengers/accounts/index.ts"}],[250,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:30,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=30;const r=function(e){const t=e;if(e.PreferencesController){const{frequentRpcListDetail:e}=t.PreferencesController;e&&(e.forEach((t,r)=>{Boolean(t.chainId)&&Number.isNaN(parseInt(t.chainId))&&delete e[r].chainId}),t.PreferencesController.frequentRpcListDetail=e)}e.NetworkController&&(t.NetworkController.network&&Number.isNaN(parseInt(t.NetworkController.network))&&delete t.NetworkController.network,t.NetworkController.provider&&t.NetworkController.provider.chainId&&Number.isNaN(parseInt(t.NetworkController.provider.chainId))&&delete t.NetworkController.provider.chainId);return t}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/030.js"}],[251,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:31,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=31;const r=function(e){const{KeyringController:t,PreferencesController:r}=e;if(t&&r){const{vault:e}=t;r.completedOnboarding=Boolean(e)}return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/031.js"}],[252,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:32,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=32;const r=t.data;return t.data=function(e){const{PreferencesController:t}=e;if(t){const{betaUI:e}=t.featureFlags||{};t.completedUiMigration=e}return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/032.js"}],[253,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:33,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=33;const r=function(e){const t=e;e.NoticeController&&delete t.NoticeController;return t}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/033.js"}],[254,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:34,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=34;const r=t.data;return t.data=function(e){const{PreferencesController:t}=e;if(t){const e=t.featureFlags||{};e.privacyMode||void 0!==t.migratedPrivacyMode||(t.migratedPrivacyMode=!0,e.privacyMode=!0)}return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/034.js"}],[255,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:35,async migrate(e){const t=(0,n.cloneDeep)(e);return t.meta.version=35,t.data=function(e){e.PreferencesController&&e.PreferencesController.seedWords!==undefined&&delete e.PreferencesController.seedWords;return e}(t.data),t}}}}},{package:"$root$",file:"app/scripts/migrations/035.js"}],[256,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:36,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=36;const r=t.data;return t.data=function(e){const{PreferencesController:t}=e;if(t){const e=t.featureFlags||{};void 0!==e.privacyMode&&delete e.privacyMode}return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/036.js"}],[257,{"@metamask/controller-utils":1315,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("@metamask/controller-utils");r.default={version:37,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=37;const r=t.data;return t.data=function(e){if(e.AddressBookController){const t=e.AddressBookController.addressBook,r=new Set,n={};Object.values(t).forEach(e=>{r.add(e.chainId)});for(const e of r.values()){n[e]={};for(const r in t)t[r].chainId===e&&(t[r].isEns=!1,(0,o.normalizeEnsName)(t[r].name)&&(t[r].isEns=!0),n[e][r]=t[r])}e.AddressBookController.addressBook=n}return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/037.js"}],[258,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:38,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=38;const r=t.data;return t.data=function(e){const{ABTestController:t={}}=e,{abTests:r={}}=t;if(r.fullScreenVsPopup)return e;return{...e,ABTestController:{...t,abTests:{...r,fullScreenVsPopup:"control"}}}}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/038.js"}],[259,{"../../../shared/modules/hexstring-utils":5089,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("../../../shared/modules/hexstring-utils");const s="SAI";function i(e={}){return e&&"object"==typeof e&&"DAI"===e.symbol&&"0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359"===(0,o.toChecksumHexAddress)(e.address)}r.default={version:39,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=39;const r=t.data;return t.data=function(e){const{PreferencesController:t}=e;if(t){const e=t.tokens||[];if(Array.isArray(e))for(const t of e)i(t)&&(t.symbol=s);const r=t.accountTokens||{};if(r&&"object"==typeof r)for(const e of Object.keys(r)){const t=r[e];if(t&&"object"==typeof t)for(const e of Object.keys(t)){const r=t[e];if(Array.isArray(r))for(const e of r)i(e)&&(e.symbol=s)}}}return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/039.js"}],[26,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getInstitutionalSnapControllerMessenger=function(e){return e.getRestricted({name:"InstitutionalSnapController",allowedActions:["AccountsController:getAccountByAddress","SnapController:handleRequest","TransactionController:updateCustodialTransaction"],allowedEvents:[]})}}}},{package:"$root$",file:"app/scripts/controller-init/messengers/accounts/institutional-snap-controller-messenger.ts"}],[260,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:40,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=40;const r=t.data;return t.data=function(e){return delete e.ProviderApprovalController,e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/040.js"}],[261,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:41,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=41;const r=t.data;return t.data=function(e){e.PreferencesController&&e.PreferencesController.preferences&&(e.PreferencesController.preferences.autoLockTimeLimit=e.PreferencesController.preferences.autoLogoutTimeLimit,delete e.PreferencesController.preferences.autoLogoutTimeLimit);return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/041.js"}],[262,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:42,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=42;const r=t.data;return t.data=function(e){e.AppStateController?e.AppStateController.connectedStatusPopoverHasBeenShown=!1:e.AppStateController={connectedStatusPopoverHasBeenShown:!1};return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/042.js"}],[263,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:43,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=43;const r=t.data;return t.data=function(e){var t;null!=e&&null!==(t=e.PreferencesController)&&void 0!==t&&t.currentAccountTab&&delete e.PreferencesController.currentAccountTab;return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/043.js"}],[264,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:44,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=44;const r=t.data;return t.data=function(e){var t;void 0!==(null==e||null===(t=e.AppStateController)||void 0===t?void 0:t.mkrMigrationReminderTimestamp)&&delete e.AppStateController.mkrMigrationReminderTimestamp;return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/044.js"}],[265,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:45,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=45;const r=t.data;return t.data=function(e){var t;o.includes(null==e||null===(t=e.PreferencesController)||void 0===t?void 0:t.ipfsGateway)&&(e.PreferencesController.ipfsGateway="dweb.link");return e}(r),t}};const o=["ipfs.io","ipfs.dweb.link"]}}},{package:"$root$",file:"app/scripts/migrations/045.js"}],[266,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:46,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=46;const r=t.data;return t.data=function(e){void 0!==(null==e?void 0:e.ABTestController)&&delete e.ABTestController;return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/046.js"}],[267,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:47,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=47;const r=t.data;return t.data=function(e){var t;const r=null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions;Array.isArray(r)&&r.forEach(e=>{"number"==typeof e.metamaskNetworkId&&(e.metamaskNetworkId=e.metamaskNetworkId.toString())});return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/047.js"}],[268,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:48,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=48;const r=t.data;return t.data=function(e={}){var t,r,n,i,a,l,c,d;null===(t=e.NetworkController)||void 0===t||delete t.settings;const u=(null===(r=e.NetworkController)||void 0===r?void 0:r.provider)||{};if(("rpc"!==u.type||"string"==typeof u.chainId&&s.test(u.chainId))&&"localhost"!==u.type){if(null!==(n=e.NetworkController)&&void 0!==n&&n.provider){var p;if("rpcTarget"in e.NetworkController.provider){const t=e.NetworkController.provider.rpcTarget;e.NetworkController.provider.rpcUrl=t}null===(p=e.NetworkController)||void 0===p||null===(p=p.provider)||void 0===p||delete p.rpcTarget}}else e.NetworkController.provider={type:"rinkeby",rpcUrl:"",chainId:"0x4",nickname:"",rpcPrefs:{},ticker:"ETH"};e.PreferencesController||(e.PreferencesController={});e.PreferencesController.frequentRpcListDetail||(e.PreferencesController.frequentRpcListDetail=[]);e.PreferencesController.frequentRpcListDetail.unshift({rpcUrl:"http://localhost:8545",chainId:"0x539",ticker:"ETH",nickname:"Localhost 8545",rpcPrefs:{}}),null===(i=e.CachedBalancesController)||void 0===i||delete i.cachedBalances;const h=null===(a=e.TransactionController)||void 0===a?void 0:a.transactions;Array.isArray(h)&&h.forEach(e=>{const t=null==e?void 0:e.metamaskNetworkId;"string"==typeof t&&o.test(t)&&(e.metamaskNetworkId=parseInt(t,16).toString(10))});const g=(null===(l=e.AddressBookController)||void 0===l?void 0:l.addressBook)||{};Object.keys(g).forEach(e=>{if(/^\d+$/iu.test(e)){const t=`0x${parseInt(e,10).toString(16)}`;!function(e,t){Object.values(e).forEach(e=>{e&&"object"==typeof e&&(e.chainId=t)})}(g[e],t),g[t]?function(e,t,r){const n=e[t]||{},o={...e[r]};Object.keys(n).forEach(e=>{if(o[e]&&"object"==typeof o[e]){const t={};new Set([...Object.keys(o[e]),...Object.keys(n[e]||{})]).forEach(r=>{var s;t[r]=o[e][r]||(null===(s=n[e])||void 0===s?void 0:s[r])||""}),o[e]=t}else n[e]&&"object"==typeof n[e]&&(o[e]=n[e])}),e[r]=o}(g,e,t):g[t]=g[e],delete g[e]}}),null===(c=e.IncomingTransactionsController)||void 0===c||null===(c=c.incomingTxLastFetchedBlocksByNetwork)||void 0===c||delete c.localhost;const m=null===(d=e.PreferencesController)||void 0===d?void 0:d.accountTokens;m&&Object.keys(m).forEach(e=>{var t,r;const n=(null===(t=m[e])||void 0===t?void 0:t.localhost)||[];if(n.length>0){const t=m[e].rpc||[];t.length>0?m[e].rpc=function(e,t){const r=s(e),n=s(t),o=[];return new Set([...Object.keys(r),...Object.keys(n)]).forEach(e=>{o.push({...r[e],...n[e]})}),o;function s(e){return e.reduce((e,t)=>(null!=t&&t.address&&"string"==typeof(null==t?void 0:t.address)&&(e[t.address]=t),e),{})}}(n,t):m[e].rpc=n}null===(r=m[e])||void 0===r||delete r.localhost});return e}(r),t}};const o=/^0x[0-9a-f]+$/iu,s=/^0x[1-9a-f]+[0-9a-f]*$/iu}}},{package:"$root$",file:"app/scripts/migrations/048.js"}],[269,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:49,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=49;const r=t.data;return t.data=function(e={}){if(e.PreferencesController){const{metaMetricsId:t,participateInMetaMetrics:r,metaMetricsSendCount:n}=e.PreferencesController;e.MetaMetricsController=e.MetaMetricsController??{},t!==undefined&&(e.MetaMetricsController.metaMetricsId=t,delete e.PreferencesController.metaMetricsId),r!==undefined&&(e.MetaMetricsController.participateInMetaMetrics=r,delete e.PreferencesController.participateInMetaMetrics),n!==undefined&&(e.MetaMetricsController.metaMetricsSendCount=n,delete e.PreferencesController.metaMetricsSendCount)}return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/049.js"}],[27,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){function n(e){return e.getRestricted({name:"MultichainAccountService",allowedEvents:["KeyringController:stateChange","AccountsController:accountAdded","AccountsController:accountRemoved"],allowedActions:["AccountsController:listMultichainAccounts","AccountsController:getAccountByAddress","AccountsController:getAccount","SnapController:handleRequest","KeyringController:getState","KeyringController:withKeyring"]})}Object.defineProperty(r,"__esModule",{value:!0}),r.getMultichainAccountServiceInitMessenger=function(e){return n(e)},r.getMultichainAccountServiceMessenger=n}}},{package:"$root$",file:"app/scripts/controller-init/messengers/accounts/multichain-account-service-messenger.ts"}],[270,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");const o=["METASWAP_GAS_PRICE_ESTIMATES_LAST_RETRIEVED","METASWAP_GAS_PRICE_ESTIMATES","cachedFetch","BASIC_PRICE_ESTIMATES_LAST_RETRIEVED","BASIC_PRICE_ESTIMATES","BASIC_GAS_AND_TIME_API_ESTIMATES","BASIC_GAS_AND_TIME_API_ESTIMATES_LAST_RETRIEVED","GAS_API_ESTIMATES_LAST_RETRIEVED","GAS_API_ESTIMATES"];r.default={version:50,async migrate(e){const t=(0,n.cloneDeep)(e);return t.meta.version=50,o.forEach(e=>{var t;return null===(t=window.localStorage)||void 0===t?void 0:t.removeItem(e)}),t}}}}},{package:"$root$",file:"app/scripts/migrations/050.js"}],[271,{"../../../shared/constants/network":4992,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("../../../shared/constants/network");r.default={version:51,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=51;const r=t.data;return t.data=function(e){var t,r;const{chainId:n,type:s}=(null==e||null===(t=e.NetworkController)||void 0===t?void 0:t.provider)||{},i=null===(r=o.BUILT_IN_NETWORKS[s])||void 0===r?void 0:r.chainId;i&&n!==i&&(e.NetworkController.provider.chainId=i);return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/051.js"}],[272,{"../../../shared/constants/network":4992,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("../../../shared/constants/network");r.default={version:52,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=52;const r=t.data;return t.data=function(e={}){if(e.PreferencesController){const{accountTokens:t,accountHiddenTokens:r,frequentRpcListDetail:n}=e.PreferencesController,s={},i={};if(t&&Object.keys(t).length>0){for(const e of Object.keys(t)){s[e]={},t[e][o.NETWORK_TYPES.RPC]&&n.forEach(r=>{s[e][r.chainId]=t[e][o.NETWORK_TYPES.RPC]});for(const r of Object.keys(t[e]))switch(r){case o.NETWORK_TYPES.MAINNET:s[e][o.CHAIN_IDS.MAINNET]=t[e][o.NETWORK_TYPES.MAINNET];break;case"ropsten":s[e]["0x3"]=t[e].ropsten;break;case"rinkeby":s[e]["0x4"]=t[e].rinkeby;break;case o.NETWORK_TYPES.GOERLI:s[e][o.CHAIN_IDS.GOERLI]=t[e][o.NETWORK_TYPES.GOERLI];break;case"kovan":s[e]["0x2a"]=t[e].kovan}}e.PreferencesController.accountTokens=s}if(r&&Object.keys(r).length>0){for(const e of Object.keys(r)){i[e]={},r[e][o.NETWORK_TYPES.RPC]&&n.forEach(t=>{i[e][t.chainId]=r[e][o.NETWORK_TYPES.RPC]});for(const t of Object.keys(r[e]))switch(t){case o.NETWORK_TYPES.MAINNET:i[e][o.CHAIN_IDS.MAINNET]=r[e][o.NETWORK_TYPES.MAINNET];break;case"ropsten":i[e]["0x3"]=r[e].ropsten;break;case"rinkeby":i[e]["0x4"]=r[e].rinkeby;break;case o.NETWORK_TYPES.GOERLI:i[e][o.CHAIN_IDS.GOERLI]=r[e][o.NETWORK_TYPES.GOERLI];break;case"kovan":i[e]["0x2a"]=r[e].kovan}}e.PreferencesController.accountHiddenTokens=i}}return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/052.js"}],[273,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("@metamask/transaction-controller");r.default={version:53,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=53;const r=t.data;return t.data=function(e){var t,r;const n=null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions,s=null==e||null===(r=e.IncomingTransactionsController)||void 0===r?void 0:r.incomingTransactions;Array.isArray(n)&&n.forEach(e=>{e&&(e.type!==o.TransactionType.retry&&e.type!==o.TransactionType.cancel&&(e.type=e.transactionCategory),delete e.transactionCategory)});if(s){Object.entries(s).forEach(([t,r])=>{r&&(delete r.transactionCategory,e.IncomingTransactionsController.incomingTransactions[t]={...r,type:o.TransactionType.incoming})})}return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/053.js"}],[274,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");function o(e){return"number"==typeof e||"string"==typeof e&&e.match(/^(0x)?\d+$/u)}r.default={version:54,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=54;const r=function(e){const t=e;if(!t.PreferencesController)return t;const r=t.PreferencesController.tokens||[],n=r.filter(({decimals:e})=>o(e));for(const e of n)"string"==typeof e.decimals&&(e.decimals=parseInt(e.decimals));t.PreferencesController.tokens=n;const{accountTokens:s}=t.PreferencesController;if(s&&"object"==typeof s)for(const e of Object.keys(s)){const t=s[e];if(t&&"object"==typeof t)for(const e of Object.keys(t)){const r=(t[e]||[]).filter(({decimals:e})=>o(e));for(const e of r)"string"==typeof e.decimals&&(e.decimals=parseInt(e.decimals));t[e]=r}}return t.PreferencesController.accountTokens=s,t}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/054.js"}],[275,{"../../../shared/constants/network":4992,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("../../../shared/constants/network");r.default={version:55,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=55;const r=t.data;return t.data=function(e){var t;null!=e&&null!==(t=e.IncomingTransactionsController)&&void 0!==t&&t.incomingTxLastFetchedBlocksByNetwork&&(e.IncomingTransactionsController.incomingTxLastFetchedBlockByChainId=(0,n.mapKeys)(e.IncomingTransactionsController.incomingTxLastFetchedBlocksByNetwork,(e,t)=>{var r;return(null===(r=o.BUILT_IN_NETWORKS[t])||void 0===r?void 0:r.chainId)??s}),delete e.IncomingTransactionsController.incomingTxLastFetchedBlockByChainId[s],delete e.IncomingTransactionsController.incomingTxLastFetchedBlocksByNetwork);return e}(r),t}};const s="UNKNOWN";o.BUILT_IN_NETWORKS.rinkeby={networkId:"4",chainId:"0x4",ticker:"ETH"},o.BUILT_IN_NETWORKS.ropsten={networkId:"3",chainId:"0x3",ticker:"ETH"},o.BUILT_IN_NETWORKS.kovan={networkId:"42",chainId:"0x2a",ticker:"ETH"}}}},{package:"$root$",file:"app/scripts/migrations/055.js"}],[276,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:56,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=56;const{PreferencesController:r}=t.data;return Array.isArray(null==r?void 0:r.tokens)&&(r.tokens=r.tokens.filter(({address:e})=>e)),null!=r&&r.accountTokens&&"object"==typeof r.accountTokens&&Object.keys(r.accountTokens).forEach(e=>{Object.keys(r.accountTokens[e]).forEach(t=>{r.accountTokens[e][t]=r.accountTokens[e][t].filter(({address:e})=>e)})}),null!=r&&r.assetImages&&"undefined"in r.assetImages&&delete r.assetImages.undefined,t}}}}},{package:"$root$",file:"app/scripts/migrations/056.js"}],[277,{"../../../shared/modules/random-id":5095,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=e("lodash"),s=(n=e("../../../shared/modules/random-id"))&&n.__esModule?n:{default:n};r.default={version:57,async migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=57;const r=t.data;return t.data=function(e){var t;null!=e&&null!==(t=e.TransactionController)&&void 0!==t&&t.transactions&&Array.isArray(e.TransactionController.transactions)&&!e.TransactionController.transactions.some(e=>"object"!=typeof e||void 0===e.txParams)&&(e.TransactionController.transactions=(0,o.keyBy)(e.TransactionController.transactions,e=>(void 0!==e.id&&null!==e.id||(e.id=(0,s.default)()),e.id)));return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/057.js"}],[278,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:58,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=58;const r=t.data;return t.data=function(e){var t;return null===(t=e.AppStateController)||void 0===t||delete t.swapsWelcomeMessageHasBeenShown,e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/058.js"}],[279,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("@metamask/transaction-controller");r.default={version:59,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=59;const r=t.data;return t.data=function(e){var t;const r=null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions;if((0,n.isPlainObject)(r)){const t=(0,n.groupBy)(Object.values(r),e=>{var t;return`${null===(t=e.txParams)||void 0===t?void 0:t.nonce}-${e.chainId??e.metamaskNetworkId}`}),s=(0,n.pickBy)(t,e=>e.some(e=>e.type!==o.TransactionType.cancel&&e.type!==o.TransactionType.retry));e.TransactionController.transactions=(0,n.keyBy)((0,n.concat)(...Object.values(s)),e=>e.id)}return e}(r),t}}}}},{package:"$root$",file:"app/scripts/migrations/059.js"}],[28,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getAssetsContractControllerMessenger=function(e){return e.getRestricted({name:"AssetsContractController",allowedActions:["NetworkController:getNetworkClientById","NetworkController:getNetworkConfigurationByNetworkClientId","NetworkController:getSelectedNetworkClient","NetworkController:getState"],allowedEvents:["PreferencesController:stateChange","NetworkController:networkDidChange"]})}}}},{package:"$root$",file:"app/scripts/controller-init/messengers/assets/assets-contract-controller-messenger.ts"}],[280,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");const o="2020-08-31";r.default={version:60,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=60;const r=function(e){var t;const r=null==e||null===(t=e.NotificationController)||void 0===t?void 0:t.notifications;var s;(0,n.isPlainObject)(r)&&(null===(s=r[2])||void 0===s?void 0:s.date)===o&&delete e.NotificationController.notifications[2];return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/060.js"}],[281,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:61,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=61;const r=function(e){const t=(new Date).getTime();e.AppStateController?(e.AppStateController.recoveryPhraseReminderHasBeenShown=!1,e.AppStateController.recoveryPhraseReminderLastShown=t):e.AppStateController={recoveryPhraseReminderHasBeenShown:!1,recoveryPhraseReminderLastShown:t};return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/061.js"}],[282,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:62,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=62;const r=function(e){if(e.MetaMetricsController){const{metaMetricsSendCount:t}=e.MetaMetricsController;t!==undefined&&delete e.MetaMetricsController.metaMetricsSendCount}return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/062.js"}],[2829,{"./types.js":2830},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=e("./types.js");const o={type:"xstate.init"},s="xstate.assign";function i(e){return e===undefined?[]:[].concat(e)}function a(e,t){return"string"==typeof(e="string"==typeof e&&t&&t[e]?t[e]:e)?{type:e}:"function"==typeof e?{type:e.name,exec:e}:e}function l(e){return t=>e===t}function c(e){return"string"==typeof e?{type:e}:e}function d(e,t){return{value:e,context:t,actions:[],changed:!1,matches:l(e)}}function u(e,t,r){let n=t,o=!1;return[e.filter(e=>{if(e.type===s){o=!0;let t=Object.assign({},n);return"function"==typeof e.assignment?t=e.assignment(n,r):Object.keys(e.assignment).forEach(o=>{t[o]="function"==typeof e.assignment[o]?e.assignment[o](n,r):e.assignment[o]}),n=t,!1}return!0}),n,o]}const p=(e,t)=>e.actions.forEach(({exec:r})=>r&&r(e.context,t));Object.defineProperty(r,"InterpreterStatus",{enumerable:!0,get:function(){return n.InterpreterStatus}}),r.assign=function(e){return{type:s,assignment:e}},r.createMachine=function(e,t={}){const[r,n]=u(i(e.states[e.initial].entry).map(e=>a(e,t.actions)),e.context,o),s={config:e,_options:t,initialState:{value:e.initial,actions:r,context:n,matches:l(e.initial)},transition:(t,r)=>{const{value:n,context:o}="string"==typeof t?{value:t,context:e.context}:t,p=c(r),h=e.states[n];if(h.on){const t=i(h.on[p.type]);for(const r of t){if(r===undefined)return d(n,o);const{target:t,actions:c=[],cond:g=()=>!0}="string"==typeof r?{target:r}:r,m=t===undefined,f=null!=t?t:n,C=e.states[f];if(g(o,p)){const e=(m?i(c):[].concat(h.exit,c,C.entry).filter(e=>e)).map(e=>a(e,s._options.actions)),[r,d,g]=u(e,o,p),f=null!=t?t:n;return{value:f,context:d,actions:r,changed:t!==n||r.length>0||g,matches:l(f)}}}}return d(n,o)}};return s},r.interpret=function(e){let t=e.initialState,r=n.InterpreterStatus.NotStarted;const s=new Set,i={_machine:e,send:o=>{r===n.InterpreterStatus.Running&&(t=e.transition(t,o),p(t,c(o)),s.forEach(e=>e(t)))},subscribe:e=>(s.add(e),e(t),{unsubscribe:()=>s.delete(e)}),start:s=>{if(s){const r="object"==typeof s?s:{context:e.config.context,value:s};t={value:r.value,actions:[],context:r.context,matches:l(r.value)}}else t=e.initialState;return r=n.InterpreterStatus.Running,p(t,o),i},stop:()=>(r=n.InterpreterStatus.Stopped,s.clear(),i),get state(){return t},get status(){return r}};return i}}}},{package:"@metamask/snaps-controllers>@xstate/fsm",file:"node_modules/@xstate/fsm/lib/index.js"}],[283,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:63,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=63;const r=function(e){var t,r,n,o,s,i,a,l;const c=null==e||null===(t=e.PreferencesController)||void 0===t?void 0:t.accountTokens,d=null==e||null===(r=e.PreferencesController)||void 0===r?void 0:r.accountHiddenTokens,u={};c&&Object.keys(c).forEach(e=>{Object.keys(c[e]).forEach(t=>{const r=c[e][t];u[t]===undefined?u[t]={[e]:r}:u[t]={...u[t],[e]:r}})});const p={};d&&Object.keys(d).forEach(e=>{Object.keys(d[e]).forEach(t=>{const r=d[e][t];p[t]===undefined?p[t]={[e]:r}:p[t]={...p[t],[e]:r}})});e.TokensController?(e.TokensController.allTokens=u,e.TokensController.allIgnoredTokens=p):e.TokensController={allTokens:u,allIgnoredTokens:p};return null==e||null===(n=e.PreferencesController)||void 0===n||delete n.accountHiddenTokens,null==e||null===(o=e.PreferencesController)||void 0===o||delete o.accountTokens,null==e||null===(s=e.PreferencesController)||void 0===s||delete s.assetImages,null==e||null===(i=e.PreferencesController)||void 0===i||delete i.hiddenTokens,null==e||null===(a=e.PreferencesController)||void 0===a||delete a.tokens,null==e||null===(l=e.PreferencesController)||void 0===l||delete l.suggestedTokens,e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/063.js"}],[2830,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n;Object.defineProperty(r,"__esModule",{value:!0}),r.InterpreterStatus=void 0,(n=r.InterpreterStatus||(r.InterpreterStatus={}))[n.NotStarted=0]="NotStarted",n[n.Running=1]="Running",n[n.Stopped=2]="Stopped"}}},{package:"@metamask/snaps-controllers>@xstate/fsm",file:"node_modules/@xstate/fsm/lib/types.js"}],[284,{"@metamask/transaction-controller":2316,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("@metamask/transaction-controller");const s="sentEther";r.default={version:64,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=64;const r=function(e){var t;const r=null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions;if((0,n.isPlainObject)(r))for(const e of Object.values(r))e.type===s&&(e.type=o.TransactionType.simpleSend),e.history&&e.history.map(e=>(e.type&&e.type===s&&(e.type=o.TransactionType.simpleSend),e));return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/064.js"}],[285,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:65,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=65;const r=function(e){if(e.PreferencesController){const{completedOnboarding:t,firstTimeFlowType:r}=e.PreferencesController;e.OnboardingController=e.OnboardingController??{},t!==undefined&&(e.OnboardingController.completedOnboarding=t,delete e.PreferencesController.completedOnboarding),r!==undefined&&(e.OnboardingController.firstTimeFlowType=r,delete e.PreferencesController.firstTimeFlowType)}return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/065.js"}],[286,{"../../../shared/constants/hardware-wallets":4984,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash"),o=e("../../../shared/constants/hardware-wallets");r.default={version:66,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=66;const r=function(e){var t;const r=window.navigator.hid?o.LedgerTransportTypes.webhid:o.LedgerTransportTypes.u2f,n=Boolean(null===(t=e.PreferencesController)||void 0===t?void 0:t.useLedgerLive),s={...e,PreferencesController:{...null==e?void 0:e.PreferencesController,ledgerTransportType:n?o.LedgerTransportTypes.live:r}};return delete s.PreferencesController.useLedgerLive,s}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/066.js"}],[287,{"../../../shared/constants/network":4992,"bignumber.js":3209,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=e("lodash"),s=(n=e("bignumber.js"))&&n.__esModule?n:{default:n},i=e("../../../shared/constants/network");const a=e=>new s.default(e||"0x0",16).gt(0);r.default={version:67,async migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=67;const r=function(e){var t,r,n;const o=(null==e?void 0:e.PreferencesController)||{},s=o.preferences||{};if(s.showTestNetworks)return e;const l=(null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions)||{},c=(null===(r=e.NetworkController)||void 0===r?void 0:r.provider)||{},d=(null===(n=e.CachedBalancesController)||void 0===n?void 0:n.cachedBalances)||{},u=i.TEST_CHAINS.includes(null==c?void 0:c.chainId),p=Object.values(l).some(({chainId:e})=>i.TEST_CHAINS.includes(e)),h=i.TEST_CHAINS.some(e=>Object.values(d[e]||{}).some(a)),g=u||p||h,m={...e,PreferencesController:{...o,preferences:{...s,showTestNetworks:g}}};return m}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/067.js"}],[288,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:68,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=68;const r=function(e){const{PermissionsController:t={},PermissionsMetadata:r={},...n}=e,{domainMetadata:i={},permissionsHistory:a={},permissionsLog:l=[]}=r;return{...n,PermissionController:o(t),PermissionLogController:{permissionActivityLog:l,permissionHistory:a},SubjectMetadataController:s(i)}}(t.data);return t.data=r,t}};function o(e){const{domains:t={}}=e,r="eth_accounts";return{subjects:Object.entries(t).reduce((e,[t,n])=>{const{permissions:[o]}=n,s=o.caveats.find(e=>"exposedAccounts"===e.name),i={...o,caveats:[{type:"restrictReturnedAccounts",value:s.value}]};return delete i["@context"],e[t]={origin:t,permissions:{[r]:i}},e},{})}}function s(e){return{subjectMetadata:Object.entries(e).reduce((e,[t,r])=>{const{name:n=null,icon:o=null,extensionId:s=null,...i}=r;return delete i.lastUpdated,delete i.host,t&&(e[t]={name:n,iconUrl:o,extensionId:s,...i,origin:t}),e},{})}}}}},{package:"$root$",file:"app/scripts/migrations/068.js"}],[289,{"@metamask/permission-controller":1819,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/permission-controller"),o=e("lodash");r.default={version:69,async migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=69;const r=function(e){var t;if("object"==typeof(null==e||null===(t=e.SubjectMetadataController)||void 0===t?void 0:t.subjectMetadata)){const{SubjectMetadataController:{subjectMetadata:t}}=e;Object.values(t).forEach(e=>{e&&"object"==typeof e&&!Array.isArray(e)&&(e.subjectType=e.extensionId?n.SubjectType.Extension:n.SubjectType.Website)})}return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/069.js"}],[29,{"./assets-contract-controller-messenger":28,"./network-order-controller-messenger":30,"./nft-controller-messenger":31,"./nft-detection-controller-messenger":32,"./token-rates-controller-messenger":33},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"getAssetsContractControllerMessenger",{enumerable:!0,get:function(){return i.getAssetsContractControllerMessenger}}),Object.defineProperty(r,"getNetworkOrderControllerMessenger",{enumerable:!0,get:function(){return a.getNetworkOrderControllerMessenger}}),Object.defineProperty(r,"getNftControllerMessenger",{enumerable:!0,get:function(){return o.getNftControllerMessenger}}),Object.defineProperty(r,"getNftDetectionControllerMessenger",{enumerable:!0,get:function(){return s.getNftDetectionControllerMessenger}}),Object.defineProperty(r,"getTokenRatesControllerMessenger",{enumerable:!0,get:function(){return n.getTokenRatesControllerMessenger}});var n=e("./token-rates-controller-messenger"),o=e("./nft-controller-messenger"),s=e("./nft-detection-controller-messenger"),i=e("./assets-contract-controller-messenger"),a=e("./network-order-controller-messenger")}}},{package:"$root$",file:"app/scripts/controller-init/messengers/assets/index.ts"}],[290,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:70,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=70;const r=function(e){var t;if(Array.isArray(null==e||null===(t=e.PermissionLogController)||void 0===t?void 0:t.permissionActivityLog)){const{PermissionLogController:{permissionActivityLog:t}}=e;t.forEach(e=>{e&&"object"==typeof e&&!Array.isArray(e)&&(delete e.request,delete e.response)})}return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/070.js"}],[291,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:71,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=71;const r=function(e){e.NotificationController&&(e.AnnouncementController={announcements:e.NotificationController.notifications},delete e.NotificationController);return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/071.js"}],[292,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:72,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=72;const r=function(e){const t=(null==e?void 0:e.PreferencesController)||{};return{...e,PreferencesController:{...t,knownMethodData:{}}}}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/072.js"}],[293,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:73,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=73;const r=function(e){const t=(null==e?void 0:e.PreferencesController)||{};return{...e,PreferencesController:{...t,knownMethodData:{}}}}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/073.js"}],[294,{"../../../shared/constants/network":4992,"bignumber.js":3209,lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=e("lodash"),s=(n=e("bignumber.js"))&&n.__esModule?n:{default:n},i=e("../../../shared/constants/network");const a=e=>new s.default(e||"0x0",16).gt(0),l=["0x3","0x2a","0x4"],c={"0x3":{rpcUrl:(0,i.getRpcUrl)({network:"ropsten"}),nickname:"Ropsten",ticker:"RopstenETH"},"0x2a":{rpcUrl:(0,i.getRpcUrl)({network:"kovan"}),nickname:"Kovan",ticker:"KovanETH"},"0x4":{rpcUrl:(0,i.getRpcUrl)({network:"rinkeby"}),nickname:"Rinkeby",ticker:"RinkebyETH"}};r.default={version:74,async migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=74;const r=function(e){var t,r;const n=(null==e?void 0:e.PreferencesController)||{},s=n.preferences||{},i=(null==e?void 0:e.NetworkController)||{},d=(null==i?void 0:i.provider)||{},u=l.filter(e=>e===(null==d?void 0:d.chainId));if(!s.showTestNetworks&&0===u.length)return e;const p=(null==e||null===(t=e.TransactionController)||void 0===t?void 0:t.transactions)||{},h=(null===(r=e.CachedBalancesController)||void 0===r?void 0:r.cachedBalances)||{},g=Object.values(p).filter(({chainId:e})=>l.includes(e)).map(({chainId:e})=>e),m=l.filter(e=>Object.values(h[e]||{}).some(a)),f=(0,o.uniq)([...m,...g,...u]),C=n.frequentRpcListDetail??[];f.forEach(e=>{C.find(t=>t.chainId===e)||C.unshift({rpcUrl:c[e].rpcUrl,chainId:e,ticker:c[e].ticker,nickname:c[e].nickname,rpcPrefs:{}})}),C.length&&(n.frequentRpcListDetail=C);if(u.length){const e=u[0];i.provider={...i.provider,type:"rpc",rpcUrl:c[e].rpcUrl,chainId:e,nickname:c[e].nickname,ticker:c[e].ticker}}return{...e,PreferencesController:{...n},NetworkController:{...i}}}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/074.js"}],[295,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:75,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=75;const r=function(e){return delete e.ThreeBoxController,e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/075.js"}],[296,{lodash:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:76,async migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=76;const r=function(e){var t;if(e.CollectiblesController){const{allCollectibleContracts:t,allCollectibles:r,ignoredCollectibles:n,...o}=e.CollectiblesController;e.NftController={...t?{allNftContracts:t}:{},...r?{allNfts:r}:{},...n?{ignoredNfts:n}:{},...o},delete e.CollectiblesController}null!==(t=e.PreferencesController)&&void 0!==t&&t.useCollectibleDetection&&(e.PreferencesController.useNftDetection=e.PreferencesController.useCollectibleDetection,delete e.PreferencesController.useCollectibleDetection);return e}(t.data);return t.data=r,t}}}}},{package:"$root$",file:"app/scripts/migrations/076.js"}],[297,{"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e){(0,n.hasProperty)(e,"PreferencesController")&&(0,n.isObject)(e.PreferencesController)&&(0,n.hasProperty)(e.PreferencesController,"frequentRpcListDetail")&&(0,n.isObject)(e.NetworkController)&&(0,n.hasProperty)(e.NetworkController,"networkConfigurations")&&delete e.PreferencesController.frequentRpcListDetail;return{...e}};var n=e("@metamask/utils")}}},{package:"$root$",file:"app/scripts/migrations/077-supplements/077-supplement-for-082.ts"}],[298,{"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e){(0,n.hasProperty)(e,"NetworkController")&&(0,n.isObject)(e.NetworkController)&&(0,n.hasProperty)(e.NetworkController,"network")&&(0,n.hasProperty)(e.NetworkController,"networkId")&&delete e.NetworkController.network;return{...e}};var n=e("@metamask/utils")}}},{package:"$root$",file:"app/scripts/migrations/077-supplements/077-supplement-for-084.ts"}],[299,{"@metamask/utils":2361},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e){(0,n.hasProperty)(e,"NetworkController")&&(0,n.isObject)(e.NetworkController)&&(0,n.hasProperty)(e.NetworkController,"provider")&&(0,n.hasProperty)(e.NetworkController,"providerConfig")&&delete e.NetworkController.provider;return{...e}};var n=e("@metamask/utils")}}},{package:"$root$",file:"app/scripts/migrations/077-supplements/077-supplement-for-086.ts"}],[30,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getNetworkOrderControllerMessenger=function(e){return e.getRestricted({name:"NetworkOrderController",allowedEvents:["NetworkController:stateChange","NetworkController:networkRemoved"],allowedActions:["NetworkController:getState","NetworkController:setActiveNetwork"]})}}}},{package:"$root$",file:"app/scripts/controller-init/messengers/assets/network-order-controller-messenger.ts"}]],[],{});